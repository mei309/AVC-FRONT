{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { NavigationEnd } from '@angular/router';\nimport { distinctUntilChanged, take } from 'rxjs/operators';\nimport { ReplaySubject } from 'rxjs';\nimport { cloneDeep } from 'lodash-es';\nimport { ReceiptDialog } from './receipt-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./receipt.service\";\nimport * as i3 from \"../genral.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../components/dynamic-field/dynamic-field.directive\";\nimport * as i8 from \"../components/dynamic-form/dynamic-form.component\";\nimport * as i9 from \"../components/tablesinput/justshow.component\";\n\nfunction ReceiveCOrder_fieldset_0_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 5);\n  }\n\n  if (rf & 2) {\n    const field_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"field\", field_r4)(\"group\", ctx_r3.form);\n  }\n}\n\nconst _c2 = function () {\n  return {\n    \"width\": \"90%\"\n  };\n};\n\nfunction ReceiveCOrder_fieldset_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"fieldset\", 2);\n    i0.ɵɵelementStart(1, \"legend\");\n    i0.ɵɵelementStart(2, \"h1\");\n    i0.ɵɵi18n(3, 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, ReceiveCOrder_fieldset_0_ng_container_4_Template, 1, 2, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(2, _c2));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.poConfig);\n  }\n}\n\nfunction ReceiveCOrder_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"dynamic-form\", 6);\n    i0.ɵɵlistener(\"submitForm\", function ReceiveCOrder_div_1_Template_dynamic_form_submitForm_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.submit($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"fields\", ctx_r1.regConfig)(\"putData\", ctx_r1.putData);\n  }\n}\n\nfunction ReceiveCOrder_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"just-show\", 7);\n    i0.ɵɵlistener(\"submitForm\", function ReceiveCOrder_div_2_Template_just_show_submitForm_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.submitBouns($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"oneColumns\", ctx_r2.regConfig)(\"dataSource\", ctx_r2.putData);\n  }\n}\n\nexport class ReceiveCOrder {\n  constructor(router, _Activatedroute, cdRef, localService, genral, dialog, fb) {\n    this.router = router;\n    this._Activatedroute = _Activatedroute;\n    this.cdRef = cdRef;\n    this.localService = localService;\n    this.genral = genral;\n    this.dialog = dialog;\n    this.fb = fb;\n    this.OrderdItems = new ReplaySubject();\n    this.putData = null;\n    this.isDataAvailable = false;\n    this.isFirstDataAvailable = false;\n    this.fromNew = true;\n    this.onlyBouns = false;\n  }\n\n  ngOnInit() {\n    this._Activatedroute.paramMap.pipe(take(1)).subscribe(params => {\n      if (params.get('poCode')) {\n        var po = +params.get('poCode');\n\n        if (params.get('id')) {\n          this.localService.getReceive(+params.get('id')).pipe(take(1)).subscribe(val => {\n            if ('EDITABLE' !== val['editStatus']) {\n              this.putData = val;\n              this.setUpRegConfigLock();\n            } else {\n              this.setOrderItemsEdit(val);\n            }\n          });\n          this.fromNew = false;\n        } else {\n          this.setUpOrderItems(po);\n        }\n      } else {\n        this.setBeginChoose();\n      }\n    });\n\n    this.navigationSubscription = this.router.events.subscribe(e => {\n      // If it is a NavigationEnd event re-initalise the component\n      if (e instanceof NavigationEnd) {\n        this.isDataAvailable = false;\n        this.isFirstDataAvailable = false;\n        this.putData = null;\n        this.poID = null;\n\n        if (this.poConfig) {\n          this.form.get('poCode').setValue(null);\n        } else {\n          this.setBeginChoose();\n        }\n\n        this.cdRef.detectChanges();\n        this.isFirstDataAvailable = true;\n      }\n    });\n  }\n\n  setBeginChoose() {\n    this.form = this.fb.group({});\n    this.form.addControl('poCode', this.fb.control(''));\n    this.form.get('poCode').valueChanges.pipe(distinctUntilChanged()).subscribe(selectedValue => {\n      if (selectedValue && selectedValue.hasOwnProperty('id') && this.poID != selectedValue['id']) {\n        this.setUpOrderItems(selectedValue['id']);\n        this.isFirstDataAvailable = false;\n        this.poID = selectedValue['id'];\n      }\n    });\n    this.isFirstDataAvailable = true;\n    this.poConfig = [{\n      type: 'selectgroup',\n      inputType: 'supplierName',\n      options: this.localService.getPoCashewCodesOpen(),\n      collections: [{\n        type: 'select',\n        label: \"Supplier\"\n      }, {\n        type: 'select',\n        label: \"#PO\",\n        name: 'poCode',\n        collections: 'somewhere'\n      }]\n    }];\n  }\n\n  setUpOrderItems(idnum) {\n    this.localService.getOrderPO(idnum).pipe(take(1)).subscribe(val => {\n      this.OrderdItems.next(val['orderItems']);\n      this.putData = {\n        poCode: val['poCode']\n      };\n      this.isDataAvailable = true;\n    });\n    this.setUpRegConfig();\n  }\n\n  setOrderItemsEdit(val) {\n    if (val['referencedOrder']) {\n      this.localService.getOrder(val['referencedOrder']).pipe(take(1)).subscribe(value => {\n        this.OrderdItems.next(value ? value['orderItems'] : []);\n        this.setUpEditRecieving(value ? value['orderItems'] : [], val);\n      });\n    } else {\n      // this.localService.getOrderPO(ponum).pipe(take(1)).subscribe( value => {\n      //     this.OrderdItems.next(value? value['orderItems'] : []);\n      this.setUpEditRecieving([], val); // });\n    }\n  }\n\n  setUpEditRecieving(orderItems, val) {\n    var recivingItems = [];\n    val['receiptItems'].forEach(element => {\n      if (element['orderItem']) {\n        element['orderItem'] = orderItems.find(xx => xx.id === element['orderItem']['id']);\n      }\n\n      var newArray = [];\n      var newArrayExtra = [];\n      element['storageForms'].forEach(storage => {\n        if (storage['className'] === 'ExtraAdded') {\n          newArrayExtra.push(storage);\n        } else {\n          if (storage['avgTestedWeight'] || storage['sampleWeights'] || storage['sampleContainerWeights']) {\n            storage['samplesWeight'] = {\n              sampleContainerWeights: storage['sampleContainerWeights'],\n              numberOfSamples: storage['numberOfSamples'],\n              avgTestedWeight: storage['avgTestedWeight'],\n              sampleWeights: storage['sampleWeights']\n            };\n            delete storage['sampleContainerWeights'];\n            delete storage['numberOfSamples'];\n            delete storage['avgTestedWeight'];\n            delete storage['sampleWeights'];\n          }\n\n          newArray.push(storage);\n        }\n      });\n\n      if (newArrayExtra.length) {\n        element['bouns'] = {\n          extraAdded: newArrayExtra\n        };\n      }\n\n      element['storageForms'] = newArray;\n      recivingItems.push(element);\n    });\n    val['receiptItems'] = recivingItems;\n    this.putData = val;\n    this.setUpRegConfig();\n    this.isDataAvailable = true;\n  }\n\n  setUpRegConfig() {\n    this.regConfig = [{\n      type: 'selectgroup',\n      inputType: 'supplierName',\n      disable: true,\n      collections: [{\n        type: 'select',\n        label: \"Supplier\"\n      }, {\n        type: 'select',\n        label: \"#PO\",\n        name: 'poCode'\n      }]\n    }, {\n      type: 'date',\n      label: \"Receiving date\",\n      value: 'timeNow',\n      name: 'recordedTime',\n      options: 'withTime',\n      // disable: disable,\n      validations: [{\n        name: 'required',\n        validator: Validators.required,\n        message: \"Receiving date Required\"\n      }]\n    }, {\n      type: 'bigexpand',\n      label: \"Receive product\",\n      name: 'receiptItems',\n      value: 'required',\n      // options: 'aloneNoAdd',\n      collections: [{\n        type: 'selectLine',\n        name: 'orderItem',\n        label: \"Orderd item\",\n        options: this.getOrderdItems(),\n        collections: [{\n          name: 'item',\n          type: 'value'\n        }, {\n          name: 'numberUnits',\n          type: 'value'\n        } // {\n        //     name: 'unitPrice',\n        //     type: 'value'\n        // },\n        // {\n        //     name:'deliveryDate'\n        // },\n        ]\n      }, {\n        type: 'select',\n        label: \"Item reciving\",\n        name: 'item',\n        collections: 'somewhere',\n        inputType: 'orderItem',\n        options: this.genral.getItemsCashew('Raw')\n      }, {\n        type: 'selectMU',\n        label: \"Weight unit\",\n        name: 'measureUnit'\n      }, {\n        type: 'inputselect',\n        name: 'extraRequested',\n        collections: [{\n          type: 'input',\n          label: \"Extra requseted\",\n          name: 'amount',\n          inputType: 'numeric',\n          options: 3\n        }, {\n          type: 'select',\n          label: \"Weight unit\",\n          name: 'measureUnit',\n          options: ['KG', 'LBS']\n        }]\n      }, {\n        type: 'popup',\n        label: \"Extra received\",\n        name: 'bouns',\n        collections: [{\n          type: 'bigexpand',\n          name: 'extraAdded',\n          options: 'Inline',\n          collections: [{\n            type: 'input',\n            label: \"Bag weight\",\n            name: 'unitAmount',\n            inputType: 'numeric',\n            options: 3\n          }, {\n            type: 'input',\n            label: \"Number of bags\",\n            name: 'numberUnits',\n            inputType: 'numeric',\n            options: 3\n          }, {\n            type: 'select',\n            label: \"Warehouse location\",\n            name: 'warehouseLocation',\n            collections: 'somewhere',\n            options: this.genral.getWearhouses()\n          }, {\n            type: 'divider',\n            inputType: 'divide'\n          }],\n          validations: [{\n            name: 'unitAmount',\n            message: \"a received storage must have unit weight and number of bags\"\n          }, {\n            name: 'numberUnits'\n          }]\n        }, {\n          type: 'button',\n          label: \"Save\",\n          name: 'submit'\n        }]\n      }, {\n        type: 'divider',\n        inputType: 'newlinespace'\n      }, {\n        type: 'bigexpand',\n        label: \"Amounts\",\n        name: 'storageForms',\n        options: 'Inline',\n        collections: [{\n          type: 'input',\n          label: \"Bag weight\",\n          name: 'unitAmount',\n          inputType: 'numeric',\n          options: 3\n        }, {\n          type: 'input',\n          label: \"Number of bags\",\n          name: 'numberUnits',\n          inputType: 'numeric',\n          options: 3\n        }, {\n          type: 'select',\n          label: \"Warehouse location\",\n          name: 'warehouseLocation',\n          collections: 'somewhere',\n          options: this.genral.getWearhouses()\n        }, {\n          type: 'popup',\n          label: \"Samples\",\n          name: 'samplesWeight',\n          inputType: true,\n          collections: [// {\n          //     type: 'array',\n          //     label: 'Empty bag weight',\n          //     name: 'sampleContainerWeight',\n          //     inputType: 'numeric',\n          //     options: 3,\n          // },\n          {\n            type: 'arrayordinal',\n            label: \"Empty bag weights\",\n            inputType: 'inline',\n            name: 'sampleContainerWeights',\n            options: 3,\n            collections: 1\n          }, {\n            type: 'arrayordinal',\n            label: \"Samples (+-from unit weight)\",\n            // inputType: 'numeric',\n            name: 'sampleWeights',\n            options: 3,\n            collections: 30\n          }, {\n            type: 'input',\n            label: \"Avrage weight (full weight)\",\n            name: 'avgTestedWeight',\n            inputType: 'numeric',\n            options: 3\n          }, {\n            type: 'input',\n            label: \"number of samples (if put avrage)\",\n            name: 'numberOfSamples',\n            inputType: 'numeric'\n          }, {\n            type: 'button',\n            label: \"Submit\",\n            name: 'submit'\n          }]\n        }, {\n          type: 'divider',\n          inputType: 'divide'\n        }],\n        validations: [{\n          name: 'unitAmount',\n          message: \"a received storage must have weight and number of bags\"\n        }, {\n          name: 'numberUnits'\n        }]\n      }, {\n        type: 'divider',\n        inputType: 'titel',\n        label: \"Invoice amounts\"\n      }, {\n        type: 'inputselect',\n        name: 'receivedOrderUnits',\n        options: 'orderItem',\n        inputType: 'parentnumberUnits',\n        collections: [{\n          type: 'input',\n          label: \"Payable weight\",\n          name: 'amount',\n          inputType: 'numeric',\n          options: 3,\n          validations: [{\n            name: 'required',\n            validator: Validators.required,\n            message: \"Payable weight Required\"\n          }]\n        }, {\n          type: 'select',\n          label: \"Measure unit\",\n          name: 'measureUnit',\n          value: 'LBS',\n          options: this.genral.getMeasureUnit()\n        }]\n      }, {\n        type: 'inputselect',\n        name: 'unitPrice',\n        options: 'orderItem',\n        inputType: 'parentunitPrice',\n        collections: [{\n          type: 'input',\n          label: \"Price per unit\",\n          name: 'amount',\n          inputType: 'numeric',\n          options: 3\n        }, {\n          type: 'select',\n          label: \"Currency\",\n          name: 'currency',\n          options: ['USD', 'VND']\n        }]\n      }, {\n        type: 'divider',\n        inputType: 'divide'\n      }],\n      validations: [{\n        name: 'item',\n        message: \"a received item must have an item, measure unit and at least one storage\"\n      }, {\n        name: 'measureUnit'\n      }, {\n        name: 'storageForms',\n        validator: [{\n          name: 'unitAmount'\n        }, {\n          name: 'numberUnits'\n        }]\n      }]\n    }, {\n      type: 'button',\n      label: \"Submit\",\n      name: 'submit'\n    }];\n  }\n\n  getOrderdItems() {\n    return this.OrderdItems.asObservable();\n  }\n\n  submit(value) {\n    value['receiptItems'].forEach(element => {\n      if (element['bouns']) {\n        element['extraAdded'] = element['bouns']['extraAdded'];\n        delete element['bouns'];\n      }\n\n      if (!element['extraRequested']['amount']) {\n        delete element['extraRequested'];\n      }\n\n      if (!element['receivedOrderUnits']['amount']) {\n        delete element['receivedOrderUnits'];\n      }\n\n      if (!element['unitPrice']['amount']) {\n        delete element['unitPrice'];\n      }\n\n      element['storageForms'].forEach(ele => {\n        if (ele['samplesWeight']) {\n          ele['sampleContainerWeights'] = ele['samplesWeight']['sampleContainerWeights'] ? ele['samplesWeight']['sampleContainerWeights'].filter(amou => amou.amount) : null;\n          ele['avgTestedWeight'] = ele['samplesWeight']['avgTestedWeight'];\n          ele['numberOfSamples'] = ele['samplesWeight']['numberOfSamples'];\n          ele['sampleWeights'] = ele['samplesWeight']['sampleWeights'] ? ele['samplesWeight']['sampleWeights'].filter(amou => amou.amount) : null;\n          delete ele['samplesWeight'];\n        }\n      });\n    });\n    this.localService.addEditRecivingCashewOrder(value, this.fromNew).pipe(take(1)).subscribe(val => {\n      const dialogRef = this.dialog.open(ReceiptDialog, {\n        width: '80%',\n        data: {\n          receipt: cloneDeep(val),\n          fromNew: true,\n          type: 'Cashew'\n        }\n      });\n      dialogRef.afterClosed().subscribe(data => {\n        if (data === \"Edit receive\" || data === \"Receive extra\") {\n          this.fromNew = false;\n          this.isDataAvailable = false;\n          this.OrderdItems = new ReplaySubject();\n          this.setOrderItemsEdit(val);\n          this.cdRef.detectChanges();\n        } // else if(data === 'Edit order') {\n        //     this.router.navigate(['Main/ordready/NewCashewOrder',{id: val['poCode']['id']}]);\n        // }\n        else {\n          this.router.navigate(['../ReceiveCReports'], {\n            relativeTo: this._Activatedroute\n          });\n        }\n      });\n    });\n  }\n\n  submitBouns(value) {\n    this.localService.receiveExtra(value, this.putData['id']).pipe(take(1)).subscribe(val => {\n      const dialogRef = this.dialog.open(ReceiptDialog, {\n        width: '80%',\n        data: {\n          receipt: cloneDeep(val),\n          fromNew: true,\n          type: 'Cashew'\n        }\n      });\n      dialogRef.afterClosed().subscribe(data => {\n        if (data === \"Receive bouns\") {\n          this.putData = val;\n          this.setUpRegConfigLock();\n          this.cdRef.detectChanges();\n        } else {\n          this.router.navigate(['../ReceiveCReports', {\n            number: 1\n          }], {\n            relativeTo: this._Activatedroute\n          });\n        }\n      });\n    });\n  }\n\n  setUpRegConfigLock() {\n    this.onlyBouns = true;\n    this.regConfig = [{\n      type: 'name2',\n      label: \"#PO\",\n      name: 'poCode',\n      collections: 'supplierName'\n    }, {\n      type: 'dateTime',\n      label: \"Date and time\",\n      name: 'recordedTime'\n    }, {\n      type: 'arrayGroup',\n      label: \"Received products\",\n      name: 'receiptItems',\n      collections: [// {\n      //     name: 'id',\n      //     titel: 'id',\n      //     type: 'idGroup',\n      // },\n      {\n        type: 'nameId',\n        name: 'item',\n        label: \"Item descrption\",\n        group: 'item'\n      }, {\n        type: 'kidArray',\n        label: \"Amounts\",\n        name: 'storageForms',\n        collections: [{\n          type: 'normal',\n          label: \"Bag weight\",\n          name: 'unitAmount' // collections: 'measureUnit',\n\n        }, {\n          type: 'normal',\n          label: \"Number of bags\",\n          name: 'numberUnits'\n        }, {\n          type: 'nameId',\n          label: \"Warehouse location\",\n          name: 'warehouseLocation'\n        }, {\n          type: 'check',\n          label: \"Extra\",\n          name: 'className',\n          collections: 'ExtraAdded'\n        }, {\n          type: 'normal',\n          label: \"Empty bag weight\",\n          name: 'sampleContainerWeight'\n        }, {\n          type: 'normal',\n          label: \"Number of samples\",\n          name: 'numberOfSamples'\n        }, {\n          type: 'normal',\n          label: \"Avrage weight\",\n          name: 'avgTestedWeight'\n        }]\n      }, {\n        type: 'nameId',\n        name: 'extraRequested',\n        label: \"Extra requseted\",\n        group: 'item'\n      }, {\n        type: 'popup',\n        label: \"Extra receive\",\n        name: 'bouns',\n        group: 'item',\n        collections: [{\n          type: 'bigexpand',\n          name: 'extraAdded',\n          label: \"Extra receive\",\n          options: 'NoFrame',\n          collections: [{\n            type: 'input',\n            label: \"Bag weight\",\n            name: 'unitAmount',\n            inputType: 'numeric',\n            options: 3\n          }, {\n            type: 'input',\n            label: \"Number of bags\",\n            name: 'numberUnits',\n            inputType: 'numeric',\n            options: 3\n          }, {\n            type: 'select',\n            label: \"Warehouse location\",\n            name: 'warehouseLocation',\n            collections: 'somewhere',\n            options: this.genral.getWearhouses()\n          }, {\n            type: 'divider',\n            inputType: 'divide'\n          }],\n          validations: [{\n            name: 'unitAmount',\n            message: \"a received storage must have weight and number of bags\"\n          }, {\n            name: 'numberUnits'\n          }]\n        }, {\n          type: 'button',\n          label: \"Save\",\n          name: 'submit'\n        }]\n      }]\n    }];\n  }\n\n  ngOnDestroy() {\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n  }\n\n}\n\nReceiveCOrder.ɵfac = function ReceiveCOrder_Factory(t) {\n  return new (t || ReceiveCOrder)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.ReceiptService), i0.ɵɵdirectiveInject(i3.Genral), i0.ɵɵdirectiveInject(i4.MatDialog), i0.ɵɵdirectiveInject(i5.FormBuilder));\n};\n\nReceiveCOrder.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReceiveCOrder,\n  selectors: [[\"receive-c-order\"]],\n  decls: 3,\n  vars: 3,\n  consts: function () {\n    let i18n_0;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_3301100013772706995$$SRC_APP_RECEIPT_RECEIVE_C_ORDER_COMPONENT_TS__1 = goog.getMsg(\"PO# receving\");\n      i18n_0 = MSG_EXTERNAL_3301100013772706995$$SRC_APP_RECEIPT_RECEIVE_C_ORDER_COMPONENT_TS__1;\n    } else {\n      i18n_0 = \"PO# receving\";\n    }\n\n    let i18n_3;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_8883702626192944805$$SRC_APP_RECEIPT_RECEIVE_C_ORDER_COMPONENT_TS__4 = goog.getMsg(\"Receving cashew order\");\n      i18n_3 = MSG_EXTERNAL_8883702626192944805$$SRC_APP_RECEIPT_RECEIVE_C_ORDER_COMPONENT_TS__4;\n    } else {\n      i18n_3 = \"Receving cashew order\";\n    }\n\n    let i18n_5;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_7732634355568906310$$SRC_APP_RECEIPT_RECEIVE_C_ORDER_COMPONENT_TS__6 = goog.getMsg(\"Receive bonus\");\n      i18n_5 = MSG_EXTERNAL_7732634355568906310$$SRC_APP_RECEIPT_RECEIVE_C_ORDER_COMPONENT_TS__6;\n    } else {\n      i18n_5 = \"Receive bonus\";\n    }\n\n    return [[3, \"ngStyle\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"ngStyle\"], i18n_0, [\"dynamicField\", \"\", 3, \"field\", \"group\", 4, \"ngFor\", \"ngForOf\"], [\"dynamicField\", \"\", 3, \"field\", \"group\"], [\"mainLabel\", i18n_3, 3, \"fields\", \"putData\", \"submitForm\"], [\"mainLabel\", i18n_5, 3, \"oneColumns\", \"dataSource\", \"submitForm\"]];\n  },\n  template: function ReceiveCOrder_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ReceiveCOrder_fieldset_0_Template, 5, 3, \"fieldset\", 0);\n      i0.ɵɵtemplate(1, ReceiveCOrder_div_1_Template, 2, 2, \"div\", 1);\n      i0.ɵɵtemplate(2, ReceiveCOrder_div_2_Template, 2, 2, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isFirstDataAvailable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isDataAvailable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.onlyBouns);\n    }\n  },\n  directives: [i6.NgIf, i6.NgStyle, i6.NgForOf, i7.DynamicFieldDirective, i8.DynamicFormComponent, i9.JustShowComponent],\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:/Users/isral/OneDrive/Documents/AVC-FRONT/src/app/receipt/receive-c-order.component.ts"],"names":["Validators","NavigationEnd","distinctUntilChanged","take","ReplaySubject","cloneDeep","ReceiptDialog","i0","i1","i2","i3","i4","i5","i6","i7","i8","i9","ReceiveCOrder_fieldset_0_ng_container_4_Template","rf","ctx","ɵɵelementContainer","field_r4","$implicit","ctx_r3","ɵɵnextContext","ɵɵproperty","form","_c2","ReceiveCOrder_fieldset_0_Template","ɵɵelementStart","ɵɵi18n","ɵɵelementEnd","ɵɵtemplate","ctx_r0","ɵɵpureFunction0","ɵɵadvance","poConfig","ReceiveCOrder_div_1_Template","_r6","ɵɵgetCurrentView","ɵɵlistener","ReceiveCOrder_div_1_Template_dynamic_form_submitForm_1_listener","$event","ɵɵrestoreView","ctx_r5","submit","ctx_r1","regConfig","putData","ReceiveCOrder_div_2_Template","_r8","ReceiveCOrder_div_2_Template_just_show_submitForm_1_listener","ctx_r7","submitBouns","ctx_r2","ReceiveCOrder","constructor","router","_Activatedroute","cdRef","localService","genral","dialog","fb","OrderdItems","isDataAvailable","isFirstDataAvailable","fromNew","onlyBouns","ngOnInit","paramMap","pipe","subscribe","params","get","po","getReceive","val","setUpRegConfigLock","setOrderItemsEdit","setUpOrderItems","setBeginChoose","navigationSubscription","events","e","poID","setValue","detectChanges","group","addControl","control","valueChanges","selectedValue","hasOwnProperty","type","inputType","options","getPoCashewCodesOpen","collections","label","name","idnum","getOrderPO","next","poCode","setUpRegConfig","getOrder","value","setUpEditRecieving","orderItems","recivingItems","forEach","element","find","xx","id","newArray","newArrayExtra","storage","push","sampleContainerWeights","numberOfSamples","avgTestedWeight","sampleWeights","length","extraAdded","disable","validations","validator","required","message","getOrderdItems","getItemsCashew","getWearhouses","getMeasureUnit","asObservable","ele","filter","amou","amount","addEditRecivingCashewOrder","dialogRef","open","width","data","receipt","afterClosed","navigate","relativeTo","receiveExtra","number","ngOnDestroy","unsubscribe","ɵfac","ReceiveCOrder_Factory","t","ɵɵdirectiveInject","Router","ActivatedRoute","ChangeDetectorRef","ReceiptService","Genral","MatDialog","FormBuilder","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","consts","i18n_0","ngI18nClosureMode","MSG_EXTERNAL_3301100013772706995$$SRC_APP_RECEIPT_RECEIVE_C_ORDER_COMPONENT_TS__1","goog","getMsg","i18n_3","MSG_EXTERNAL_8883702626192944805$$SRC_APP_RECEIPT_RECEIVE_C_ORDER_COMPONENT_TS__4","i18n_5","MSG_EXTERNAL_7732634355568906310$$SRC_APP_RECEIPT_RECEIVE_C_ORDER_COMPONENT_TS__6","template","ReceiveCOrder_Template","directives","NgIf","NgStyle","NgForOf","DynamicFieldDirective","DynamicFormComponent","JustShowComponent","encapsulation"],"mappings":"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","sourcesContent":["import { Validators } from '@angular/forms';\r\nimport { NavigationEnd } from '@angular/router';\r\nimport { distinctUntilChanged, take } from 'rxjs/operators';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { ReceiptDialog } from './receipt-dialog.component';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/router\";\r\nimport * as i2 from \"./receipt.service\";\r\nimport * as i3 from \"../genral.service\";\r\nimport * as i4 from \"@angular/material/dialog\";\r\nimport * as i5 from \"@angular/forms\";\r\nimport * as i6 from \"@angular/common\";\r\nimport * as i7 from \"../components/dynamic-field/dynamic-field.directive\";\r\nimport * as i8 from \"../components/dynamic-form/dynamic-form.component\";\r\nimport * as i9 from \"../components/tablesinput/justshow.component\";\r\nfunction ReceiveCOrder_fieldset_0_ng_container_4_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementContainer(0, 5);\r\n} if (rf & 2) {\r\n    const field_r4 = ctx.$implicit;\r\n    const ctx_r3 = i0.ɵɵnextContext(2);\r\n    i0.ɵɵproperty(\"field\", field_r4)(\"group\", ctx_r3.form);\r\n} }\r\nconst _c2 = function () { return { \"width\": \"90%\" }; };\r\nfunction ReceiveCOrder_fieldset_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"fieldset\", 2);\r\n    i0.ɵɵelementStart(1, \"legend\");\r\n    i0.ɵɵelementStart(2, \"h1\");\r\n    i0.ɵɵi18n(3, 3);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵtemplate(4, ReceiveCOrder_fieldset_0_ng_container_4_Template, 1, 2, \"ng-container\", 4);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(2, _c2));\r\n    i0.ɵɵadvance(4);\r\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.poConfig);\r\n} }\r\nfunction ReceiveCOrder_div_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r6 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"div\");\r\n    i0.ɵɵelementStart(1, \"dynamic-form\", 6);\r\n    i0.ɵɵlistener(\"submitForm\", function ReceiveCOrder_div_1_Template_dynamic_form_submitForm_1_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(); return ctx_r5.submit($event); });\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"fields\", ctx_r1.regConfig)(\"putData\", ctx_r1.putData);\r\n} }\r\nfunction ReceiveCOrder_div_2_Template(rf, ctx) { if (rf & 1) {\r\n    const _r8 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"div\");\r\n    i0.ɵɵelementStart(1, \"just-show\", 7);\r\n    i0.ɵɵlistener(\"submitForm\", function ReceiveCOrder_div_2_Template_just_show_submitForm_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.submitBouns($event); });\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r2 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"oneColumns\", ctx_r2.regConfig)(\"dataSource\", ctx_r2.putData);\r\n} }\r\nexport class ReceiveCOrder {\r\n    constructor(router, _Activatedroute, cdRef, localService, genral, dialog, fb) {\r\n        this.router = router;\r\n        this._Activatedroute = _Activatedroute;\r\n        this.cdRef = cdRef;\r\n        this.localService = localService;\r\n        this.genral = genral;\r\n        this.dialog = dialog;\r\n        this.fb = fb;\r\n        this.OrderdItems = new ReplaySubject();\r\n        this.putData = null;\r\n        this.isDataAvailable = false;\r\n        this.isFirstDataAvailable = false;\r\n        this.fromNew = true;\r\n        this.onlyBouns = false;\r\n    }\r\n    ngOnInit() {\r\n        this._Activatedroute.paramMap.pipe(take(1)).subscribe(params => {\r\n            if (params.get('poCode')) {\r\n                var po = +params.get('poCode');\r\n                if (params.get('id')) {\r\n                    this.localService.getReceive(+params.get('id')).pipe(take(1)).subscribe(val => {\r\n                        if ('EDITABLE' !== val['editStatus']) {\r\n                            this.putData = val;\r\n                            this.setUpRegConfigLock();\r\n                        }\r\n                        else {\r\n                            this.setOrderItemsEdit(val);\r\n                        }\r\n                    });\r\n                    this.fromNew = false;\r\n                }\r\n                else {\r\n                    this.setUpOrderItems(po);\r\n                }\r\n            }\r\n            else {\r\n                this.setBeginChoose();\r\n            }\r\n        });\r\n        this.navigationSubscription = this.router.events.subscribe((e) => {\r\n            // If it is a NavigationEnd event re-initalise the component\r\n            if (e instanceof NavigationEnd) {\r\n                this.isDataAvailable = false;\r\n                this.isFirstDataAvailable = false;\r\n                this.putData = null;\r\n                this.poID = null;\r\n                if (this.poConfig) {\r\n                    this.form.get('poCode').setValue(null);\r\n                }\r\n                else {\r\n                    this.setBeginChoose();\r\n                }\r\n                this.cdRef.detectChanges();\r\n                this.isFirstDataAvailable = true;\r\n            }\r\n        });\r\n    }\r\n    setBeginChoose() {\r\n        this.form = this.fb.group({});\r\n        this.form.addControl('poCode', this.fb.control(''));\r\n        this.form.get('poCode').valueChanges.pipe(distinctUntilChanged()).subscribe(selectedValue => {\r\n            if (selectedValue && selectedValue.hasOwnProperty('id') && this.poID != selectedValue['id']) {\r\n                this.setUpOrderItems(selectedValue['id']);\r\n                this.isFirstDataAvailable = false;\r\n                this.poID = selectedValue['id'];\r\n            }\r\n        });\r\n        this.isFirstDataAvailable = true;\r\n        this.poConfig = [\r\n            {\r\n                type: 'selectgroup',\r\n                inputType: 'supplierName',\r\n                options: this.localService.getPoCashewCodesOpen(),\r\n                collections: [\r\n                    {\r\n                        type: 'select',\r\n                        label: $localize `Supplier`,\r\n                    },\r\n                    {\r\n                        type: 'select',\r\n                        label: $localize `#PO`,\r\n                        name: 'poCode',\r\n                        collections: 'somewhere',\r\n                    },\r\n                ]\r\n            },\r\n        ];\r\n    }\r\n    setUpOrderItems(idnum) {\r\n        this.localService.getOrderPO(idnum).pipe(take(1)).subscribe(val => {\r\n            this.OrderdItems.next(val['orderItems']);\r\n            this.putData = { poCode: val['poCode'] };\r\n            this.isDataAvailable = true;\r\n        });\r\n        this.setUpRegConfig();\r\n    }\r\n    setOrderItemsEdit(val) {\r\n        if (val['referencedOrder']) {\r\n            this.localService.getOrder(val['referencedOrder']).pipe(take(1)).subscribe(value => {\r\n                this.OrderdItems.next(value ? value['orderItems'] : []);\r\n                this.setUpEditRecieving(value ? value['orderItems'] : [], val);\r\n            });\r\n        }\r\n        else {\r\n            // this.localService.getOrderPO(ponum).pipe(take(1)).subscribe( value => {\r\n            //     this.OrderdItems.next(value? value['orderItems'] : []);\r\n            this.setUpEditRecieving([], val);\r\n            // });\r\n        }\r\n    }\r\n    setUpEditRecieving(orderItems, val) {\r\n        var recivingItems = [];\r\n        val['receiptItems'].forEach(element => {\r\n            if (element['orderItem']) {\r\n                element['orderItem'] = orderItems.find(xx => xx.id === element['orderItem']['id']);\r\n            }\r\n            var newArray = [];\r\n            var newArrayExtra = [];\r\n            element['storageForms'].forEach(storage => {\r\n                if (storage['className'] === 'ExtraAdded') {\r\n                    newArrayExtra.push(storage);\r\n                }\r\n                else {\r\n                    if (storage['avgTestedWeight'] || storage['sampleWeights'] || storage['sampleContainerWeights']) {\r\n                        storage['samplesWeight'] = { sampleContainerWeights: storage['sampleContainerWeights'], numberOfSamples: storage['numberOfSamples'], avgTestedWeight: storage['avgTestedWeight'], sampleWeights: storage['sampleWeights'] };\r\n                        delete storage['sampleContainerWeights'];\r\n                        delete storage['numberOfSamples'];\r\n                        delete storage['avgTestedWeight'];\r\n                        delete storage['sampleWeights'];\r\n                    }\r\n                    newArray.push(storage);\r\n                }\r\n            });\r\n            if (newArrayExtra.length) {\r\n                element['bouns'] = { extraAdded: newArrayExtra };\r\n            }\r\n            element['storageForms'] = newArray;\r\n            recivingItems.push(element);\r\n        });\r\n        val['receiptItems'] = recivingItems;\r\n        this.putData = val;\r\n        this.setUpRegConfig();\r\n        this.isDataAvailable = true;\r\n    }\r\n    setUpRegConfig() {\r\n        this.regConfig = [\r\n            {\r\n                type: 'selectgroup',\r\n                inputType: 'supplierName',\r\n                disable: true,\r\n                collections: [\r\n                    {\r\n                        type: 'select',\r\n                        label: $localize `Supplier`,\r\n                    },\r\n                    {\r\n                        type: 'select',\r\n                        label: $localize `#PO`,\r\n                        name: 'poCode',\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                type: 'date',\r\n                label: $localize `Receiving date`,\r\n                value: 'timeNow',\r\n                name: 'recordedTime',\r\n                options: 'withTime',\r\n                // disable: disable,\r\n                validations: [\r\n                    {\r\n                        name: 'required',\r\n                        validator: Validators.required,\r\n                        message: $localize `Receiving date Required`,\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: 'bigexpand',\r\n                label: $localize `Receive product`,\r\n                name: 'receiptItems',\r\n                value: 'required',\r\n                // options: 'aloneNoAdd',\r\n                collections: [\r\n                    {\r\n                        type: 'selectLine',\r\n                        name: 'orderItem',\r\n                        label: $localize `Orderd item`,\r\n                        options: this.getOrderdItems(),\r\n                        collections: [\r\n                            {\r\n                                name: 'item',\r\n                                type: 'value'\r\n                            },\r\n                            {\r\n                                name: 'numberUnits',\r\n                                type: 'value'\r\n                            },\r\n                            // {\r\n                            //     name: 'unitPrice',\r\n                            //     type: 'value'\r\n                            // },\r\n                            // {\r\n                            //     name:'deliveryDate'\r\n                            // },\r\n                        ],\r\n                    },\r\n                    {\r\n                        type: 'select',\r\n                        label: $localize `Item reciving`,\r\n                        name: 'item',\r\n                        collections: 'somewhere',\r\n                        inputType: 'orderItem',\r\n                        options: this.genral.getItemsCashew('Raw'),\r\n                    },\r\n                    {\r\n                        type: 'selectMU',\r\n                        label: $localize `Weight unit`,\r\n                        name: 'measureUnit',\r\n                    },\r\n                    {\r\n                        type: 'inputselect',\r\n                        name: 'extraRequested',\r\n                        collections: [\r\n                            {\r\n                                type: 'input',\r\n                                label: $localize `Extra requseted`,\r\n                                name: 'amount',\r\n                                inputType: 'numeric',\r\n                                options: 3,\r\n                            },\r\n                            {\r\n                                type: 'select',\r\n                                label: $localize `Weight unit`,\r\n                                name: 'measureUnit',\r\n                                options: ['KG', 'LBS'],\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        type: 'popup',\r\n                        label: $localize `Extra received`,\r\n                        name: 'bouns',\r\n                        collections: [\r\n                            {\r\n                                type: 'bigexpand',\r\n                                name: 'extraAdded',\r\n                                options: 'Inline',\r\n                                collections: [\r\n                                    {\r\n                                        type: 'input',\r\n                                        label: $localize `Bag weight`,\r\n                                        name: 'unitAmount',\r\n                                        inputType: 'numeric',\r\n                                        options: 3,\r\n                                    },\r\n                                    {\r\n                                        type: 'input',\r\n                                        label: $localize `Number of bags`,\r\n                                        name: 'numberUnits',\r\n                                        inputType: 'numeric',\r\n                                        options: 3,\r\n                                    },\r\n                                    {\r\n                                        type: 'select',\r\n                                        label: $localize `Warehouse location`,\r\n                                        name: 'warehouseLocation',\r\n                                        collections: 'somewhere',\r\n                                        options: this.genral.getWearhouses(),\r\n                                    },\r\n                                    {\r\n                                        type: 'divider',\r\n                                        inputType: 'divide'\r\n                                    },\r\n                                ],\r\n                                validations: [\r\n                                    {\r\n                                        name: 'unitAmount',\r\n                                        message: $localize `a received storage must have unit weight and number of bags`,\r\n                                    },\r\n                                    {\r\n                                        name: 'numberUnits',\r\n                                    },\r\n                                ]\r\n                            },\r\n                            {\r\n                                type: 'button',\r\n                                label: $localize `Save`,\r\n                                name: 'submit',\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        type: 'divider',\r\n                        inputType: 'newlinespace'\r\n                    },\r\n                    {\r\n                        type: 'bigexpand',\r\n                        label: $localize `Amounts`,\r\n                        name: 'storageForms',\r\n                        options: 'Inline',\r\n                        collections: [\r\n                            {\r\n                                type: 'input',\r\n                                label: $localize `Bag weight`,\r\n                                name: 'unitAmount',\r\n                                inputType: 'numeric',\r\n                                options: 3,\r\n                            },\r\n                            {\r\n                                type: 'input',\r\n                                label: $localize `Number of bags`,\r\n                                name: 'numberUnits',\r\n                                inputType: 'numeric',\r\n                                options: 3,\r\n                            },\r\n                            {\r\n                                type: 'select',\r\n                                label: $localize `Warehouse location`,\r\n                                name: 'warehouseLocation',\r\n                                collections: 'somewhere',\r\n                                options: this.genral.getWearhouses(),\r\n                            },\r\n                            {\r\n                                type: 'popup',\r\n                                label: $localize `Samples`,\r\n                                name: 'samplesWeight',\r\n                                inputType: true,\r\n                                collections: [\r\n                                    // {\r\n                                    //     type: 'array',\r\n                                    //     label: 'Empty bag weight',\r\n                                    //     name: 'sampleContainerWeight',\r\n                                    //     inputType: 'numeric',\r\n                                    //     options: 3,\r\n                                    // },\r\n                                    {\r\n                                        type: 'arrayordinal',\r\n                                        label: $localize `Empty bag weights`,\r\n                                        inputType: 'inline',\r\n                                        name: 'sampleContainerWeights',\r\n                                        options: 3,\r\n                                        collections: 1,\r\n                                    },\r\n                                    {\r\n                                        type: 'arrayordinal',\r\n                                        label: $localize `Samples (+-from unit weight)`,\r\n                                        // inputType: 'numeric',\r\n                                        name: 'sampleWeights',\r\n                                        options: 3,\r\n                                        collections: 30,\r\n                                    },\r\n                                    {\r\n                                        type: 'input',\r\n                                        label: $localize `Avrage weight (full weight)`,\r\n                                        name: 'avgTestedWeight',\r\n                                        inputType: 'numeric',\r\n                                        options: 3,\r\n                                    },\r\n                                    {\r\n                                        type: 'input',\r\n                                        label: $localize `number of samples (if put avrage)`,\r\n                                        name: 'numberOfSamples',\r\n                                        inputType: 'numeric',\r\n                                    },\r\n                                    {\r\n                                        type: 'button',\r\n                                        label: $localize `Submit`,\r\n                                        name: 'submit',\r\n                                    }\r\n                                ]\r\n                            },\r\n                            {\r\n                                type: 'divider',\r\n                                inputType: 'divide'\r\n                            },\r\n                        ],\r\n                        validations: [\r\n                            {\r\n                                name: 'unitAmount',\r\n                                message: $localize `a received storage must have weight and number of bags`,\r\n                            },\r\n                            {\r\n                                name: 'numberUnits',\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        type: 'divider',\r\n                        inputType: 'titel',\r\n                        label: $localize `Invoice amounts`\r\n                    },\r\n                    {\r\n                        type: 'inputselect',\r\n                        name: 'receivedOrderUnits',\r\n                        options: 'orderItem',\r\n                        inputType: 'parentnumberUnits',\r\n                        collections: [\r\n                            {\r\n                                type: 'input',\r\n                                label: $localize `Payable weight`,\r\n                                name: 'amount',\r\n                                inputType: 'numeric',\r\n                                options: 3,\r\n                                validations: [\r\n                                    {\r\n                                        name: 'required',\r\n                                        validator: Validators.required,\r\n                                        message: $localize `Payable weight Required`,\r\n                                    }\r\n                                ]\r\n                            },\r\n                            {\r\n                                type: 'select',\r\n                                label: $localize `Measure unit`,\r\n                                name: 'measureUnit',\r\n                                value: 'LBS',\r\n                                options: this.genral.getMeasureUnit(),\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        type: 'inputselect',\r\n                        name: 'unitPrice',\r\n                        options: 'orderItem',\r\n                        inputType: 'parentunitPrice',\r\n                        collections: [\r\n                            {\r\n                                type: 'input',\r\n                                label: $localize `Price per unit`,\r\n                                name: 'amount',\r\n                                inputType: 'numeric',\r\n                                options: 3,\r\n                            },\r\n                            {\r\n                                type: 'select',\r\n                                label: $localize `Currency`,\r\n                                name: 'currency',\r\n                                options: ['USD', 'VND'],\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        type: 'divider',\r\n                        inputType: 'divide'\r\n                    },\r\n                ],\r\n                validations: [\r\n                    {\r\n                        name: 'item',\r\n                        message: $localize `a received item must have an item, measure unit and at least one storage`,\r\n                    },\r\n                    {\r\n                        name: 'measureUnit',\r\n                    },\r\n                    {\r\n                        name: 'storageForms',\r\n                        validator: [\r\n                            {\r\n                                name: 'unitAmount',\r\n                            },\r\n                            {\r\n                                name: 'numberUnits',\r\n                            },\r\n                        ],\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: 'button',\r\n                label: $localize `Submit`,\r\n                name: 'submit',\r\n            }\r\n        ];\r\n    }\r\n    getOrderdItems() {\r\n        return this.OrderdItems.asObservable();\r\n    }\r\n    submit(value) {\r\n        value['receiptItems'].forEach(element => {\r\n            if (element['bouns']) {\r\n                element['extraAdded'] = element['bouns']['extraAdded'];\r\n                delete element['bouns'];\r\n            }\r\n            if (!element['extraRequested']['amount']) {\r\n                delete element['extraRequested'];\r\n            }\r\n            if (!element['receivedOrderUnits']['amount']) {\r\n                delete element['receivedOrderUnits'];\r\n            }\r\n            if (!element['unitPrice']['amount']) {\r\n                delete element['unitPrice'];\r\n            }\r\n            element['storageForms'].forEach(ele => {\r\n                if (ele['samplesWeight']) {\r\n                    ele['sampleContainerWeights'] = ele['samplesWeight']['sampleContainerWeights'] ? ele['samplesWeight']['sampleContainerWeights'].filter(amou => amou.amount) : null;\r\n                    ele['avgTestedWeight'] = ele['samplesWeight']['avgTestedWeight'];\r\n                    ele['numberOfSamples'] = ele['samplesWeight']['numberOfSamples'];\r\n                    ele['sampleWeights'] = ele['samplesWeight']['sampleWeights'] ? ele['samplesWeight']['sampleWeights'].filter(amou => amou.amount) : null;\r\n                    delete ele['samplesWeight'];\r\n                }\r\n            });\r\n        });\r\n        this.localService.addEditRecivingCashewOrder(value, this.fromNew).pipe(take(1)).subscribe(val => {\r\n            const dialogRef = this.dialog.open(ReceiptDialog, {\r\n                width: '80%',\r\n                data: { receipt: cloneDeep(val), fromNew: true, type: 'Cashew' }\r\n            });\r\n            dialogRef.afterClosed().subscribe(data => {\r\n                if (data === $localize `Edit receive` || data === $localize `Receive extra`) {\r\n                    this.fromNew = false;\r\n                    this.isDataAvailable = false;\r\n                    this.OrderdItems = new ReplaySubject();\r\n                    this.setOrderItemsEdit(val);\r\n                    this.cdRef.detectChanges();\r\n                }\r\n                // else if(data === 'Edit order') {\r\n                //     this.router.navigate(['Main/ordready/NewCashewOrder',{id: val['poCode']['id']}]);\r\n                // }\r\n                else {\r\n                    this.router.navigate(['../ReceiveCReports'], { relativeTo: this._Activatedroute });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    submitBouns(value) {\r\n        this.localService.receiveExtra(value, this.putData['id']).pipe(take(1)).subscribe(val => {\r\n            const dialogRef = this.dialog.open(ReceiptDialog, {\r\n                width: '80%',\r\n                data: { receipt: cloneDeep(val), fromNew: true, type: 'Cashew' }\r\n            });\r\n            dialogRef.afterClosed().subscribe(data => {\r\n                if (data === $localize `Receive bouns`) {\r\n                    this.putData = val;\r\n                    this.setUpRegConfigLock();\r\n                    this.cdRef.detectChanges();\r\n                }\r\n                else {\r\n                    this.router.navigate(['../ReceiveCReports', { number: 1 }], { relativeTo: this._Activatedroute });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    setUpRegConfigLock() {\r\n        this.onlyBouns = true;\r\n        this.regConfig = [\r\n            {\r\n                type: 'name2',\r\n                label: $localize `#PO`,\r\n                name: 'poCode',\r\n                collections: 'supplierName',\r\n            },\r\n            {\r\n                type: 'dateTime',\r\n                label: $localize `Date and time`,\r\n                name: 'recordedTime',\r\n            },\r\n            {\r\n                type: 'arrayGroup',\r\n                label: $localize `Received products`,\r\n                name: 'receiptItems',\r\n                collections: [\r\n                    // {\r\n                    //     name: 'id',\r\n                    //     titel: 'id',\r\n                    //     type: 'idGroup',\r\n                    // },\r\n                    {\r\n                        type: 'nameId',\r\n                        name: 'item',\r\n                        label: $localize `Item descrption`,\r\n                        group: 'item',\r\n                    },\r\n                    {\r\n                        type: 'kidArray',\r\n                        label: $localize `Amounts`,\r\n                        name: 'storageForms',\r\n                        collections: [\r\n                            {\r\n                                type: 'normal',\r\n                                label: $localize `Bag weight`,\r\n                                name: 'unitAmount',\r\n                                // collections: 'measureUnit',\r\n                            },\r\n                            {\r\n                                type: 'normal',\r\n                                label: $localize `Number of bags`,\r\n                                name: 'numberUnits',\r\n                            },\r\n                            {\r\n                                type: 'nameId',\r\n                                label: $localize `Warehouse location`,\r\n                                name: 'warehouseLocation',\r\n                            },\r\n                            {\r\n                                type: 'check',\r\n                                label: $localize `Extra`,\r\n                                name: 'className',\r\n                                collections: 'ExtraAdded',\r\n                            },\r\n                            {\r\n                                type: 'normal',\r\n                                label: $localize `Empty bag weight`,\r\n                                name: 'sampleContainerWeight',\r\n                            },\r\n                            {\r\n                                type: 'normal',\r\n                                label: $localize `Number of samples`,\r\n                                name: 'numberOfSamples',\r\n                            },\r\n                            {\r\n                                type: 'normal',\r\n                                label: $localize `Avrage weight`,\r\n                                name: 'avgTestedWeight',\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        type: 'nameId',\r\n                        name: 'extraRequested',\r\n                        label: $localize `Extra requseted`,\r\n                        group: 'item',\r\n                    },\r\n                    {\r\n                        type: 'popup',\r\n                        label: $localize `Extra receive`,\r\n                        name: 'bouns',\r\n                        group: 'item',\r\n                        collections: [\r\n                            {\r\n                                type: 'bigexpand',\r\n                                name: 'extraAdded',\r\n                                label: $localize `Extra receive`,\r\n                                options: 'NoFrame',\r\n                                collections: [\r\n                                    {\r\n                                        type: 'input',\r\n                                        label: $localize `Bag weight`,\r\n                                        name: 'unitAmount',\r\n                                        inputType: 'numeric',\r\n                                        options: 3,\r\n                                    },\r\n                                    {\r\n                                        type: 'input',\r\n                                        label: $localize `Number of bags`,\r\n                                        name: 'numberUnits',\r\n                                        inputType: 'numeric',\r\n                                        options: 3,\r\n                                    },\r\n                                    {\r\n                                        type: 'select',\r\n                                        label: $localize `Warehouse location`,\r\n                                        name: 'warehouseLocation',\r\n                                        collections: 'somewhere',\r\n                                        options: this.genral.getWearhouses(),\r\n                                    },\r\n                                    {\r\n                                        type: 'divider',\r\n                                        inputType: 'divide'\r\n                                    },\r\n                                ],\r\n                                validations: [\r\n                                    {\r\n                                        name: 'unitAmount',\r\n                                        message: $localize `a received storage must have weight and number of bags`,\r\n                                    },\r\n                                    {\r\n                                        name: 'numberUnits',\r\n                                    },\r\n                                ]\r\n                            },\r\n                            {\r\n                                type: 'button',\r\n                                label: $localize `Save`,\r\n                                name: 'submit',\r\n                            }\r\n                        ]\r\n                    },\r\n                ]\r\n            }\r\n        ];\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.navigationSubscription) {\r\n            this.navigationSubscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\nReceiveCOrder.ɵfac = function ReceiveCOrder_Factory(t) { return new (t || ReceiveCOrder)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.ReceiptService), i0.ɵɵdirectiveInject(i3.Genral), i0.ɵɵdirectiveInject(i4.MatDialog), i0.ɵɵdirectiveInject(i5.FormBuilder)); };\r\nReceiveCOrder.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ReceiveCOrder, selectors: [[\"receive-c-order\"]], decls: 3, vars: 3, consts: function () { let i18n_0; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\r\n        const MSG_EXTERNAL_3301100013772706995$$SRC_APP_RECEIPT_RECEIVE_C_ORDER_COMPONENT_TS__1 = goog.getMsg(\"PO# receving\");\r\n        i18n_0 = MSG_EXTERNAL_3301100013772706995$$SRC_APP_RECEIPT_RECEIVE_C_ORDER_COMPONENT_TS__1;\r\n    }\r\n    else {\r\n        i18n_0 = $localize `:␟012a93f02e121455f6682748a6c7df3a94d5bc4b␟3301100013772706995:PO# receving`;\r\n    } let i18n_3; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\r\n        const MSG_EXTERNAL_8883702626192944805$$SRC_APP_RECEIPT_RECEIVE_C_ORDER_COMPONENT_TS__4 = goog.getMsg(\"Receving cashew order\");\r\n        i18n_3 = MSG_EXTERNAL_8883702626192944805$$SRC_APP_RECEIPT_RECEIVE_C_ORDER_COMPONENT_TS__4;\r\n    }\r\n    else {\r\n        i18n_3 = $localize `:␟83ffda06c3935d33a7c210e43aaedf4565af48c3␟8883702626192944805:Receving cashew order`;\r\n    } let i18n_5; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\r\n        const MSG_EXTERNAL_7732634355568906310$$SRC_APP_RECEIPT_RECEIVE_C_ORDER_COMPONENT_TS__6 = goog.getMsg(\"Receive bonus\");\r\n        i18n_5 = MSG_EXTERNAL_7732634355568906310$$SRC_APP_RECEIPT_RECEIVE_C_ORDER_COMPONENT_TS__6;\r\n    }\r\n    else {\r\n        i18n_5 = $localize `:␟a67335223b1d054eaf1c28f2c9abd59b2e3b4b13␟7732634355568906310:Receive bonus`;\r\n    } return [[3, \"ngStyle\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"ngStyle\"], i18n_0, [\"dynamicField\", \"\", 3, \"field\", \"group\", 4, \"ngFor\", \"ngForOf\"], [\"dynamicField\", \"\", 3, \"field\", \"group\"], [\"mainLabel\", i18n_3, 3, \"fields\", \"putData\", \"submitForm\"], [\"mainLabel\", i18n_5, 3, \"oneColumns\", \"dataSource\", \"submitForm\"]]; }, template: function ReceiveCOrder_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, ReceiveCOrder_fieldset_0_Template, 5, 3, \"fieldset\", 0);\r\n        i0.ɵɵtemplate(1, ReceiveCOrder_div_1_Template, 2, 2, \"div\", 1);\r\n        i0.ɵɵtemplate(2, ReceiveCOrder_div_2_Template, 2, 2, \"div\", 1);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngIf\", ctx.isFirstDataAvailable);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.isDataAvailable);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.onlyBouns);\r\n    } }, directives: [i6.NgIf, i6.NgStyle, i6.NgForOf, i7.DynamicFieldDirective, i8.DynamicFormComponent, i9.JustShowComponent], encapsulation: 2 });\r\n"]},"metadata":{},"sourceType":"module"}