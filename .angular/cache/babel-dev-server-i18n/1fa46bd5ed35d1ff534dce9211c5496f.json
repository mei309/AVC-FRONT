{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../genral.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../components/dynamic-form/dynamic-form.component\";\n\nfunction ExportUsageComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"dynamic-form\", 1);\n    i0.ɵɵlistener(\"submitForm\", function ExportUsageComponent_div_0_Template_dynamic_form_submitForm_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.onSubmit($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"fields\", ctx_r0.regConfig)(\"putData\", ctx_r0.dataSource)(\"mainLabel\", \"Cashew usage\");\n  }\n}\n\nexport class ExportUsageComponent {\n  constructor(dialog, genral) {\n    this.dialog = dialog;\n    this.genral = genral;\n    this.isDataAvailable = false;\n    this.submitExIm = new EventEmitter();\n    this.isOnePo = true;\n  }\n\n  onSubmit(value) {\n    var arr = [];\n\n    if (value['usedItemsNormal']) {\n      value['usedItemsNormal'].forEach(element => {\n        element['storageMoves'] = element['storageMoves'].filter(amou => amou.numberUsedUnits);\n        element['groupName'] = this.isOnePo ? 'normalUsed' : 'normalUsedPos';\n      });\n      value['usedItemsNormal'] = value['usedItemsNormal'].filter(amou => amou.storageMoves.length);\n      arr = arr.concat(value['usedItemsNormal']);\n      delete value['usedItemsNormal'];\n    }\n\n    if (value['usedItemsTable']) {\n      value['usedItemsTable'].forEach(element => {\n        element['storageMove']['amounts'] = element['storageMove']['amounts'].filter(amou => amou.take);\n        element['storageMove']['amounts'].forEach(ele => {\n          if (!ele['storageId']) {\n            ele['storageId'] = ele['id'];\n            delete ele['id'];\n            ele['storageVersion'] = ele['version'];\n            delete ele['version'];\n          }\n        });\n        element['groupName'] = this.isOnePo ? 'tableUsed' : 'tableUsedPos';\n      });\n      value['usedItemsTable'] = value['usedItemsTable'].filter(amou => amou.storageMove.amounts.length);\n      arr = arr.concat(value['usedItemsTable']);\n      delete value['usedItemsTable'];\n    }\n\n    value['storageMovesGroups'] = arr;\n    this.submitExIm.emit(value);\n  }\n\n  ngOnInit() {\n    var _a, _b;\n\n    var arrNormal = [];\n    var arrTable = [];\n    var removeIds = [];\n\n    if (this.beginData) {\n      if (this.beginData['weightedPos']) {\n        this.isOnePo = false;\n      }\n\n      (_a = this.beginData['storageMovesGroups']) === null || _a === void 0 ? void 0 : _a.forEach(element => {\n        if (element['groupName'].startsWith('table')) {\n          element['storageMove']['amounts'].forEach(ele => {\n            ele['take'] = true;\n          });\n          arrTable.push(element);\n        } else if (element['groupName'].startsWith('normal')) {\n          element['storageMoves'].forEach(el => {\n            el['storage']['numberAvailableUnits'] = el['numberAvailableUnits'];\n            removeIds.push(el['storage']['id']);\n          });\n          arrNormal.push(element);\n        }\n      });\n      delete this.beginData['storageMovesGroups'];\n      this.dataSource = this.beginData;\n    } else {\n      if (this.posArray) {\n        this.dataSource = {\n          weightedPos: this.posArray\n        };\n        this.isOnePo = false;\n      } else {\n        this.dataSource = {\n          poCode: this.newUsed[0]['poCode']\n        };\n      }\n    }\n\n    var arrUsedItems = [];\n    (_b = this.newUsed) === null || _b === void 0 ? void 0 : _b.forEach(element => {\n      if (element['storage']) {\n        element['storage']['item'] = element['item'];\n        element['storage']['measureUnit'] = element['measureUnit'];\n        element['storage']['itemProcessDate'] = element['itemProcessDate'];\n        element['storage']['itemPoCodes'] = element['poCodes'];\n        element['storage']['itemSuppliers'] = element['suppliers'];\n        element['storage']['amounts'].forEach(ele => {\n          ele['amount'] = ele['numberAvailableUnits'];\n        });\n        arrTable.push({\n          storageMove: element['storage']\n        });\n      } else if (element['storageForms']) {\n        element['storageForms'].forEach(ele => {\n          if (!removeIds.includes(ele['id'])) {\n            arrUsedItems.push({\n              itemPoCodes: element['poCodes'],\n              itemSuppliers: element['suppliers'],\n              item: element['item'],\n              itemProcessDate: element['itemProcessDate'],\n              measureUnit: element['measureUnit'],\n              storage: ele\n            });\n            delete ele['numberUsedUnits'];\n          }\n        });\n      }\n    });\n\n    if (arrUsedItems.length) {\n      arrNormal.push({\n        storageMoves: arrUsedItems\n      });\n    }\n\n    if (arrTable.length) {\n      this.dataSource['usedItemsTable'] = arrTable;\n    }\n\n    if (arrNormal.length) {\n      this.dataSource['usedItemsNormal'] = arrNormal;\n    }\n\n    this.preper(arrTable.length > 0, arrNormal.length > 0);\n    this.isDataAvailable = true;\n  }\n\n  preper(hasItemsTable, hasItemsNormal) {\n    this.regConfig = [...(this.isOnePo ? [{\n      type: 'selectgroup',\n      inputType: 'supplierName',\n      disable: true,\n      collections: [{\n        type: 'select',\n        label: \"Supllier\"\n      }, {\n        type: 'select',\n        label: \"#PO\",\n        name: 'poCode',\n        collections: 'somewhere'\n      }]\n    }] : [{\n      type: 'bigexpand',\n      name: 'weightedPos',\n      options: 'aloneNoAddNoFrameInline',\n      collections: [{\n        type: 'selectgroup',\n        inputType: 'supplierName',\n        disable: true,\n        collections: [{\n          type: 'select',\n          label: \"Supplier\"\n        }, {\n          type: 'select',\n          label: \"#PO\",\n          name: 'poCode',\n          collections: 'somewhere'\n        }]\n      }, ...(this.beginData ? [{\n        type: 'input',\n        label: \"Weight\",\n        name: 'weight',\n        disable: true\n      }] : []), {\n        type: 'divider',\n        inputType: 'divide'\n      }]\n    }]), {\n      type: 'date',\n      label: \"Date\",\n      value: 'timeNow',\n      name: 'recordedTime',\n      options: 'withTime',\n      validations: [{\n        name: 'required',\n        validator: Validators.required,\n        message: \"Date Required\"\n      }]\n    }, {\n      type: 'select',\n      label: \"Production line\",\n      value: 'firstVal',\n      name: 'productionLine',\n      options: this.genral.getProductionLine('PRODUCT_USE'),\n      validations: [{\n        name: 'required',\n        validator: Validators.required,\n        message: \"Production line Required\"\n      }]\n    }, {\n      type: 'textarry',\n      label: \"Remarks\",\n      inputType: 'text',\n      name: 'remarks'\n    }, ...(hasItemsNormal ? [{\n      type: 'bigexpand',\n      name: 'usedItemsNormal',\n      label: 'Using amounts',\n      options: 'aloneNoAdd',\n      collections: [{\n        type: 'tableWithInput',\n        // label: 'Transfer from',\n        name: 'storageMoves',\n        options: 'numberUsedUnits',\n        collections: [...(this.isOnePo ? [] : [{\n          type: 'input',\n          label: \"#PO\",\n          name: 'itemPoCodes',\n          disable: true\n        }, {\n          type: 'input',\n          label: \"Supplier\",\n          name: 'itemSuppliers',\n          disable: true\n        }]), {\n          type: 'select',\n          label: \"Item\",\n          name: 'item',\n          disable: true\n        }, {\n          type: 'date',\n          label: \"Process date\",\n          name: 'itemProcessDate',\n          disable: true\n        }, {\n          type: 'input',\n          label: \"Weight unit\",\n          name: 'measureUnit',\n          disable: true\n        }, {\n          type: 'bignotexpand',\n          name: 'storage',\n          collections: [{\n            type: 'input',\n            label: \"Number of units\",\n            name: 'numberUnits',\n            disable: true\n          }, {\n            type: 'input',\n            name: 'unitAmount',\n            label: \"Unit weight\",\n            disable: true //     collections: [\n            //         {\n            //             type: 'input',\n            //             label: 'Unit weight',\n            //             name: 'amount',\n            //         },\n            //         {\n            //             type: 'select',\n            //             label: 'Weight unit',\n            //             name: 'measureUnit',\n            //         },\n            //     ]\n\n          }, {\n            type: 'select',\n            label: \"Warehouse location\",\n            name: 'warehouseLocation',\n            disable: true\n          }, {\n            type: 'input',\n            label: \"Number available units\",\n            name: 'numberAvailableUnits',\n            disable: true\n          }]\n        }]\n      }]\n    }] : []), ...(hasItemsTable ? [{\n      type: 'bigexpand',\n      name: 'usedItemsTable',\n      label: 'Using amounts',\n      options: 'aloneNoAdd',\n      collections: [{\n        type: 'bignotexpand',\n        name: 'storageMove',\n        // label: 'Transfer from',\n        options: 'aloneNoAdd',\n        collections: [...(this.isOnePo ? [] : [{\n          type: 'input',\n          label: \"#PO\",\n          name: 'itemPoCodes',\n          disable: true\n        }, {\n          type: 'input',\n          label: \"Supplier\",\n          name: 'itemSuppliers',\n          disable: true\n        }]), {\n          type: 'inputReadonlySelect',\n          label: \"Item descrption\",\n          name: 'item',\n          disable: true\n        }, {\n          type: 'date',\n          label: \"Process date\",\n          name: 'itemProcessDate',\n          disable: true\n        }, {\n          type: 'inputReadonly',\n          label: \"Weight unit\",\n          name: 'measureUnit',\n          disable: true\n        }, {\n          type: 'inputReadonlySelect',\n          label: \"Warehouse location\",\n          name: 'warehouseLocation',\n          disable: true\n        }, // {\n        //     type: 'inputReadonly',\n        //     label: 'Empty container weight',\n        //     name: 'containerWeight',\n        //     disable: true,\n        // },\n        {\n          type: 'arrayordinal',\n          label: \"Unit weight\",\n          name: 'amounts',\n          inputType: 'choose',\n          options: 3,\n          collections: 30\n        }]\n      }]\n    }] : []), {\n      type: 'button',\n      label: \"Submit\",\n      name: 'submit'\n    }];\n  }\n\n}\n\nExportUsageComponent.ɵfac = function ExportUsageComponent_Factory(t) {\n  return new (t || ExportUsageComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.Genral));\n};\n\nExportUsageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ExportUsageComponent,\n  selectors: [[\"export-usage\"]],\n  inputs: {\n    beginData: \"beginData\",\n    newUsed: \"newUsed\",\n    posArray: \"posArray\"\n  },\n  outputs: {\n    submitExIm: \"submitExIm\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [3, \"fields\", \"putData\", \"mainLabel\", \"submitForm\"]],\n  template: function ExportUsageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ExportUsageComponent_div_0_Template, 2, 3, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isDataAvailable);\n    }\n  },\n  directives: [i3.NgIf, i4.DynamicFormComponent],\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:/Users/isral/OneDrive/Documents/AVC-FRONT/src/app/inventory/exp-imp-usage.component.ts"],"names":["EventEmitter","Validators","i0","i1","i2","i3","i4","ExportUsageComponent_div_0_Template","rf","ctx","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","ExportUsageComponent_div_0_Template_dynamic_form_submitForm_1_listener","$event","ɵɵrestoreView","ctx_r1","ɵɵnextContext","onSubmit","ɵɵelementEnd","ctx_r0","ɵɵadvance","ɵɵproperty","regConfig","dataSource","ExportUsageComponent","constructor","dialog","genral","isDataAvailable","submitExIm","isOnePo","value","arr","forEach","element","filter","amou","numberUsedUnits","storageMoves","length","concat","take","ele","storageMove","amounts","emit","ngOnInit","_a","_b","arrNormal","arrTable","removeIds","beginData","startsWith","push","el","posArray","weightedPos","poCode","newUsed","arrUsedItems","includes","itemPoCodes","itemSuppliers","item","itemProcessDate","measureUnit","storage","preper","hasItemsTable","hasItemsNormal","type","inputType","disable","collections","label","name","options","validations","validator","required","message","getProductionLine","ɵfac","ExportUsageComponent_Factory","t","ɵɵdirectiveInject","MatDialog","Genral","ɵcmp","ɵɵdefineComponent","selectors","inputs","outputs","decls","vars","consts","template","ExportUsageComponent_Template","ɵɵtemplate","directives","NgIf","DynamicFormComponent","encapsulation"],"mappings":"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","sourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { Validators } from '@angular/forms';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/material/dialog\";\r\nimport * as i2 from \"../genral.service\";\r\nimport * as i3 from \"@angular/common\";\r\nimport * as i4 from \"../components/dynamic-form/dynamic-form.component\";\r\nfunction ExportUsageComponent_div_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r2 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"div\");\r\n    i0.ɵɵelementStart(1, \"dynamic-form\", 1);\r\n    i0.ɵɵlistener(\"submitForm\", function ExportUsageComponent_div_0_Template_dynamic_form_submitForm_1_listener($event) { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return ctx_r1.onSubmit($event); });\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"fields\", ctx_r0.regConfig)(\"putData\", ctx_r0.dataSource)(\"mainLabel\", \"Cashew usage\");\r\n} }\r\nexport class ExportUsageComponent {\r\n    constructor(dialog, genral) {\r\n        this.dialog = dialog;\r\n        this.genral = genral;\r\n        this.isDataAvailable = false;\r\n        this.submitExIm = new EventEmitter();\r\n        this.isOnePo = true;\r\n    }\r\n    onSubmit(value) {\r\n        var arr = [];\r\n        if (value['usedItemsNormal']) {\r\n            value['usedItemsNormal'].forEach(element => {\r\n                element['storageMoves'] = element['storageMoves'].filter(amou => amou.numberUsedUnits);\r\n                element['groupName'] = this.isOnePo ? 'normalUsed' : 'normalUsedPos';\r\n            });\r\n            value['usedItemsNormal'] = value['usedItemsNormal'].filter(amou => amou.storageMoves.length);\r\n            arr = arr.concat(value['usedItemsNormal']);\r\n            delete value['usedItemsNormal'];\r\n        }\r\n        if (value['usedItemsTable']) {\r\n            value['usedItemsTable'].forEach(element => {\r\n                element['storageMove']['amounts'] = element['storageMove']['amounts'].filter(amou => amou.take);\r\n                element['storageMove']['amounts'].forEach(ele => {\r\n                    if (!ele['storageId']) {\r\n                        ele['storageId'] = ele['id'];\r\n                        delete ele['id'];\r\n                        ele['storageVersion'] = ele['version'];\r\n                        delete ele['version'];\r\n                    }\r\n                });\r\n                element['groupName'] = this.isOnePo ? 'tableUsed' : 'tableUsedPos';\r\n            });\r\n            value['usedItemsTable'] = value['usedItemsTable'].filter(amou => amou.storageMove.amounts.length);\r\n            arr = arr.concat(value['usedItemsTable']);\r\n            delete value['usedItemsTable'];\r\n        }\r\n        value['storageMovesGroups'] = arr;\r\n        this.submitExIm.emit(value);\r\n    }\r\n    ngOnInit() {\r\n        var _a, _b;\r\n        var arrNormal = [];\r\n        var arrTable = [];\r\n        var removeIds = [];\r\n        if (this.beginData) {\r\n            if (this.beginData['weightedPos']) {\r\n                this.isOnePo = false;\r\n            }\r\n            (_a = this.beginData['storageMovesGroups']) === null || _a === void 0 ? void 0 : _a.forEach(element => {\r\n                if (element['groupName'].startsWith('table')) {\r\n                    element['storageMove']['amounts'].forEach(ele => {\r\n                        ele['take'] = true;\r\n                    });\r\n                    arrTable.push(element);\r\n                }\r\n                else if (element['groupName'].startsWith('normal')) {\r\n                    element['storageMoves'].forEach(el => {\r\n                        el['storage']['numberAvailableUnits'] = el['numberAvailableUnits'];\r\n                        removeIds.push(el['storage']['id']);\r\n                    });\r\n                    arrNormal.push(element);\r\n                }\r\n            });\r\n            delete this.beginData['storageMovesGroups'];\r\n            this.dataSource = this.beginData;\r\n        }\r\n        else {\r\n            if (this.posArray) {\r\n                this.dataSource = { weightedPos: this.posArray };\r\n                this.isOnePo = false;\r\n            }\r\n            else {\r\n                this.dataSource = { poCode: this.newUsed[0]['poCode'] };\r\n            }\r\n        }\r\n        var arrUsedItems = [];\r\n        (_b = this.newUsed) === null || _b === void 0 ? void 0 : _b.forEach(element => {\r\n            if (element['storage']) {\r\n                element['storage']['item'] = element['item'];\r\n                element['storage']['measureUnit'] = element['measureUnit'];\r\n                element['storage']['itemProcessDate'] = element['itemProcessDate'];\r\n                element['storage']['itemPoCodes'] = element['poCodes'];\r\n                element['storage']['itemSuppliers'] = element['suppliers'];\r\n                element['storage']['amounts'].forEach(ele => {\r\n                    ele['amount'] = ele['numberAvailableUnits'];\r\n                });\r\n                arrTable.push({ storageMove: element['storage'] });\r\n            }\r\n            else if (element['storageForms']) {\r\n                element['storageForms'].forEach(ele => {\r\n                    if (!removeIds.includes(ele['id'])) {\r\n                        arrUsedItems.push({ itemPoCodes: element['poCodes'], itemSuppliers: element['suppliers'], item: element['item'], itemProcessDate: element['itemProcessDate'], measureUnit: element['measureUnit'], storage: ele });\r\n                        delete ele['numberUsedUnits'];\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        if (arrUsedItems.length) {\r\n            arrNormal.push({ storageMoves: arrUsedItems });\r\n        }\r\n        if (arrTable.length) {\r\n            this.dataSource['usedItemsTable'] = arrTable;\r\n        }\r\n        if (arrNormal.length) {\r\n            this.dataSource['usedItemsNormal'] = arrNormal;\r\n        }\r\n        this.preper(arrTable.length > 0, arrNormal.length > 0);\r\n        this.isDataAvailable = true;\r\n    }\r\n    preper(hasItemsTable, hasItemsNormal) {\r\n        this.regConfig = [\r\n            ...this.isOnePo ? [\r\n                {\r\n                    type: 'selectgroup',\r\n                    inputType: 'supplierName',\r\n                    disable: true,\r\n                    collections: [\r\n                        {\r\n                            type: 'select',\r\n                            label: $localize `Supllier`,\r\n                        },\r\n                        {\r\n                            type: 'select',\r\n                            label: $localize `#PO`,\r\n                            name: 'poCode',\r\n                            collections: 'somewhere',\r\n                        },\r\n                    ]\r\n                },\r\n            ] : [\r\n                {\r\n                    type: 'bigexpand',\r\n                    name: 'weightedPos',\r\n                    options: 'aloneNoAddNoFrameInline',\r\n                    collections: [\r\n                        {\r\n                            type: 'selectgroup',\r\n                            inputType: 'supplierName',\r\n                            disable: true,\r\n                            collections: [\r\n                                {\r\n                                    type: 'select',\r\n                                    label: $localize `Supplier`,\r\n                                },\r\n                                {\r\n                                    type: 'select',\r\n                                    label: $localize `#PO`,\r\n                                    name: 'poCode',\r\n                                    collections: 'somewhere',\r\n                                },\r\n                            ]\r\n                        },\r\n                        ...this.beginData ? [\r\n                            {\r\n                                type: 'input',\r\n                                label: $localize `Weight`,\r\n                                name: 'weight',\r\n                                disable: true,\r\n                            }\r\n                        ] : [],\r\n                        {\r\n                            type: 'divider',\r\n                            inputType: 'divide'\r\n                        },\r\n                    ]\r\n                }\r\n            ],\r\n            {\r\n                type: 'date',\r\n                label: $localize `Date`,\r\n                value: 'timeNow',\r\n                name: 'recordedTime',\r\n                options: 'withTime',\r\n                validations: [\r\n                    {\r\n                        name: 'required',\r\n                        validator: Validators.required,\r\n                        message: $localize `Date Required`,\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: 'select',\r\n                label: $localize `Production line`,\r\n                value: 'firstVal',\r\n                name: 'productionLine',\r\n                options: this.genral.getProductionLine('PRODUCT_USE'),\r\n                validations: [\r\n                    {\r\n                        name: 'required',\r\n                        validator: Validators.required,\r\n                        message: $localize `Production line Required`,\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: 'textarry',\r\n                label: $localize `Remarks`,\r\n                inputType: 'text',\r\n                name: 'remarks',\r\n            },\r\n            ...hasItemsNormal ? [\r\n                {\r\n                    type: 'bigexpand',\r\n                    name: 'usedItemsNormal',\r\n                    label: 'Using amounts',\r\n                    options: 'aloneNoAdd',\r\n                    collections: [\r\n                        {\r\n                            type: 'tableWithInput',\r\n                            // label: 'Transfer from',\r\n                            name: 'storageMoves',\r\n                            options: 'numberUsedUnits',\r\n                            collections: [\r\n                                ...this.isOnePo ? [] : [\r\n                                    {\r\n                                        type: 'input',\r\n                                        label: $localize `#PO`,\r\n                                        name: 'itemPoCodes',\r\n                                        disable: true,\r\n                                    },\r\n                                    {\r\n                                        type: 'input',\r\n                                        label: $localize `Supplier`,\r\n                                        name: 'itemSuppliers',\r\n                                        disable: true,\r\n                                    },\r\n                                ],\r\n                                {\r\n                                    type: 'select',\r\n                                    label: $localize `Item`,\r\n                                    name: 'item',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'date',\r\n                                    label: $localize `Process date`,\r\n                                    name: 'itemProcessDate',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'input',\r\n                                    label: $localize `Weight unit`,\r\n                                    name: 'measureUnit',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'bignotexpand',\r\n                                    name: 'storage',\r\n                                    collections: [\r\n                                        {\r\n                                            type: 'input',\r\n                                            label: $localize `Number of units`,\r\n                                            name: 'numberUnits',\r\n                                            disable: true,\r\n                                        },\r\n                                        {\r\n                                            type: 'input',\r\n                                            name: 'unitAmount',\r\n                                            label: $localize `Unit weight`,\r\n                                            disable: true,\r\n                                            //     collections: [\r\n                                            //         {\r\n                                            //             type: 'input',\r\n                                            //             label: 'Unit weight',\r\n                                            //             name: 'amount',\r\n                                            //         },\r\n                                            //         {\r\n                                            //             type: 'select',\r\n                                            //             label: 'Weight unit',\r\n                                            //             name: 'measureUnit',\r\n                                            //         },\r\n                                            //     ]\r\n                                        },\r\n                                        {\r\n                                            type: 'select',\r\n                                            label: $localize `Warehouse location`,\r\n                                            name: 'warehouseLocation',\r\n                                            disable: true,\r\n                                        },\r\n                                        {\r\n                                            type: 'input',\r\n                                            label: $localize `Number available units`,\r\n                                            name: 'numberAvailableUnits',\r\n                                            disable: true,\r\n                                        },\r\n                                    ]\r\n                                },\r\n                            ],\r\n                        },\r\n                    ]\r\n                },\r\n            ] : [],\r\n            ...hasItemsTable ? [\r\n                {\r\n                    type: 'bigexpand',\r\n                    name: 'usedItemsTable',\r\n                    label: 'Using amounts',\r\n                    options: 'aloneNoAdd',\r\n                    collections: [\r\n                        {\r\n                            type: 'bignotexpand',\r\n                            name: 'storageMove',\r\n                            // label: 'Transfer from',\r\n                            options: 'aloneNoAdd',\r\n                            collections: [\r\n                                ...this.isOnePo ? [] : [\r\n                                    {\r\n                                        type: 'input',\r\n                                        label: $localize `#PO`,\r\n                                        name: 'itemPoCodes',\r\n                                        disable: true,\r\n                                    },\r\n                                    {\r\n                                        type: 'input',\r\n                                        label: $localize `Supplier`,\r\n                                        name: 'itemSuppliers',\r\n                                        disable: true,\r\n                                    },\r\n                                ],\r\n                                {\r\n                                    type: 'inputReadonlySelect',\r\n                                    label: $localize `Item descrption`,\r\n                                    name: 'item',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'date',\r\n                                    label: $localize `Process date`,\r\n                                    name: 'itemProcessDate',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'inputReadonly',\r\n                                    label: $localize `Weight unit`,\r\n                                    name: 'measureUnit',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'inputReadonlySelect',\r\n                                    label: $localize `Warehouse location`,\r\n                                    name: 'warehouseLocation',\r\n                                    disable: true,\r\n                                },\r\n                                // {\r\n                                //     type: 'inputReadonly',\r\n                                //     label: 'Empty container weight',\r\n                                //     name: 'containerWeight',\r\n                                //     disable: true,\r\n                                // },\r\n                                {\r\n                                    type: 'arrayordinal',\r\n                                    label: $localize `Unit weight`,\r\n                                    name: 'amounts',\r\n                                    inputType: 'choose',\r\n                                    options: 3,\r\n                                    collections: 30,\r\n                                },\r\n                            ]\r\n                        },\r\n                    ]\r\n                },\r\n            ] : [],\r\n            {\r\n                type: 'button',\r\n                label: $localize `Submit`,\r\n                name: 'submit',\r\n            }\r\n        ];\r\n    }\r\n}\r\nExportUsageComponent.ɵfac = function ExportUsageComponent_Factory(t) { return new (t || ExportUsageComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.Genral)); };\r\nExportUsageComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ExportUsageComponent, selectors: [[\"export-usage\"]], inputs: { beginData: \"beginData\", newUsed: \"newUsed\", posArray: \"posArray\" }, outputs: { submitExIm: \"submitExIm\" }, decls: 1, vars: 1, consts: [[4, \"ngIf\"], [3, \"fields\", \"putData\", \"mainLabel\", \"submitForm\"]], template: function ExportUsageComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, ExportUsageComponent_div_0_Template, 2, 3, \"div\", 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngIf\", ctx.isDataAvailable);\r\n    } }, directives: [i3.NgIf, i4.DynamicFormComponent], encapsulation: 2 });\r\n"]},"metadata":{},"sourceType":"module"}