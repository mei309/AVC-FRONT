{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../genral.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../components/dynamic-form/dynamic-form.component\";\n\nfunction ExpImpRelocationComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"dynamic-form\", 1);\n    i0.ɵɵlistener(\"submitForm\", function ExpImpRelocationComponent_div_0_Template_dynamic_form_submitForm_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.onSubmit($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"fields\", ctx_r0.regConfig)(\"putData\", ctx_r0.dataSource)(\"mainLabel\", ctx_r0.num ? \"Clean transfering amounts\" : \"Raw transfering amounts\");\n  }\n}\n\nexport class ExpImpRelocationComponent {\n  constructor(genral, dialog) {\n    this.genral = genral;\n    this.dialog = dialog;\n    this.isDataAvailable = false;\n    this.submitExIm = new EventEmitter();\n  }\n\n  onSubmit(value) {\n    var arr = [];\n    var newWarehouse = value['newWarehouse'] ? value['newWarehouse']['warehouseLocation'] : null;\n    delete value['newWarehouse'];\n\n    if (value['usedItemsNormal']) {\n      value['usedItemsNormal'].forEach(element => {\n        element['storageMoves'] = element['storageMoves'].filter(amou => amou.numberUsedUnits);\n        element['groupName'] = 'normalRelocation';\n        element['storageMoves'].forEach(ele => {\n          ele['warehouseLocation'] = newWarehouse;\n        });\n      });\n      value['usedItemsNormal'] = value['usedItemsNormal'].filter(amou => amou.storageMoves.length);\n      arr = arr.concat(value['usedItemsNormal']);\n      delete value['usedItemsNormal'];\n    }\n\n    if (value['usedItemsTable']) {\n      value['usedItemsTable'].forEach(element => {\n        element['storageMove']['amounts'] = element['storageMove']['amounts'].filter(amou => amou.take);\n        element['storageMove']['amounts'].forEach(ele => {\n          if (!ele['storageId']) {\n            ele['storageId'] = ele['id'];\n            delete ele['id'];\n            ele['storageVersion'] = ele['version'];\n            delete ele['version'];\n          }\n        });\n        element['storageMove']['newWarehouseLocation'] = newWarehouse;\n        element['groupName'] = 'tableRelocation';\n      });\n      value['usedItemsTable'] = value['usedItemsTable'].filter(amou => amou.storageMove.amounts.length);\n      arr = arr.concat(value['usedItemsTable']);\n      delete value['usedItemsTable'];\n    }\n\n    value['storageMovesGroups'] = arr;\n\n    if (value['itemCounts']) {\n      value['itemCounts'] = value['itemCounts'].filter(amou => amou.amounts);\n      value['itemCounts'].forEach(eleme => {\n        eleme['amounts'] = eleme['amounts'].filter(amou => amou.amount);\n      });\n      value['itemCounts'] = value['itemCounts'].filter(amou => amou.amounts.length);\n    }\n\n    this.submitExIm.emit(value);\n  }\n\n  ngOnInit() {\n    var _a;\n\n    var arrNormal = [];\n    var arrTable = [];\n    var removeIds = [];\n    var cashewGrades = [];\n\n    if (this.beginData && this.beginData['storageMovesGroups']) {\n      this.beginData['storageMovesGroups'].forEach(element => {\n        if (element['groupName'].startsWith('table')) {\n          cashewGrades.push(element['cashewGrade']);\n          element['storageMove']['amounts'].forEach(ele => {\n            ele['take'] = true;\n          });\n          arrTable.push(element);\n        } else if (element['groupName'].startsWith('normal')) {\n          element['storageMoves'].forEach(el => {\n            cashewGrades.push(el['cashewGrade']);\n            el['storage']['numberAvailableUnits'] = el['numberAvailableUnits'];\n            removeIds.push(el['storage']['id']);\n          });\n          arrNormal.push(element);\n        }\n      });\n      const temp = this.beginData['storageMovesGroups'][0];\n\n      if (temp['storageMove']) {\n        this.beginData['newWarehouse'] = {\n          warehouseLocation: temp['storageMove']['newWarehouseLocation']\n        };\n      } else {\n        this.beginData['newWarehouse'] = {\n          warehouseLocation: temp['storageMoves'][0]['warehouseLocation']\n        };\n      }\n\n      delete this.beginData['storageMovesGroups'];\n      this.dataSource = this.beginData;\n\n      if (!this.dataSource['itemCounts']) {\n        this.dataSource['itemCounts'] = [];\n      }\n    } else {\n      this.dataSource = {\n        poCode: this.newUsed[0]['poCode'],\n        itemCounts: []\n      };\n    }\n\n    var arrUsedItems = [];\n    (_a = this.newUsed) === null || _a === void 0 ? void 0 : _a.forEach(element => {\n      cashewGrades.push(element['cashewGrade']);\n\n      if (element['storage']) {\n        element['storage']['item'] = element['item'];\n        element['storage']['measureUnit'] = element['measureUnit'];\n        element['storage']['itemProcessDate'] = element['itemProcessDate'];\n        element['storage']['amounts'].forEach(ele => {\n          ele['amount'] = ele['numberAvailableUnits'];\n        });\n        arrTable.push({\n          storageMove: element['storage']\n        });\n      } else if (element['storageForms']) {\n        element['storageForms'].forEach(ele => {\n          if (!removeIds.includes(ele['id'])) {\n            arrUsedItems.push({\n              item: element['item'],\n              itemProcessDate: element['itemProcessDate'],\n              measureUnit: element['measureUnit'],\n              storage: ele\n            });\n            delete ele['numberUsedUnits'];\n          }\n        });\n      }\n    });\n\n    if (arrUsedItems.length) {\n      arrNormal.push({\n        storageMoves: arrUsedItems\n      });\n    }\n\n    if (arrTable.length) {\n      this.dataSource['usedItemsTable'] = arrTable;\n    }\n\n    if (arrNormal.length) {\n      this.dataSource['usedItemsNormal'] = arrNormal;\n    }\n\n    this.preper(arrTable.length > 0, arrNormal.length > 0, cashewGrades);\n    this.isDataAvailable = true;\n  }\n\n  preper(hasItemsTable, hasItemsNormal, cashewGrades) {\n    this.regConfig = [{\n      type: 'selectgroup',\n      inputType: 'supplierName',\n      disable: true,\n      collections: [{\n        type: 'select',\n        label: \"Supllier\"\n      }, {\n        type: 'select',\n        label: \"#PO\",\n        name: 'poCode',\n        collections: 'somewhere'\n      }]\n    }, {\n      type: 'date',\n      label: \"Date\",\n      value: 'timeNow',\n      name: 'recordedTime',\n      options: 'withTime',\n      validations: [{\n        name: 'required',\n        validator: Validators.required,\n        message: \"Date Required\"\n      }]\n    }, {\n      type: 'select',\n      label: \"Production line\",\n      value: 'firstVal',\n      name: 'productionLine',\n      options: this.genral.getProductionLine(this.getFunctionality()),\n      validations: [{\n        name: 'required',\n        validator: Validators.required,\n        message: \"Production line Required\"\n      }]\n    }, ...(hasItemsNormal ? [{\n      type: 'bigexpand',\n      name: 'usedItemsNormal',\n      label: \"Transfering amounts\",\n      options: 'aloneNoAdd',\n      collections: [{\n        type: 'tableWithInput',\n        // label: 'Transfer from',\n        name: 'storageMoves',\n        options: 'numberUsedUnits',\n        collections: [{\n          type: 'select',\n          label: \"Item\",\n          name: 'item',\n          disable: true\n        }, {\n          type: 'dateTime',\n          label: \"Process date\",\n          name: 'itemProcessDate',\n          disable: true\n        }, {\n          type: 'input',\n          label: \"Weight unit\",\n          name: 'measureUnit',\n          disable: true\n        }, {\n          type: 'bignotexpand',\n          name: 'storage',\n          collections: [{\n            type: 'input',\n            label: \"Number of units\",\n            name: 'numberUnits',\n            disable: true\n          }, {\n            type: 'input',\n            name: 'unitAmount',\n            label: \"Unit weight\",\n            disable: true\n          }, {\n            type: 'select',\n            label: \"Warehouse location\",\n            name: 'warehouseLocation',\n            disable: true\n          }, {\n            type: 'input',\n            label: \"Number available units\",\n            name: 'numberAvailableUnits',\n            disable: true\n          }]\n        }]\n      }]\n    }] : []), ...(hasItemsTable ? [{\n      type: 'bigexpand',\n      name: 'usedItemsTable',\n      label: \"Transfering amounts\",\n      options: 'aloneNoAdd',\n      collections: [{\n        type: 'bignotexpand',\n        name: 'storageMove',\n        // label: 'Transfer from',\n        options: 'aloneNoAdd',\n        collections: [{\n          type: 'inputReadonlySelect',\n          label: \"Item descrption\",\n          name: 'item',\n          disable: true\n        }, {\n          type: 'date',\n          label: \"Process date\",\n          name: 'itemProcessDate',\n          disable: true\n        }, {\n          type: 'inputReadonly',\n          label: \"Weight unit\",\n          name: 'measureUnit',\n          disable: true\n        }, {\n          type: 'inputReadonlySelect',\n          label: \"Warehouse location\",\n          name: 'warehouseLocation',\n          disable: true\n        }, {\n          type: 'arrayordinal',\n          label: \"Unit weight\",\n          name: 'amounts',\n          inputType: 'choose',\n          options: 3,\n          collections: 30\n        }]\n      }]\n    }] : []), {\n      type: 'bignotexpand',\n      name: 'newWarehouse',\n      label: \"New warehouse location\",\n      collections: [{\n        type: 'select',\n        label: \"Warehouse location\",\n        name: 'warehouseLocation',\n        collections: 'somewhere',\n        options: this.genral.getWearhouses()\n      }]\n    }, {\n      type: 'bigexpand',\n      name: 'itemCounts',\n      label: \"Count\",\n      collections: [{\n        type: 'selectItem',\n        label: \"Item descrption\",\n        name: 'item',\n        collections: 'relocation',\n        options: this.genral.getItemsCashewGrades(this.num, cashewGrades)\n      }, //  {\n      //      type: 'selectMU',\n      //      label: $localize`Weight unit`,\n      //      name: 'measureUnit',\n      //  },\n      {\n        type: 'selectNormal',\n        label: \"Weight unit\",\n        name: 'measureUnit',\n        value: 'KG',\n        options: this.genral.getMeasureUnit()\n      }, {\n        type: 'input',\n        label: \"All bags weight\",\n        name: 'accessWeight',\n        inputType: 'numeric',\n        options: 3\n      }, {\n        type: 'arrayordinal',\n        label: \"Unit weight\",\n        name: 'amounts',\n        options: 3,\n        collections: 30\n      }]\n    }, {\n      type: 'button',\n      label: \"Submit\",\n      name: 'submit'\n    }];\n  }\n\n  getFunctionality() {\n    switch (this.num) {\n      case 0:\n        return 'RAW_STATION';\n\n      case 1:\n        return 'ROASTER_IN';\n    }\n  }\n\n}\n\nExpImpRelocationComponent.ɵfac = function ExpImpRelocationComponent_Factory(t) {\n  return new (t || ExpImpRelocationComponent)(i0.ɵɵdirectiveInject(i1.Genral), i0.ɵɵdirectiveInject(i2.MatDialog));\n};\n\nExpImpRelocationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ExpImpRelocationComponent,\n  selectors: [[\"exp-imp-relocation\"]],\n  inputs: {\n    num: \"num\",\n    beginData: \"beginData\",\n    newUsed: \"newUsed\"\n  },\n  outputs: {\n    submitExIm: \"submitExIm\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [3, \"fields\", \"putData\", \"mainLabel\", \"submitForm\"]],\n  template: function ExpImpRelocationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ExpImpRelocationComponent_div_0_Template, 2, 3, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isDataAvailable);\n    }\n  },\n  directives: [i3.NgIf, i4.DynamicFormComponent],\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:/Users/isral/OneDrive/Documents/AVC-FRONT/src/app/relocations/exp-imp-relocation.component.ts"],"names":["EventEmitter","Validators","i0","i1","i2","i3","i4","ExpImpRelocationComponent_div_0_Template","rf","ctx","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","ExpImpRelocationComponent_div_0_Template_dynamic_form_submitForm_1_listener","$event","ɵɵrestoreView","ctx_r1","ɵɵnextContext","onSubmit","ɵɵelementEnd","ctx_r0","ɵɵadvance","ɵɵproperty","regConfig","dataSource","num","ExpImpRelocationComponent","constructor","genral","dialog","isDataAvailable","submitExIm","value","arr","newWarehouse","forEach","element","filter","amou","numberUsedUnits","ele","storageMoves","length","concat","take","storageMove","amounts","eleme","amount","emit","ngOnInit","_a","arrNormal","arrTable","removeIds","cashewGrades","beginData","startsWith","push","el","temp","warehouseLocation","poCode","newUsed","itemCounts","arrUsedItems","includes","item","itemProcessDate","measureUnit","storage","preper","hasItemsTable","hasItemsNormal","type","inputType","disable","collections","label","name","options","validations","validator","required","message","getProductionLine","getFunctionality","getWearhouses","getItemsCashewGrades","getMeasureUnit","ɵfac","ExpImpRelocationComponent_Factory","t","ɵɵdirectiveInject","Genral","MatDialog","ɵcmp","ɵɵdefineComponent","selectors","inputs","outputs","decls","vars","consts","template","ExpImpRelocationComponent_Template","ɵɵtemplate","directives","NgIf","DynamicFormComponent","encapsulation"],"mappings":"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","sourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { Validators } from '@angular/forms';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../genral.service\";\r\nimport * as i2 from \"@angular/material/dialog\";\r\nimport * as i3 from \"@angular/common\";\r\nimport * as i4 from \"../components/dynamic-form/dynamic-form.component\";\r\nfunction ExpImpRelocationComponent_div_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r2 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"div\");\r\n    i0.ɵɵelementStart(1, \"dynamic-form\", 1);\r\n    i0.ɵɵlistener(\"submitForm\", function ExpImpRelocationComponent_div_0_Template_dynamic_form_submitForm_1_listener($event) { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return ctx_r1.onSubmit($event); });\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"fields\", ctx_r0.regConfig)(\"putData\", ctx_r0.dataSource)(\"mainLabel\", ctx_r0.num ? \"Clean transfering amounts\" : \"Raw transfering amounts\");\r\n} }\r\nexport class ExpImpRelocationComponent {\r\n    constructor(genral, dialog) {\r\n        this.genral = genral;\r\n        this.dialog = dialog;\r\n        this.isDataAvailable = false;\r\n        this.submitExIm = new EventEmitter();\r\n    }\r\n    onSubmit(value) {\r\n        var arr = [];\r\n        var newWarehouse = value['newWarehouse'] ? value['newWarehouse']['warehouseLocation'] : null;\r\n        delete value['newWarehouse'];\r\n        if (value['usedItemsNormal']) {\r\n            value['usedItemsNormal'].forEach(element => {\r\n                element['storageMoves'] = element['storageMoves'].filter(amou => amou.numberUsedUnits);\r\n                element['groupName'] = 'normalRelocation';\r\n                element['storageMoves'].forEach(ele => { ele['warehouseLocation'] = newWarehouse; });\r\n            });\r\n            value['usedItemsNormal'] = value['usedItemsNormal'].filter(amou => amou.storageMoves.length);\r\n            arr = arr.concat(value['usedItemsNormal']);\r\n            delete value['usedItemsNormal'];\r\n        }\r\n        if (value['usedItemsTable']) {\r\n            value['usedItemsTable'].forEach(element => {\r\n                element['storageMove']['amounts'] = element['storageMove']['amounts'].filter(amou => amou.take);\r\n                element['storageMove']['amounts'].forEach(ele => {\r\n                    if (!ele['storageId']) {\r\n                        ele['storageId'] = ele['id'];\r\n                        delete ele['id'];\r\n                        ele['storageVersion'] = ele['version'];\r\n                        delete ele['version'];\r\n                    }\r\n                });\r\n                element['storageMove']['newWarehouseLocation'] = newWarehouse;\r\n                element['groupName'] = 'tableRelocation';\r\n            });\r\n            value['usedItemsTable'] = value['usedItemsTable'].filter(amou => amou.storageMove.amounts.length);\r\n            arr = arr.concat(value['usedItemsTable']);\r\n            delete value['usedItemsTable'];\r\n        }\r\n        value['storageMovesGroups'] = arr;\r\n        if (value['itemCounts']) {\r\n            value['itemCounts'] = value['itemCounts'].filter(amou => amou.amounts);\r\n            value['itemCounts'].forEach(eleme => {\r\n                eleme['amounts'] = eleme['amounts'].filter(amou => amou.amount);\r\n            });\r\n            value['itemCounts'] = value['itemCounts'].filter(amou => amou.amounts.length);\r\n        }\r\n        this.submitExIm.emit(value);\r\n    }\r\n    ngOnInit() {\r\n        var _a;\r\n        var arrNormal = [];\r\n        var arrTable = [];\r\n        var removeIds = [];\r\n        var cashewGrades = [];\r\n        if (this.beginData && this.beginData['storageMovesGroups']) {\r\n            this.beginData['storageMovesGroups'].forEach(element => {\r\n                if (element['groupName'].startsWith('table')) {\r\n                    cashewGrades.push(element['cashewGrade']);\r\n                    element['storageMove']['amounts'].forEach(ele => {\r\n                        ele['take'] = true;\r\n                    });\r\n                    arrTable.push(element);\r\n                }\r\n                else if (element['groupName'].startsWith('normal')) {\r\n                    element['storageMoves'].forEach(el => {\r\n                        cashewGrades.push(el['cashewGrade']);\r\n                        el['storage']['numberAvailableUnits'] = el['numberAvailableUnits'];\r\n                        removeIds.push(el['storage']['id']);\r\n                    });\r\n                    arrNormal.push(element);\r\n                }\r\n            });\r\n            const temp = this.beginData['storageMovesGroups'][0];\r\n            if (temp['storageMove']) {\r\n                this.beginData['newWarehouse'] = { warehouseLocation: temp['storageMove']['newWarehouseLocation'] };\r\n            }\r\n            else {\r\n                this.beginData['newWarehouse'] = { warehouseLocation: temp['storageMoves'][0]['warehouseLocation'] };\r\n            }\r\n            delete this.beginData['storageMovesGroups'];\r\n            this.dataSource = this.beginData;\r\n            if (!this.dataSource['itemCounts']) {\r\n                this.dataSource['itemCounts'] = [];\r\n            }\r\n        }\r\n        else {\r\n            this.dataSource = { poCode: this.newUsed[0]['poCode'], itemCounts: [] };\r\n        }\r\n        var arrUsedItems = [];\r\n        (_a = this.newUsed) === null || _a === void 0 ? void 0 : _a.forEach(element => {\r\n            cashewGrades.push(element['cashewGrade']);\r\n            if (element['storage']) {\r\n                element['storage']['item'] = element['item'];\r\n                element['storage']['measureUnit'] = element['measureUnit'];\r\n                element['storage']['itemProcessDate'] = element['itemProcessDate'];\r\n                element['storage']['amounts'].forEach(ele => {\r\n                    ele['amount'] = ele['numberAvailableUnits'];\r\n                });\r\n                arrTable.push({ storageMove: element['storage'] });\r\n            }\r\n            else if (element['storageForms']) {\r\n                element['storageForms'].forEach(ele => {\r\n                    if (!removeIds.includes(ele['id'])) {\r\n                        arrUsedItems.push({ item: element['item'], itemProcessDate: element['itemProcessDate'], measureUnit: element['measureUnit'], storage: ele });\r\n                        delete ele['numberUsedUnits'];\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        if (arrUsedItems.length) {\r\n            arrNormal.push({ storageMoves: arrUsedItems });\r\n        }\r\n        if (arrTable.length) {\r\n            this.dataSource['usedItemsTable'] = arrTable;\r\n        }\r\n        if (arrNormal.length) {\r\n            this.dataSource['usedItemsNormal'] = arrNormal;\r\n        }\r\n        this.preper(arrTable.length > 0, arrNormal.length > 0, cashewGrades);\r\n        this.isDataAvailable = true;\r\n    }\r\n    preper(hasItemsTable, hasItemsNormal, cashewGrades) {\r\n        this.regConfig = [\r\n            {\r\n                type: 'selectgroup',\r\n                inputType: 'supplierName',\r\n                disable: true,\r\n                collections: [\r\n                    {\r\n                        type: 'select',\r\n                        label: $localize `Supllier`,\r\n                    },\r\n                    {\r\n                        type: 'select',\r\n                        label: $localize `#PO`,\r\n                        name: 'poCode',\r\n                        collections: 'somewhere',\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                type: 'date',\r\n                label: $localize `Date`,\r\n                value: 'timeNow',\r\n                name: 'recordedTime',\r\n                options: 'withTime',\r\n                validations: [\r\n                    {\r\n                        name: 'required',\r\n                        validator: Validators.required,\r\n                        message: $localize `Date Required`,\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: 'select',\r\n                label: $localize `Production line`,\r\n                value: 'firstVal',\r\n                name: 'productionLine',\r\n                options: this.genral.getProductionLine(this.getFunctionality()),\r\n                validations: [\r\n                    {\r\n                        name: 'required',\r\n                        validator: Validators.required,\r\n                        message: $localize `Production line Required`,\r\n                    }\r\n                ]\r\n            },\r\n            ...hasItemsNormal ? [\r\n                {\r\n                    type: 'bigexpand',\r\n                    name: 'usedItemsNormal',\r\n                    label: $localize `Transfering amounts`,\r\n                    options: 'aloneNoAdd',\r\n                    collections: [\r\n                        {\r\n                            type: 'tableWithInput',\r\n                            // label: 'Transfer from',\r\n                            name: 'storageMoves',\r\n                            options: 'numberUsedUnits',\r\n                            collections: [\r\n                                {\r\n                                    type: 'select',\r\n                                    label: $localize `Item`,\r\n                                    name: 'item',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'dateTime',\r\n                                    label: $localize `Process date`,\r\n                                    name: 'itemProcessDate',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'input',\r\n                                    label: $localize `Weight unit`,\r\n                                    name: 'measureUnit',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'bignotexpand',\r\n                                    name: 'storage',\r\n                                    collections: [\r\n                                        {\r\n                                            type: 'input',\r\n                                            label: $localize `Number of units`,\r\n                                            name: 'numberUnits',\r\n                                            disable: true,\r\n                                        },\r\n                                        {\r\n                                            type: 'input',\r\n                                            name: 'unitAmount',\r\n                                            label: $localize `Unit weight`,\r\n                                            disable: true,\r\n                                        },\r\n                                        {\r\n                                            type: 'select',\r\n                                            label: $localize `Warehouse location`,\r\n                                            name: 'warehouseLocation',\r\n                                            disable: true,\r\n                                        },\r\n                                        {\r\n                                            type: 'input',\r\n                                            label: $localize `Number available units`,\r\n                                            name: 'numberAvailableUnits',\r\n                                            disable: true,\r\n                                        },\r\n                                    ]\r\n                                },\r\n                            ],\r\n                        },\r\n                    ]\r\n                },\r\n            ] : [],\r\n            ...hasItemsTable ? [\r\n                {\r\n                    type: 'bigexpand',\r\n                    name: 'usedItemsTable',\r\n                    label: $localize `Transfering amounts`,\r\n                    options: 'aloneNoAdd',\r\n                    collections: [\r\n                        {\r\n                            type: 'bignotexpand',\r\n                            name: 'storageMove',\r\n                            // label: 'Transfer from',\r\n                            options: 'aloneNoAdd',\r\n                            collections: [\r\n                                {\r\n                                    type: 'inputReadonlySelect',\r\n                                    label: $localize `Item descrption`,\r\n                                    name: 'item',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'date',\r\n                                    label: $localize `Process date`,\r\n                                    name: 'itemProcessDate',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'inputReadonly',\r\n                                    label: $localize `Weight unit`,\r\n                                    name: 'measureUnit',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'inputReadonlySelect',\r\n                                    label: $localize `Warehouse location`,\r\n                                    name: 'warehouseLocation',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'arrayordinal',\r\n                                    label: $localize `Unit weight`,\r\n                                    name: 'amounts',\r\n                                    inputType: 'choose',\r\n                                    options: 3,\r\n                                    collections: 30,\r\n                                },\r\n                            ]\r\n                        },\r\n                    ]\r\n                },\r\n            ] : [],\r\n            {\r\n                type: 'bignotexpand',\r\n                name: 'newWarehouse',\r\n                label: $localize `New warehouse location`,\r\n                collections: [\r\n                    {\r\n                        type: 'select',\r\n                        label: $localize `Warehouse location`,\r\n                        name: 'warehouseLocation',\r\n                        collections: 'somewhere',\r\n                        options: this.genral.getWearhouses(),\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                type: 'bigexpand',\r\n                name: 'itemCounts',\r\n                label: $localize `Count`,\r\n                collections: [\r\n                    {\r\n                        type: 'selectItem',\r\n                        label: $localize `Item descrption`,\r\n                        name: 'item',\r\n                        collections: 'relocation',\r\n                        options: this.genral.getItemsCashewGrades(this.num, cashewGrades),\r\n                    },\r\n                    //  {\r\n                    //      type: 'selectMU',\r\n                    //      label: $localize`Weight unit`,\r\n                    //      name: 'measureUnit',\r\n                    //  },\r\n                    {\r\n                        type: 'selectNormal',\r\n                        label: $localize `Weight unit`,\r\n                        name: 'measureUnit',\r\n                        value: 'KG',\r\n                        options: this.genral.getMeasureUnit(),\r\n                    },\r\n                    {\r\n                        type: 'input',\r\n                        label: $localize `All bags weight`,\r\n                        name: 'accessWeight',\r\n                        inputType: 'numeric',\r\n                        options: 3,\r\n                    },\r\n                    {\r\n                        type: 'arrayordinal',\r\n                        label: $localize `Unit weight`,\r\n                        name: 'amounts',\r\n                        options: 3,\r\n                        collections: 30,\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                type: 'button',\r\n                label: $localize `Submit`,\r\n                name: 'submit',\r\n            }\r\n        ];\r\n    }\r\n    getFunctionality() {\r\n        switch (this.num) {\r\n            case 0:\r\n                return 'RAW_STATION';\r\n            case 1:\r\n                return 'ROASTER_IN';\r\n        }\r\n    }\r\n}\r\nExpImpRelocationComponent.ɵfac = function ExpImpRelocationComponent_Factory(t) { return new (t || ExpImpRelocationComponent)(i0.ɵɵdirectiveInject(i1.Genral), i0.ɵɵdirectiveInject(i2.MatDialog)); };\r\nExpImpRelocationComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ExpImpRelocationComponent, selectors: [[\"exp-imp-relocation\"]], inputs: { num: \"num\", beginData: \"beginData\", newUsed: \"newUsed\" }, outputs: { submitExIm: \"submitExIm\" }, decls: 1, vars: 1, consts: [[4, \"ngIf\"], [3, \"fields\", \"putData\", \"mainLabel\", \"submitForm\"]], template: function ExpImpRelocationComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, ExpImpRelocationComponent_div_0_Template, 2, 3, \"div\", 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngIf\", ctx.isDataAvailable);\r\n    } }, directives: [i3.NgIf, i4.DynamicFormComponent], encapsulation: 2 });\r\n"]},"metadata":{},"sourceType":"module"}