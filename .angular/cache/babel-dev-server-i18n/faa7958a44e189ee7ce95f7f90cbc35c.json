{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { take } from 'rxjs/operators';\nimport { EditDialogComponent } from './edit-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./manager.service\";\nimport * as i2 from \"./../genral.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"../tables/search-details.component\";\nimport * as i6 from \"./naming-setup.pipe\";\nexport class ManagmentUsersComponent {\n  constructor(localService, genral, dialog) {\n    this.localService = localService;\n    this.genral = genral;\n    this.dialog = dialog;\n    this.regConfig = [];\n    this.columnsUsers = [{\n      name: 'personName',\n      label: \"Name\",\n      search: 'normal'\n    }, {\n      name: 'username',\n      label: \"Username\",\n      search: 'normal'\n    }, {\n      name: 'roles',\n      label: \"Roles\",\n      search: 'select',\n      options: this.genral.getRoles()\n    }];\n  }\n\n  ngOnInit() {\n    this.localService.getAllUsers().pipe(take(1)).subscribe(value => {\n      this.usersSource = value;\n    });\n  }\n\n  newPersonDialog() {\n    this.regConfig = [{\n      type: 'select',\n      label: \"Select person\",\n      name: 'person',\n      options: this.localService.getPersons(),\n      validations: [{\n        name: 'required',\n        validator: Validators.required,\n        message: \"Person Required\"\n      }]\n    }];\n    this.addUserConfig();\n    const dialogRef = this.dialog.open(EditDialogComponent, {\n      width: '80%',\n      height: '80%',\n      data: {\n        regConfig: this.regConfig,\n        mainLabel: 'UserPerson',\n        type: 'userPerson'\n      }\n    });\n    dialogRef.afterClosed().subscribe(data => {\n      if (data === 'success') {\n        this.localService.getAllUsers().pipe(take(1)).subscribe(value => {\n          this.usersSource = value;\n        });\n      }\n    });\n  }\n\n  newUserDialog() {\n    this.regConfig = [];\n    this.addUserConfig();\n    const dialogRef = this.dialog.open(EditDialogComponent, {\n      width: '80%',\n      height: '80%',\n      data: {\n        regConfig: this.regConfig,\n        mainLabel: 'User',\n        type: 'user'\n      }\n    });\n    dialogRef.afterClosed().subscribe(data => {\n      if (data === 'success') {\n        this.localService.getAllUsers().pipe(take(1)).subscribe(value => {\n          this.usersSource = value;\n        });\n      }\n    });\n  }\n\n  editNewDialog(user) {\n    this.localService.getUser(user['id']).pipe(take(1)).subscribe(value => {\n      const myRegConfig = [{\n        type: 'bigoutside',\n        name: 'person',\n        collections: [{\n          type: 'input',\n          label: \"Name\",\n          name: 'name',\n          inputType: 'text',\n          disable: true\n        }]\n      }, {\n        type: 'input',\n        label: \"Username\",\n        name: 'username',\n        inputType: 'text',\n        disable: true,\n        validations: [{\n          name: 'required',\n          validator: Validators.required,\n          message: \"Username Required\"\n        }]\n      }, {\n        type: 'selectNormalMultiple',\n        label: \"Roles\",\n        name: 'roles',\n        options: this.genral.getRoles()\n      }, {\n        type: 'button',\n        label: \"Submit\",\n        name: 'submit'\n      }];\n      const dialogRef = this.dialog.open(EditDialogComponent, {\n        width: '80%',\n        height: '80%',\n        data: {\n          putData: value,\n          regConfig: myRegConfig,\n          mainLabel: 'User',\n          type: 'editUser'\n        }\n      });\n      dialogRef.afterClosed().subscribe(data => {\n        if (data === 'success') {\n          this.localService.getAllUsers().pipe(take(1)).subscribe(value => {\n            this.usersSource = value;\n          });\n        }\n      });\n    });\n  }\n\n  addUserConfig() {\n    this.regConfig.push({\n      type: 'bigoutside',\n      name: 'person',\n      collections: [{\n        type: 'input',\n        label: \"Name\",\n        name: 'name',\n        inputType: 'text',\n        disable: true\n      }]\n    }, {\n      type: 'input',\n      label: \"Username\",\n      name: 'username',\n      inputType: 'text',\n      validations: [{\n        name: 'required',\n        validator: Validators.required,\n        message: \"Username Required\"\n      }]\n    }, {\n      type: 'input',\n      label: \"Password\",\n      name: 'password',\n      inputType: 'password',\n      validations: [{\n        name: 'required',\n        validator: Validators.required,\n        message: \"Password Required\"\n      }]\n    }, {\n      type: 'selectNormalMultiple',\n      label: \"Roles\",\n      name: 'roles',\n      options: this.genral.getRoles()\n    }, {\n      type: 'button',\n      label: \"Submit\",\n      name: 'submit'\n    });\n  }\n\n}\n\nManagmentUsersComponent.ɵfac = function ManagmentUsersComponent_Factory(t) {\n  return new (t || ManagmentUsersComponent)(i0.ɵɵdirectiveInject(i1.ManagerService), i0.ɵɵdirectiveInject(i2.Genral), i0.ɵɵdirectiveInject(i3.MatDialog));\n};\n\nManagmentUsersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ManagmentUsersComponent,\n  selectors: [[\"managment-users\"]],\n  decls: 10,\n  vars: 10,\n  consts: function () {\n    let i18n_0;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_6362392309535777035$$SRC_APP_MANAGER_MANAGER_USERS_COMPONENT_TS_1 = goog.getMsg(\"Users Management\");\n      i18n_0 = MSG_EXTERNAL_6362392309535777035$$SRC_APP_MANAGER_MANAGER_USERS_COMPONENT_TS_1;\n    } else {\n      i18n_0 = \"Users Management\";\n    }\n\n    return [[2, \"text-align\", \"center\"], i18n_0, [1, \"centerButtons\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [3, \"dataSource\", \"oneColumns\", \"details\"]];\n  },\n  template: function ManagmentUsersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵi18n(1, 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function ManagmentUsersComponent_Template_button_click_3_listener() {\n        return ctx.newUserDialog();\n      });\n      i0.ɵɵtext(4);\n      i0.ɵɵpipe(5, \"namingPipe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function ManagmentUsersComponent_Template_button_click_6_listener() {\n        return ctx.newPersonDialog();\n      });\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"namingPipe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"search-details\", 4);\n      i0.ɵɵlistener(\"details\", function ManagmentUsersComponent_Template_search_details_details_9_listener($event) {\n        return ctx.editNewDialog($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 4, \"User\", \"add\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(8, 7, \"UserPerson\", \"add\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"dataSource\", ctx.usersSource)(\"oneColumns\", ctx.columnsUsers);\n    }\n  },\n  directives: [i4.MatButton, i5.SearchDetailsComponent],\n  pipes: [i6.NamingPipe],\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:/Users/isral/OneDrive/Documents/AVC-FRONT/src/app/manager/manager-users.component.ts"],"names":["Validators","take","EditDialogComponent","i0","i1","i2","i3","i4","i5","i6","ManagmentUsersComponent","constructor","localService","genral","dialog","regConfig","columnsUsers","name","label","search","options","getRoles","ngOnInit","getAllUsers","pipe","subscribe","value","usersSource","newPersonDialog","type","getPersons","validations","validator","required","message","addUserConfig","dialogRef","open","width","height","data","mainLabel","afterClosed","newUserDialog","editNewDialog","user","getUser","myRegConfig","collections","inputType","disable","putData","push","ɵfac","ManagmentUsersComponent_Factory","t","ɵɵdirectiveInject","ManagerService","Genral","MatDialog","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","consts","i18n_0","ngI18nClosureMode","MSG_EXTERNAL_6362392309535777035$$SRC_APP_MANAGER_MANAGER_USERS_COMPONENT_TS_1","goog","getMsg","template","ManagmentUsersComponent_Template","rf","ctx","ɵɵelementStart","ɵɵi18n","ɵɵelementEnd","ɵɵlistener","ManagmentUsersComponent_Template_button_click_3_listener","ɵɵtext","ɵɵpipe","ManagmentUsersComponent_Template_button_click_6_listener","ManagmentUsersComponent_Template_search_details_details_9_listener","$event","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind2","ɵɵproperty","directives","MatButton","SearchDetailsComponent","pipes","NamingPipe","encapsulation"],"mappings":"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","sourcesContent":["import { Validators } from '@angular/forms';\r\nimport { take } from 'rxjs/operators';\r\nimport { EditDialogComponent } from './edit-dialog.component';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./manager.service\";\r\nimport * as i2 from \"./../genral.service\";\r\nimport * as i3 from \"@angular/material/dialog\";\r\nimport * as i4 from \"@angular/material/button\";\r\nimport * as i5 from \"../tables/search-details.component\";\r\nimport * as i6 from \"./naming-setup.pipe\";\r\nexport class ManagmentUsersComponent {\r\n    constructor(localService, genral, dialog) {\r\n        this.localService = localService;\r\n        this.genral = genral;\r\n        this.dialog = dialog;\r\n        this.regConfig = [];\r\n        this.columnsUsers = [\r\n            {\r\n                name: 'personName',\r\n                label: $localize `Name`,\r\n                search: 'normal',\r\n            },\r\n            {\r\n                name: 'username',\r\n                label: $localize `Username`,\r\n                search: 'normal',\r\n            },\r\n            {\r\n                name: 'roles',\r\n                label: $localize `Roles`,\r\n                search: 'select',\r\n                options: this.genral.getRoles(),\r\n            },\r\n        ];\r\n    }\r\n    ngOnInit() {\r\n        this.localService.getAllUsers().pipe(take(1)).subscribe(value => {\r\n            this.usersSource = value;\r\n        });\r\n    }\r\n    newPersonDialog() {\r\n        this.regConfig = [\r\n            {\r\n                type: 'select',\r\n                label: $localize `Select person`,\r\n                name: 'person',\r\n                options: this.localService.getPersons(),\r\n                validations: [\r\n                    {\r\n                        name: 'required',\r\n                        validator: Validators.required,\r\n                        message: $localize `Person Required`\r\n                    }\r\n                ]\r\n            },\r\n        ];\r\n        this.addUserConfig();\r\n        const dialogRef = this.dialog.open(EditDialogComponent, {\r\n            width: '80%',\r\n            height: '80%',\r\n            data: { regConfig: this.regConfig, mainLabel: 'UserPerson', type: 'userPerson' },\r\n        });\r\n        dialogRef.afterClosed().subscribe(data => {\r\n            if (data === 'success') {\r\n                this.localService.getAllUsers().pipe(take(1)).subscribe(value => {\r\n                    this.usersSource = value;\r\n                });\r\n            }\r\n        });\r\n    }\r\n    newUserDialog() {\r\n        this.regConfig = [];\r\n        this.addUserConfig();\r\n        const dialogRef = this.dialog.open(EditDialogComponent, {\r\n            width: '80%',\r\n            height: '80%',\r\n            data: { regConfig: this.regConfig, mainLabel: 'User', type: 'user' },\r\n        });\r\n        dialogRef.afterClosed().subscribe(data => {\r\n            if (data === 'success') {\r\n                this.localService.getAllUsers().pipe(take(1)).subscribe(value => {\r\n                    this.usersSource = value;\r\n                });\r\n            }\r\n        });\r\n    }\r\n    editNewDialog(user) {\r\n        this.localService.getUser(user['id']).pipe(take(1)).subscribe(value => {\r\n            const myRegConfig = [\r\n                {\r\n                    type: 'bigoutside',\r\n                    name: 'person',\r\n                    collections: [\r\n                        {\r\n                            type: 'input',\r\n                            label: $localize `Name`,\r\n                            name: 'name',\r\n                            inputType: 'text',\r\n                            disable: true,\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    type: 'input',\r\n                    label: $localize `Username`,\r\n                    name: 'username',\r\n                    inputType: 'text',\r\n                    disable: true,\r\n                    validations: [\r\n                        {\r\n                            name: 'required',\r\n                            validator: Validators.required,\r\n                            message: $localize `Username Required`\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    type: 'selectNormalMultiple',\r\n                    label: $localize `Roles`,\r\n                    name: 'roles',\r\n                    options: this.genral.getRoles(),\r\n                },\r\n                {\r\n                    type: 'button',\r\n                    label: $localize `Submit`,\r\n                    name: 'submit',\r\n                }\r\n            ];\r\n            const dialogRef = this.dialog.open(EditDialogComponent, {\r\n                width: '80%',\r\n                height: '80%',\r\n                data: { putData: value, regConfig: myRegConfig, mainLabel: 'User', type: 'editUser' },\r\n            });\r\n            dialogRef.afterClosed().subscribe(data => {\r\n                if (data === 'success') {\r\n                    this.localService.getAllUsers().pipe(take(1)).subscribe(value => {\r\n                        this.usersSource = value;\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    addUserConfig() {\r\n        this.regConfig.push({\r\n            type: 'bigoutside',\r\n            name: 'person',\r\n            collections: [\r\n                {\r\n                    type: 'input',\r\n                    label: $localize `Name`,\r\n                    name: 'name',\r\n                    inputType: 'text',\r\n                    disable: true,\r\n                },\r\n            ]\r\n        }, {\r\n            type: 'input',\r\n            label: $localize `Username`,\r\n            name: 'username',\r\n            inputType: 'text',\r\n            validations: [\r\n                {\r\n                    name: 'required',\r\n                    validator: Validators.required,\r\n                    message: $localize `Username Required`\r\n                }\r\n            ]\r\n        }, {\r\n            type: 'input',\r\n            label: $localize `Password`,\r\n            name: 'password',\r\n            inputType: 'password',\r\n            validations: [\r\n                {\r\n                    name: 'required',\r\n                    validator: Validators.required,\r\n                    message: $localize `Password Required`\r\n                }\r\n            ]\r\n        }, {\r\n            type: 'selectNormalMultiple',\r\n            label: $localize `Roles`,\r\n            name: 'roles',\r\n            options: this.genral.getRoles(),\r\n        }, {\r\n            type: 'button',\r\n            label: $localize `Submit`,\r\n            name: 'submit',\r\n        });\r\n    }\r\n}\r\nManagmentUsersComponent.ɵfac = function ManagmentUsersComponent_Factory(t) { return new (t || ManagmentUsersComponent)(i0.ɵɵdirectiveInject(i1.ManagerService), i0.ɵɵdirectiveInject(i2.Genral), i0.ɵɵdirectiveInject(i3.MatDialog)); };\r\nManagmentUsersComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ManagmentUsersComponent, selectors: [[\"managment-users\"]], decls: 10, vars: 10, consts: function () { let i18n_0; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\r\n        const MSG_EXTERNAL_6362392309535777035$$SRC_APP_MANAGER_MANAGER_USERS_COMPONENT_TS_1 = goog.getMsg(\"Users Management\");\r\n        i18n_0 = MSG_EXTERNAL_6362392309535777035$$SRC_APP_MANAGER_MANAGER_USERS_COMPONENT_TS_1;\r\n    }\r\n    else {\r\n        i18n_0 = $localize `:␟ddbd16ea0d9d8831b1897ff0936e91cd10a1aedd␟6362392309535777035:Users Management`;\r\n    } return [[2, \"text-align\", \"center\"], i18n_0, [1, \"centerButtons\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [3, \"dataSource\", \"oneColumns\", \"details\"]]; }, template: function ManagmentUsersComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"h1\", 0);\r\n        i0.ɵɵi18n(1, 1);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(2, \"div\", 2);\r\n        i0.ɵɵelementStart(3, \"button\", 3);\r\n        i0.ɵɵlistener(\"click\", function ManagmentUsersComponent_Template_button_click_3_listener() { return ctx.newUserDialog(); });\r\n        i0.ɵɵtext(4);\r\n        i0.ɵɵpipe(5, \"namingPipe\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(6, \"button\", 3);\r\n        i0.ɵɵlistener(\"click\", function ManagmentUsersComponent_Template_button_click_6_listener() { return ctx.newPersonDialog(); });\r\n        i0.ɵɵtext(7);\r\n        i0.ɵɵpipe(8, \"namingPipe\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(9, \"search-details\", 4);\r\n        i0.ɵɵlistener(\"details\", function ManagmentUsersComponent_Template_search_details_details_9_listener($event) { return ctx.editNewDialog($event); });\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(4);\r\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 4, \"User\", \"add\"));\r\n        i0.ɵɵadvance(3);\r\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(8, 7, \"UserPerson\", \"add\"));\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵproperty(\"dataSource\", ctx.usersSource)(\"oneColumns\", ctx.columnsUsers);\r\n    } }, directives: [i4.MatButton, i5.SearchDetailsComponent], pipes: [i6.NamingPipe], encapsulation: 2 });\r\n"]},"metadata":{},"sourceType":"module"}