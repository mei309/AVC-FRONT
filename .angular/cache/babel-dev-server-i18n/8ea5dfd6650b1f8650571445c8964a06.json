{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport { uniq, isEqual } from 'lodash-es';\nimport { Subject } from 'rxjs';\nimport { map, startWith, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/genral.service\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/autocomplete\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/core\";\nimport * as i8 from \"@angular/material/button\";\nconst _c0 = [\"trigger\"];\n\nfunction SelectgroupComponent_mat_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r7, \" \");\n  }\n}\n\nfunction SelectgroupComponent_mat_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r8.value, \" \");\n  }\n}\n\nfunction SelectgroupComponent_ng_container_13_mat_error_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const validation_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(validation_r9.message);\n  }\n}\n\nfunction SelectgroupComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 13);\n    i0.ɵɵtemplate(1, SelectgroupComponent_ng_container_13_mat_error_1_Template, 2, 1, \"mat-error\", 14);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const validation_r9 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.group.get(ctx_r5.field.collections[1].name).hasError(validation_r9.name));\n  }\n}\n\nfunction SelectgroupComponent_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function SelectgroupComponent_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.allPos();\n    });\n    i0.ɵɵi18n(1, 16);\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class SelectgroupComponent {\n  constructor(genral) {\n    this.genral = genral;\n    this.destroySubject$ = new Subject();\n    this.options2 = [];\n  }\n\n  ngOnInit() {\n    this.genralLink = this.field.inputType;\n    let linkId = null;\n    this.selectFormFirst = new FormControl(null);\n    this.temp = this.field.options;\n    this.temp.pipe(take(1)).subscribe(arg => {\n      // arg.forEach(val => this.linkedtwo.push(Object.assign({}, val)));\n      this.linkedtwo = arg; // this.options2 = arg;\n\n      this.linkedone = uniq(arg.map(opt => opt[this.genralLink]));\n      this.options1 = this.linkedone;\n\n      if (this.group.controls[this.field.collections[1].name].value && typeof this.group.controls[this.field.collections[1].name].value === 'object') {\n        this.selectFormFirst.setValue(this.group.controls[this.field.collections[1].name].value[this.genralLink]);\n        linkId = this.selectFormFirst;\n      } else {\n        if (this.field.collections[0].value !== undefined) {\n          this.linkedone.forEach(option => {\n            if (option === this.field.collections[0].value) {\n              this.selectFormFirst.setValue(option);\n              linkId = option;\n            }\n          });\n        }\n      }\n\n      if (typeof this.group.controls[this.field.collections[1].name].value == 'string' && this.field.collections[1].value !== undefined) {\n        let putNull = true;\n        this.linkedtwo.forEach(option => {\n          if (option.value === this.field.collections[1].value) {\n            this.group.controls[this.field.collections[1].name].setValue(option);\n            this.selectFormFirst.setValue(option[this.genralLink]);\n            linkId = this.selectFormFirst;\n            putNull = false;\n          }\n        });\n\n        if (putNull) {\n          this.group.controls[this.field.collections[1].name].setValue(null);\n        }\n      }\n\n      if (linkId !== null) {\n        let options = [];\n        this.linkedtwo.forEach(option => {\n          if (isEqual(option[this.genralLink], linkId)) {\n            options.push(option);\n          }\n        });\n        this.options2 = options;\n      } else {\n        this.options2 = this.linkedtwo;\n      }\n\n      if (this.field.collections[0].collections === 'somewhere') {\n        this.filteredOptions1 = this.selectFormFirst.valueChanges.pipe(startWith(''), map(val => val ? this.filter1somewhere(val) : this.options1.slice()));\n      } else {\n        this.filteredOptions1 = this.selectFormFirst.valueChanges.pipe(startWith(''), map(val => val ? this.filter1(val) : this.options1.slice()));\n      }\n\n      if (this.field.collections[1].collections === 'somewhere') {\n        this.filteredOptions2 = this.group.controls[this.field.collections[1].name].valueChanges.pipe(startWith(''), map(val => val ? this.filter2somewhere(val) : this.options2.slice()));\n      } else {\n        this.filteredOptions2 = this.group.controls[this.field.collections[1].name].valueChanges.pipe(startWith(''), map(val => val ? this.filter2(val) : this.options2.slice()));\n      }\n\n      if (this.group.controls[this.field.collections[1].name].disabled) {\n        this.selectFormFirst.disable({\n          emitEvent: false\n        });\n      }\n    }); // this.group.get(this.field.collections[1].name).valueChanges.pipe(takeUntil(this.destroySubject$)).subscribe(val => {\n    //   if(!val && val !== '') {\n    //     this.selectFormFirst.setValue(null, {emitEvent: false});\n    //   }\n    //   if(this.group.controls[this.field.collections[1].name].disabled) {\n    //     this.selectFormFirst.disable();\n    //   } else {\n    //     this.selectFormFirst.enable();\n    //   }\n    // });\n  }\n  /**public oneChangedHandler(e: MatAutocompleteSelectedEvent){\r\n    let options = [];\r\n    this.linkedtwo.forEach(option => {\r\n        if (option[this.genralLink] === e.option.value.id) {\r\n            options.push(option);\r\n        }\r\n    });\r\n    this.options2 = options;\r\n    if (options.length) {\r\n      //this.group.controls[this.field.collections[1].name].setValue(options[0]);\r\n    } else {\r\n      this.group.controls[this.field.collections[1].name].setValue(null);\r\n    }\r\n  }\r\n    \r\n  public twoChangedHandler(e: MatAutocompleteSelectedEvent){\r\n    this.linkedone.forEach(option => {\r\n        if (option.id === e.option.value[this.genralLink]) {\r\n            this.group.controls[this.field.collections[0].name].setValue(option);\r\n        }\r\n    });\r\n  }*/\n\n\n  filter1(val) {\n    if (val && typeof val === 'string') {\n      const filterValue = val.toLowerCase();\n      return this.options1.filter(option => option.toLowerCase().indexOf(filterValue) === 0);\n    } else {\n      return this.options1;\n    }\n  }\n\n  filter2(val) {\n    if (val && typeof val === 'string') {\n      const filterValue = val.toLowerCase();\n      return this.options2.filter(option => option.value.toLowerCase().indexOf(filterValue) === 0);\n    } else {\n      return this.options2;\n    }\n  }\n\n  filter1somewhere(val) {\n    if (val && typeof val === 'string') {\n      const filterValue = val.toLowerCase();\n      return this.options1.filter(option => option.toLowerCase().includes(filterValue));\n    } else {\n      return this.options1;\n    }\n  }\n\n  filter2somewhere(val) {\n    if (val && typeof val === 'string') {\n      const filterValue = val.toLowerCase();\n      return this.options2.filter(option => option.value.toLowerCase().includes(filterValue));\n    } else {\n      return this.options2;\n    }\n  }\n\n  getOptionText(option) {\n    if (option !== null) {\n      return option.value;\n    }\n  }\n\n  InputControlOne(event) {\n    setTimeout(() => {\n      let isValueTrue = this.linkedone.filter(opt => opt.toLowerCase() === event.target.value.toLowerCase());\n\n      if (isValueTrue.length !== 0) {\n        this.selectFormFirst.setValue(isValueTrue[0], {\n          emitEvent: false\n        });\n        let options = [];\n        this.linkedtwo.forEach(option => {\n          if (isEqual(option[this.genralLink], isValueTrue[0])) {\n            options.push(option);\n          }\n        });\n        this.options2 = options;\n        console.log(options);\n        let isExist = options.filter(opt => opt === this.group.controls[this.field.collections[1].name].value);\n\n        if (isExist.length === 0) {\n          this.group.controls[this.field.collections[1].name].setValue(null);\n        }\n\n        if (!this.group.controls[this.field.collections[1].name].value) {\n          // setTimeout(() => {\n          this.trigger.openPanel(); // }, 1000);\n        }\n      } else {\n        this.selectFormFirst.setValue(null, {\n          emitEvent: false\n        });\n        this.options2 = this.linkedtwo;\n        this.group.controls[this.field.collections[1].name].updateValueAndValidity({\n          onlySelf: true,\n          emitEvent: true\n        }); // setTimeout(() => {\n\n        this.trigger.openPanel(); // }, 1000);\n      }\n    }, 300);\n  }\n\n  InputControlTwo(event) {\n    if (event.relatedTarget && event.relatedTarget.tagName === 'MAT-OPTION') {\n      // the input was blurred, but the user is still interacting with the component, they've simply selected a mat-option\n      return;\n    }\n\n    let isValueTrue = this.linkedtwo.filter(opt => opt.value.toLowerCase() === event.target.value.toLowerCase());\n\n    if (isValueTrue.length !== 0) {\n      this.group.controls[this.field.collections[1].name].setValue(isValueTrue[0], {\n        emitEvent: false\n      });\n\n      if (!this.selectFormFirst || this.selectFormFirst !== isValueTrue[0][this.genralLink]) {\n        this.selectFormFirst.setValue(isValueTrue[0][this.genralLink]);\n      }\n    } else {\n      this.group.controls[this.field.collections[1].name].setValue(null, {\n        emitEvent: false\n      });\n    }\n  }\n\n  selectedTwo(event) {\n    setTimeout(() => {\n      this.selectFormFirst.setValue(event[this.genralLink], {\n        emitEvent: false\n      });\n    }, 100);\n  }\n\n  bindValidations(validations) {\n    if (validations.length > 0) {\n      const validList = [];\n      validations.forEach(valid => {\n        validList.push(valid.validator);\n      });\n      return Validators.compose(validList);\n    }\n\n    return null;\n  }\n\n  allPos() {\n    this.genral.findAllProductPoCodes().pipe(take(1)).subscribe(arg => {\n      this.linkedtwo = arg;\n      this.linkedone = uniq(arg.map(opt => opt[this.genralLink]));\n      this.options1 = this.linkedone;\n      this.options2 = arg;\n      this.group.controls[this.field.collections[1].name].setValue(this.group.controls[this.field.collections[1].name].value);\n      setTimeout(() => {\n        this.trigger.openPanel();\n      }, 100);\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroySubject$.next();\n  }\n\n}\n\nSelectgroupComponent.ɵfac = function SelectgroupComponent_Factory(t) {\n  return new (t || SelectgroupComponent)(i0.ɵɵdirectiveInject(i1.Genral));\n};\n\nSelectgroupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SelectgroupComponent,\n  selectors: [[\"app-selectgroup\"]],\n  viewQuery: function SelectgroupComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5, MatAutocompleteTrigger);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n    }\n  },\n  decls: 15,\n  vars: 19,\n  consts: function () {\n    let i18n_1;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_6093456058806574878$$SRC_APP_COMPONENTS_SELECTS_SELECT_GROUP_COMPONENT_TS__2 = goog.getMsg(\"All #POS\");\n      i18n_1 = MSG_EXTERNAL_6093456058806574878$$SRC_APP_COMPONENTS_SELECTS_SELECT_GROUP_COMPONENT_TS__2;\n    } else {\n      i18n_1 = \"All #POS\";\n    }\n\n    return [[1, \"one-field\", \"margin-top\"], [\"matInput\", \"\", 3, \"autocomplete\", \"placeholder\", \"matAutocomplete\", \"value\", \"formControl\", \"blur\"], [\"autoActiveFirstOption\", \"\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"one-field\", \"margin-top\", 3, \"formGroup\"], [\"matInput\", \"\", 3, \"autocomplete\", \"placeholder\", \"matAutocomplete\", \"formControlName\", \"blur\"], [\"trigger\", \"\"], [\"autoActiveFirstOption\", \"\", 3, \"displayWith\", \"optionSelected\"], [\"auto2\", \"matAutocomplete\"], [\"ngProjectAs\", \"mat-error\", 5, [\"mat-error\"], 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\", 4, \"ngIf\"], [3, \"value\"], [\"ngProjectAs\", \"mat-error\", 5, [\"mat-error\"]], [4, \"ngIf\"], [\"type\", \"button\", \"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\"], i18n_1];\n  },\n  template: function SelectgroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-form-field\", 0);\n      i0.ɵɵelementStart(1, \"input\", 1);\n      i0.ɵɵlistener(\"blur\", function SelectgroupComponent_Template_input_blur_1_listener($event) {\n        return ctx.InputControlOne($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"mat-autocomplete\", 2, 3);\n      i0.ɵɵtemplate(4, SelectgroupComponent_mat_option_4_Template, 2, 2, \"mat-option\", 4);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"mat-form-field\", 5);\n      i0.ɵɵelementStart(7, \"input\", 6, 7);\n      i0.ɵɵlistener(\"blur\", function SelectgroupComponent_Template_input_blur_7_listener($event) {\n        return ctx.InputControlTwo($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-autocomplete\", 8, 9);\n      i0.ɵɵlistener(\"optionSelected\", function SelectgroupComponent_Template_mat_autocomplete_optionSelected_9_listener($event) {\n        return ctx.selectedTwo($event.option.value);\n      });\n      i0.ɵɵtemplate(11, SelectgroupComponent_mat_option_11_Template, 2, 2, \"mat-option\", 4);\n      i0.ɵɵpipe(12, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, SelectgroupComponent_ng_container_13_Template, 2, 1, \"ng-container\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, SelectgroupComponent_button_14_Template, 2, 0, \"button\", 11);\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(3);\n\n      const _r3 = i0.ɵɵreference(10);\n\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"autocomplete\", ctx.field.collections[0].autocomplete)(\"placeholder\", ctx.field.collections[0].label)(\"matAutocomplete\", _r0)(\"value\", ctx.selectFormFirst.value)(\"formControl\", ctx.selectFormFirst);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 15, ctx.filteredOptions1));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.group);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"autocomplete\", ctx.field.collections[1].autocomplete)(\"placeholder\", ctx.field.collections[1].label)(\"matAutocomplete\", _r3)(\"formControlName\", ctx.field.collections[1].name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"displayWith\", ctx.getOptionText);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(12, 17, ctx.filteredOptions2));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.field.collections[1].validations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.field.label === \"withAllPos\");\n    }\n  },\n  directives: [i2.MatFormField, i3.MatInput, i4.MatAutocompleteTrigger, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlDirective, i4.MatAutocomplete, i6.NgForOf, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i6.NgIf, i7.MatOption, i2.MatError, i8.MatButton],\n  pipes: [i6.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:/Users/isral/OneDrive/Documents/AVC-FRONT/src/app/components/selects/select-group.component.ts"],"names":["FormControl","Validators","MatAutocompleteTrigger","uniq","isEqual","Subject","map","startWith","take","i0","i1","i2","i3","i4","i5","i6","i7","i8","_c0","SelectgroupComponent_mat_option_4_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","item_r7","$implicit","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","SelectgroupComponent_mat_option_11_Template","item_r8","value","SelectgroupComponent_ng_container_13_mat_error_1_Template","validation_r9","ɵɵnextContext","ɵɵtextInterpolate","message","SelectgroupComponent_ng_container_13_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","ctx_r5","group","get","field","collections","name","hasError","SelectgroupComponent_button_14_Template","_r13","ɵɵgetCurrentView","ɵɵlistener","SelectgroupComponent_button_14_Template_button_click_0_listener","ɵɵrestoreView","ctx_r12","allPos","ɵɵi18n","SelectgroupComponent","constructor","genral","destroySubject$","options2","ngOnInit","genralLink","inputType","linkId","selectFormFirst","temp","options","pipe","subscribe","arg","linkedtwo","linkedone","opt","options1","controls","setValue","undefined","forEach","option","putNull","push","filteredOptions1","valueChanges","val","filter1somewhere","slice","filter1","filteredOptions2","filter2somewhere","filter2","disabled","disable","emitEvent","filterValue","toLowerCase","filter","indexOf","includes","getOptionText","InputControlOne","event","setTimeout","isValueTrue","target","length","console","log","isExist","trigger","openPanel","updateValueAndValidity","onlySelf","InputControlTwo","relatedTarget","tagName","selectedTwo","bindValidations","validations","validList","valid","validator","compose","findAllProductPoCodes","ngOnDestroy","next","ɵfac","SelectgroupComponent_Factory","t","ɵɵdirectiveInject","Genral","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","SelectgroupComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","decls","vars","consts","i18n_1","ngI18nClosureMode","MSG_EXTERNAL_6093456058806574878$$SRC_APP_COMPONENTS_SELECTS_SELECT_GROUP_COMPONENT_TS__2","goog","getMsg","template","SelectgroupComponent_Template","SelectgroupComponent_Template_input_blur_1_listener","$event","ɵɵpipe","SelectgroupComponent_Template_input_blur_7_listener","SelectgroupComponent_Template_mat_autocomplete_optionSelected_9_listener","_r0","ɵɵreference","_r3","autocomplete","label","ɵɵpipeBind1","directives","MatFormField","MatInput","DefaultValueAccessor","NgControlStatus","FormControlDirective","MatAutocomplete","NgForOf","NgControlStatusGroup","FormGroupDirective","FormControlName","NgIf","MatOption","MatError","MatButton","pipes","AsyncPipe","encapsulation"],"mappings":"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","sourcesContent":["import { FormControl, Validators } from '@angular/forms';\r\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nimport { uniq, isEqual } from 'lodash-es';\r\nimport { Subject } from 'rxjs';\r\nimport { map, startWith, take } from 'rxjs/operators';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"src/app/genral.service\";\r\nimport * as i2 from \"@angular/material/form-field\";\r\nimport * as i3 from \"@angular/material/input\";\r\nimport * as i4 from \"@angular/material/autocomplete\";\r\nimport * as i5 from \"@angular/forms\";\r\nimport * as i6 from \"@angular/common\";\r\nimport * as i7 from \"@angular/material/core\";\r\nimport * as i8 from \"@angular/material/button\";\r\nconst _c0 = [\"trigger\"];\r\nfunction SelectgroupComponent_mat_option_4_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const item_r7 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"value\", item_r7);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate1(\" \", item_r7, \" \");\r\n} }\r\nfunction SelectgroupComponent_mat_option_11_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const item_r8 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"value\", item_r8);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate1(\" \", item_r8.value, \" \");\r\n} }\r\nfunction SelectgroupComponent_ng_container_13_mat_error_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"mat-error\");\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const validation_r9 = i0.ɵɵnextContext().$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(validation_r9.message);\r\n} }\r\nfunction SelectgroupComponent_ng_container_13_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementContainerStart(0, 13);\r\n    i0.ɵɵtemplate(1, SelectgroupComponent_ng_container_13_mat_error_1_Template, 2, 1, \"mat-error\", 14);\r\n    i0.ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const validation_r9 = ctx.$implicit;\r\n    const ctx_r5 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.group.get(ctx_r5.field.collections[1].name).hasError(validation_r9.name));\r\n} }\r\nfunction SelectgroupComponent_button_14_Template(rf, ctx) { if (rf & 1) {\r\n    const _r13 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"button\", 15);\r\n    i0.ɵɵlistener(\"click\", function SelectgroupComponent_button_14_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r13); const ctx_r12 = i0.ɵɵnextContext(); return ctx_r12.allPos(); });\r\n    i0.ɵɵi18n(1, 16);\r\n    i0.ɵɵelementEnd();\r\n} }\r\nexport class SelectgroupComponent {\r\n    constructor(genral) {\r\n        this.genral = genral;\r\n        this.destroySubject$ = new Subject();\r\n        this.options2 = [];\r\n    }\r\n    ngOnInit() {\r\n        this.genralLink = this.field.inputType;\r\n        let linkId = null;\r\n        this.selectFormFirst = new FormControl(null);\r\n        this.temp = this.field.options;\r\n        this.temp.pipe(take(1)).subscribe(arg => {\r\n            // arg.forEach(val => this.linkedtwo.push(Object.assign({}, val)));\r\n            this.linkedtwo = arg;\r\n            // this.options2 = arg;\r\n            this.linkedone = uniq(arg.map(opt => opt[this.genralLink]));\r\n            this.options1 = this.linkedone;\r\n            if (this.group.controls[this.field.collections[1].name].value && typeof this.group.controls[this.field.collections[1].name].value === 'object') {\r\n                this.selectFormFirst.setValue(this.group.controls[this.field.collections[1].name].value[this.genralLink]);\r\n                linkId = this.selectFormFirst;\r\n            }\r\n            else {\r\n                if (this.field.collections[0].value !== undefined) {\r\n                    this.linkedone.forEach(option => {\r\n                        if (option === this.field.collections[0].value) {\r\n                            this.selectFormFirst.setValue(option);\r\n                            linkId = option;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (typeof this.group.controls[this.field.collections[1].name].value == 'string' && this.field.collections[1].value !== undefined) {\r\n                let putNull = true;\r\n                this.linkedtwo.forEach(option => {\r\n                    if (option.value === this.field.collections[1].value) {\r\n                        this.group.controls[this.field.collections[1].name].setValue(option);\r\n                        this.selectFormFirst.setValue(option[this.genralLink]);\r\n                        linkId = this.selectFormFirst;\r\n                        putNull = false;\r\n                    }\r\n                });\r\n                if (putNull) {\r\n                    this.group.controls[this.field.collections[1].name].setValue(null);\r\n                }\r\n            }\r\n            if (linkId !== null) {\r\n                let options = [];\r\n                this.linkedtwo.forEach(option => {\r\n                    if (isEqual(option[this.genralLink], linkId)) {\r\n                        options.push(option);\r\n                    }\r\n                });\r\n                this.options2 = options;\r\n            }\r\n            else {\r\n                this.options2 = this.linkedtwo;\r\n            }\r\n            if (this.field.collections[0].collections === 'somewhere') {\r\n                this.filteredOptions1 = this.selectFormFirst.valueChanges.pipe(startWith(''), map((val) => val ? this.filter1somewhere(val) : this.options1.slice()));\r\n            }\r\n            else {\r\n                this.filteredOptions1 = this.selectFormFirst.valueChanges.pipe(startWith(''), map((val) => val ? this.filter1(val) : this.options1.slice()));\r\n            }\r\n            if (this.field.collections[1].collections === 'somewhere') {\r\n                this.filteredOptions2 = this.group.controls[this.field.collections[1].name].valueChanges.pipe(startWith(''), map((val) => val ? this.filter2somewhere(val) : this.options2.slice()));\r\n            }\r\n            else {\r\n                this.filteredOptions2 = this.group.controls[this.field.collections[1].name].valueChanges.pipe(startWith(''), map((val) => val ? this.filter2(val) : this.options2.slice()));\r\n            }\r\n            if (this.group.controls[this.field.collections[1].name].disabled) {\r\n                this.selectFormFirst.disable({ emitEvent: false });\r\n            }\r\n        });\r\n        // this.group.get(this.field.collections[1].name).valueChanges.pipe(takeUntil(this.destroySubject$)).subscribe(val => {\r\n        //   if(!val && val !== '') {\r\n        //     this.selectFormFirst.setValue(null, {emitEvent: false});\r\n        //   }\r\n        //   if(this.group.controls[this.field.collections[1].name].disabled) {\r\n        //     this.selectFormFirst.disable();\r\n        //   } else {\r\n        //     this.selectFormFirst.enable();\r\n        //   }\r\n        // });\r\n    }\r\n    /**public oneChangedHandler(e: MatAutocompleteSelectedEvent){\r\n      let options = [];\r\n      this.linkedtwo.forEach(option => {\r\n          if (option[this.genralLink] === e.option.value.id) {\r\n              options.push(option);\r\n          }\r\n      });\r\n      this.options2 = options;\r\n      if (options.length) {\r\n        //this.group.controls[this.field.collections[1].name].setValue(options[0]);\r\n      } else {\r\n        this.group.controls[this.field.collections[1].name].setValue(null);\r\n      }\r\n    }\r\n  \r\n  \r\n    public twoChangedHandler(e: MatAutocompleteSelectedEvent){\r\n      this.linkedone.forEach(option => {\r\n          if (option.id === e.option.value[this.genralLink]) {\r\n              this.group.controls[this.field.collections[0].name].setValue(option);\r\n          }\r\n      });\r\n    }*/\r\n    filter1(val) {\r\n        if (val && typeof (val) === 'string') {\r\n            const filterValue = val.toLowerCase();\r\n            return this.options1.filter(option => option.toLowerCase().indexOf(filterValue) === 0);\r\n        }\r\n        else {\r\n            return this.options1;\r\n        }\r\n    }\r\n    filter2(val) {\r\n        if (val && typeof (val) === 'string') {\r\n            const filterValue = val.toLowerCase();\r\n            return this.options2.filter(option => option.value.toLowerCase().indexOf(filterValue) === 0);\r\n        }\r\n        else {\r\n            return this.options2;\r\n        }\r\n    }\r\n    filter1somewhere(val) {\r\n        if (val && typeof (val) === 'string') {\r\n            const filterValue = val.toLowerCase();\r\n            return this.options1.filter(option => option.toLowerCase().includes(filterValue));\r\n        }\r\n        else {\r\n            return this.options1;\r\n        }\r\n    }\r\n    filter2somewhere(val) {\r\n        if (val && typeof (val) === 'string') {\r\n            const filterValue = val.toLowerCase();\r\n            return this.options2.filter(option => option.value.toLowerCase().includes(filterValue));\r\n        }\r\n        else {\r\n            return this.options2;\r\n        }\r\n    }\r\n    getOptionText(option) {\r\n        if (option !== null) {\r\n            return option.value;\r\n        }\r\n    }\r\n    InputControlOne(event) {\r\n        setTimeout(() => {\r\n            let isValueTrue = this.linkedone.filter(opt => opt.toLowerCase() === event.target.value.toLowerCase());\r\n            if (isValueTrue.length !== 0) {\r\n                this.selectFormFirst.setValue(isValueTrue[0], { emitEvent: false });\r\n                let options = [];\r\n                this.linkedtwo.forEach(option => {\r\n                    if (isEqual(option[this.genralLink], isValueTrue[0])) {\r\n                        options.push(option);\r\n                    }\r\n                });\r\n                this.options2 = options;\r\n                console.log(options);\r\n                let isExist = options.filter(opt => opt === this.group.controls[this.field.collections[1].name].value);\r\n                if (isExist.length === 0) {\r\n                    this.group.controls[this.field.collections[1].name].setValue(null);\r\n                }\r\n                if (!this.group.controls[this.field.collections[1].name].value) {\r\n                    // setTimeout(() => {\r\n                    this.trigger.openPanel();\r\n                    // }, 1000);\r\n                }\r\n            }\r\n            else {\r\n                this.selectFormFirst.setValue(null, { emitEvent: false });\r\n                this.options2 = this.linkedtwo;\r\n                this.group.controls[this.field.collections[1].name].updateValueAndValidity({ onlySelf: true, emitEvent: true });\r\n                // setTimeout(() => {\r\n                this.trigger.openPanel();\r\n                // }, 1000);\r\n            }\r\n        }, 300);\r\n    }\r\n    InputControlTwo(event) {\r\n        if (event.relatedTarget && event.relatedTarget.tagName === 'MAT-OPTION') {\r\n            // the input was blurred, but the user is still interacting with the component, they've simply selected a mat-option\r\n            return;\r\n        }\r\n        let isValueTrue = this.linkedtwo.filter(opt => opt.value.toLowerCase() === event.target.value.toLowerCase());\r\n        if (isValueTrue.length !== 0) {\r\n            this.group.controls[this.field.collections[1].name].setValue(isValueTrue[0], { emitEvent: false });\r\n            if (!this.selectFormFirst || this.selectFormFirst !== isValueTrue[0][this.genralLink]) {\r\n                this.selectFormFirst.setValue(isValueTrue[0][this.genralLink]);\r\n            }\r\n        }\r\n        else {\r\n            this.group.controls[this.field.collections[1].name].setValue(null, { emitEvent: false });\r\n        }\r\n    }\r\n    selectedTwo(event) {\r\n        setTimeout(() => {\r\n            this.selectFormFirst.setValue(event[this.genralLink], { emitEvent: false });\r\n        }, 100);\r\n    }\r\n    bindValidations(validations) {\r\n        if (validations.length > 0) {\r\n            const validList = [];\r\n            validations.forEach(valid => {\r\n                validList.push(valid.validator);\r\n            });\r\n            return Validators.compose(validList);\r\n        }\r\n        return null;\r\n    }\r\n    allPos() {\r\n        this.genral.findAllProductPoCodes().pipe(take(1)).subscribe(arg => {\r\n            this.linkedtwo = arg;\r\n            this.linkedone = uniq(arg.map(opt => opt[this.genralLink]));\r\n            this.options1 = this.linkedone;\r\n            this.options2 = arg;\r\n            this.group.controls[this.field.collections[1].name].setValue(this.group.controls[this.field.collections[1].name].value);\r\n            setTimeout(() => {\r\n                this.trigger.openPanel();\r\n            }, 100);\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroySubject$.next();\r\n    }\r\n}\r\nSelectgroupComponent.ɵfac = function SelectgroupComponent_Factory(t) { return new (t || SelectgroupComponent)(i0.ɵɵdirectiveInject(i1.Genral)); };\r\nSelectgroupComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SelectgroupComponent, selectors: [[\"app-selectgroup\"]], viewQuery: function SelectgroupComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(_c0, 5, MatAutocompleteTrigger);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\r\n    } }, decls: 15, vars: 19, consts: function () { let i18n_1; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\r\n        const MSG_EXTERNAL_6093456058806574878$$SRC_APP_COMPONENTS_SELECTS_SELECT_GROUP_COMPONENT_TS__2 = goog.getMsg(\"All #POS\");\r\n        i18n_1 = MSG_EXTERNAL_6093456058806574878$$SRC_APP_COMPONENTS_SELECTS_SELECT_GROUP_COMPONENT_TS__2;\r\n    }\r\n    else {\r\n        i18n_1 = $localize `:␟ba242610521d2790a674ec9d9fefdb1be12ec60c␟6093456058806574878:All #POS`;\r\n    } return [[1, \"one-field\", \"margin-top\"], [\"matInput\", \"\", 3, \"autocomplete\", \"placeholder\", \"matAutocomplete\", \"value\", \"formControl\", \"blur\"], [\"autoActiveFirstOption\", \"\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"one-field\", \"margin-top\", 3, \"formGroup\"], [\"matInput\", \"\", 3, \"autocomplete\", \"placeholder\", \"matAutocomplete\", \"formControlName\", \"blur\"], [\"trigger\", \"\"], [\"autoActiveFirstOption\", \"\", 3, \"displayWith\", \"optionSelected\"], [\"auto2\", \"matAutocomplete\"], [\"ngProjectAs\", \"mat-error\", 5, [\"mat-error\"], 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\", 4, \"ngIf\"], [3, \"value\"], [\"ngProjectAs\", \"mat-error\", 5, [\"mat-error\"]], [4, \"ngIf\"], [\"type\", \"button\", \"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\"], i18n_1]; }, template: function SelectgroupComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"mat-form-field\", 0);\r\n        i0.ɵɵelementStart(1, \"input\", 1);\r\n        i0.ɵɵlistener(\"blur\", function SelectgroupComponent_Template_input_blur_1_listener($event) { return ctx.InputControlOne($event); });\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(2, \"mat-autocomplete\", 2, 3);\r\n        i0.ɵɵtemplate(4, SelectgroupComponent_mat_option_4_Template, 2, 2, \"mat-option\", 4);\r\n        i0.ɵɵpipe(5, \"async\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(6, \"mat-form-field\", 5);\r\n        i0.ɵɵelementStart(7, \"input\", 6, 7);\r\n        i0.ɵɵlistener(\"blur\", function SelectgroupComponent_Template_input_blur_7_listener($event) { return ctx.InputControlTwo($event); });\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(9, \"mat-autocomplete\", 8, 9);\r\n        i0.ɵɵlistener(\"optionSelected\", function SelectgroupComponent_Template_mat_autocomplete_optionSelected_9_listener($event) { return ctx.selectedTwo($event.option.value); });\r\n        i0.ɵɵtemplate(11, SelectgroupComponent_mat_option_11_Template, 2, 2, \"mat-option\", 4);\r\n        i0.ɵɵpipe(12, \"async\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵtemplate(13, SelectgroupComponent_ng_container_13_Template, 2, 1, \"ng-container\", 10);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵtemplate(14, SelectgroupComponent_button_14_Template, 2, 0, \"button\", 11);\r\n    } if (rf & 2) {\r\n        const _r0 = i0.ɵɵreference(3);\r\n        const _r3 = i0.ɵɵreference(10);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"autocomplete\", ctx.field.collections[0].autocomplete)(\"placeholder\", ctx.field.collections[0].label)(\"matAutocomplete\", _r0)(\"value\", ctx.selectFormFirst.value)(\"formControl\", ctx.selectFormFirst);\r\n        i0.ɵɵadvance(3);\r\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 15, ctx.filteredOptions1));\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵproperty(\"formGroup\", ctx.group);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"autocomplete\", ctx.field.collections[1].autocomplete)(\"placeholder\", ctx.field.collections[1].label)(\"matAutocomplete\", _r3)(\"formControlName\", ctx.field.collections[1].name);\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵproperty(\"displayWith\", ctx.getOptionText);\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(12, 17, ctx.filteredOptions2));\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.field.collections[1].validations);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.field.label === \"withAllPos\");\r\n    } }, directives: [i2.MatFormField, i3.MatInput, i4.MatAutocompleteTrigger, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlDirective, i4.MatAutocomplete, i6.NgForOf, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i6.NgIf, i7.MatOption, i2.MatError, i8.MatButton], pipes: [i6.AsyncPipe], encapsulation: 2 });\r\n"]},"metadata":{},"sourceType":"module"}