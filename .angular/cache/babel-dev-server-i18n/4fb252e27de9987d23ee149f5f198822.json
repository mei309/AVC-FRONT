{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../genral.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../components/dynamic-form/dynamic-form.component\";\n\nfunction ExportImportComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"dynamic-form\", 1);\n    i0.ɵɵlistener(\"submitForm\", function ExportImportComponent_div_0_Template_dynamic_form_submitForm_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.onSubmit($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"fields\", ctx_r0.regConfig)(\"putData\", ctx_r0.dataSource)(\"mainLabel\", ctx_r0.mainLabel + \"ing cashew process\");\n  }\n}\n\nexport class ExportImportComponent {\n  constructor(genral, dialog) {\n    this.genral = genral;\n    this.dialog = dialog;\n    this.isDataAvailable = false;\n    this.submitExIm = new EventEmitter();\n    this.isOnePo = true;\n  }\n\n  onSubmit(value) {\n    //     console.log(value);\n    // }\n    // onSubmit1(value: any) {\n    var arr = [];\n\n    if (value['usedItemsNormal']) {\n      value['usedItemsNormal'].forEach(element => {\n        element['usedItems'] = element['usedItems'].filter(amou => amou.numberUsedUnits);\n        element['groupName'] = this.isOnePo ? 'normal' : 'normalPos';\n      });\n      value['usedItemsNormal'] = value['usedItemsNormal'].filter(amou => amou.usedItems.length);\n      arr = arr.concat(value['usedItemsNormal']);\n      delete value['usedItemsNormal'];\n    }\n\n    if (value['usedItemsTable']) {\n      value['usedItemsTable'].forEach(element => {\n        element['usedItem']['amounts'] = element['usedItem']['amounts'].filter(amou => amou.take);\n        element['usedItem']['amounts'].forEach(ele => {\n          if (!ele['storageId']) {\n            ele['storageId'] = ele['id'];\n            delete ele['id'];\n            ele['storageVersion'] = ele['version'];\n            delete ele['version'];\n          }\n        });\n        element['groupName'] = this.isOnePo ? 'table' : 'tablePos';\n      });\n      value['usedItemsTable'] = value['usedItemsTable'].filter(amou => amou.usedItem.amounts.length);\n      arr = arr.concat(value['usedItemsTable']);\n      delete value['usedItemsTable'];\n    }\n\n    if (value['materialUsed']) {\n      value['materialUsed'].forEach(element => {\n        element['usedItems'] = element['usedItems'].filter(amou => amou.numberUsedUnits);\n        element['groupName'] = 'meterialPos';\n      });\n      value['materialUsed'] = value['materialUsed'].filter(amou => amou.usedItems.length);\n      arr = arr.concat(value['materialUsed']);\n      delete value['materialUsed'];\n    }\n\n    value['usedItemGroups'] = arr;\n    value['processItems'] = [];\n\n    if (value['processItemsNormal']) {\n      value['processItemsNormal'] = value['processItemsNormal'].filter(amou => amou.storageForms);\n      value['processItems'] = value['processItems'].concat(value['processItemsNormal']);\n      delete value['processItemsNormal'];\n    }\n\n    if (value['processItemsTable']) {\n      value['processItemsTable'] = value['processItemsTable'].filter(amou => amou.storage.amounts);\n      value['processItemsTable'].forEach(eleme => {\n        eleme['storage']['amounts'] = eleme['storage']['amounts'].filter(amou => amou.amount);\n      });\n      value['processItemsTable'] = value['processItemsTable'].filter(amou => amou.storage.amounts.length);\n      value['processItems'] = value['processItems'].concat(value['processItemsTable']);\n      delete value['processItemsTable'];\n    }\n\n    if (value['wasteItems']) {\n      value['wasteItems'].forEach(elemen => {\n        elemen['groupName'] = 'waste';\n      });\n      value['processItems'] = value['processItems'].concat(value['wasteItems']);\n      delete value['wasteItems'];\n    }\n\n    this.submitExIm.emit(value);\n  }\n\n  ngOnInit() {\n    var _a, _b, _c;\n\n    var arrNormal = [];\n    var arrTable = [];\n    var removeIds = [];\n    var cashewGrades = [];\n\n    if (this.beginData) {\n      if (this.beginData['weightedPos']) {\n        this.isOnePo = false;\n      }\n\n      var arrMaterial = [];\n      (_a = this.beginData['usedItemGroups']) === null || _a === void 0 ? void 0 : _a.forEach(element => {\n        if (element['groupName'].startsWith('table')) {\n          cashewGrades.push(element['cashewGrade']);\n          element['usedItem']['amounts'].forEach(ele => {\n            ele['take'] = true;\n          });\n          arrTable.push(element);\n        } else if (element['groupName'].startsWith('normal')) {\n          element['usedItems'].forEach(el => {\n            cashewGrades.push(el['cashewGrade']);\n            el['storage']['numberAvailableUnits'] = el['numberAvailableUnits'];\n            removeIds.push(el['storage']['id']);\n          });\n          arrNormal.push(element);\n        } else if (element['groupName'].startsWith('meterial')) {\n          element['usedItems'].forEach(el => {\n            el['storage']['numberAvailableUnits'] = el['numberAvailableUnits'];\n          });\n          arrMaterial.push(element);\n        }\n      });\n      delete this.beginData['usedItemGroups'];\n      var processNormal = [];\n      var processTable = [];\n      var wasteNormal = [];\n      (_b = this.beginData['processItems']) === null || _b === void 0 ? void 0 : _b.forEach(element => {\n        if (element['groupName'] === 'waste') {\n          wasteNormal.push(element);\n        } else if (element['storage']) {\n          processTable.push(element);\n        } else if (element['storageForms']) {\n          processNormal.push(element);\n        }\n      });\n      delete this.beginData['processItems'];\n      this.dataSource = this.beginData;\n\n      if (arrMaterial.length) {\n        this.dataSource['materialUsed'] = arrMaterial;\n      }\n\n      if (processTable.length) {\n        this.dataSource['processItemsTable'] = processTable;\n      }\n\n      if (processNormal.length) {\n        this.dataSource['processItemsNormal'] = processNormal;\n      } // else {\n      //     this.dataSource['processItemsNormal'] = [{item: this.dataSource['processItemsTable'][0]['item']}];\n      // }\n      // if(!processTable.length) {\n      //     this.dataSource['processItemsTable'] = [{item: this.dataSource['processItemsNormal'][0]['item']}];\n      // }\n\n\n      if (wasteNormal.length) {\n        this.dataSource['wasteItems'] = wasteNormal;\n      }\n    } else {\n      if (this.posArray) {\n        this.dataSource = {\n          weightedPos: this.posArray\n        };\n        this.isOnePo = false;\n      } else {\n        this.dataSource = {\n          poCode: this.newUsed[0]['poCode']\n        };\n      }\n    }\n\n    var arrUsedItems = [];\n    (_c = this.newUsed) === null || _c === void 0 ? void 0 : _c.forEach(element => {\n      cashewGrades.push(element['cashewGrade']);\n\n      if (element['storage']) {\n        element['storage']['item'] = element['item'];\n        element['storage']['measureUnit'] = element['measureUnit'];\n        element['storage']['itemProcessDate'] = element['itemProcessDate'];\n        element['storage']['itemPoCodes'] = element['poCodes'];\n        element['storage']['itemSuppliers'] = element['suppliers'];\n        element['storage']['amounts'].forEach(ele => {\n          ele['amount'] = ele['numberAvailableUnits'];\n        });\n        arrTable.push({\n          usedItem: element['storage']\n        });\n      } else if (element['storageForms']) {\n        element['storageForms'].forEach(ele => {\n          if (!removeIds.includes(ele['id'])) {\n            arrUsedItems.push({\n              itemPoCodes: element['poCodes'],\n              itemSuppliers: element['suppliers'],\n              item: element['item'],\n              itemProcessDate: element['itemProcessDate'],\n              measureUnit: element['measureUnit'],\n              storage: ele\n            });\n            delete ele['numberUsedUnits'];\n          }\n        });\n      }\n    });\n\n    if (arrUsedItems.length) {\n      arrNormal.push({\n        usedItems: arrUsedItems\n      });\n    }\n\n    if (arrTable.length) {\n      this.dataSource['usedItemsTable'] = arrTable;\n    }\n\n    if (arrNormal.length) {\n      this.dataSource['usedItemsNormal'] = arrNormal;\n    }\n\n    this.preper(this.mainLabel === 'Clean' ? false : true, arrTable.length > 0, arrNormal.length > 0, cashewGrades);\n    this.isDataAvailable = true;\n  }\n\n  preper(isNotClean, hasItemsTable, hasItemsNormal, cashewGrades) {\n    this.regConfig = [...(this.isOnePo ? [{\n      type: 'selectgroup',\n      inputType: 'supplierName',\n      disable: true,\n      collections: [{\n        type: 'select',\n        label: \"Supllier\"\n      }, {\n        type: 'select',\n        label: \"#PO\",\n        name: 'poCode',\n        collections: 'somewhere'\n      }]\n    }] : [{\n      type: 'bigexpand',\n      name: 'weightedPos',\n      options: 'aloneNoAddNoFrameInline',\n      collections: [{\n        type: 'selectgroup',\n        inputType: 'supplierName',\n        disable: true,\n        collections: [{\n          type: 'select',\n          label: \"Supplier\"\n        }, {\n          type: 'select',\n          label: \"#PO\",\n          name: 'poCode',\n          collections: 'somewhere'\n        }]\n      }, ...(this.beginData ? [{\n        type: 'input',\n        label: \"Weight\",\n        name: 'weight',\n        disable: true\n      }] : []), {\n        type: 'divider',\n        inputType: 'divide'\n      }]\n    }]), {\n      type: 'date',\n      label: \"Date\",\n      value: 'timeNow',\n      name: 'recordedTime',\n      options: 'withTime',\n      validations: [{\n        name: 'required',\n        validator: Validators.required,\n        message: \"Date Required\"\n      }]\n    }, // {\n    //     type: 'date',\n    //     label: 'Time duration',\n    //     name: 'duration',\n    //     options: 'duration',\n    // },\n    {\n      type: 'input',\n      label: \"Start time\",\n      name: 'startTime',\n      // inputType: 'datetime-local',\n      inputType: 'time'\n    }, {\n      type: 'input',\n      label: \"End time\",\n      name: 'endTime',\n      inputType: 'time'\n    }, {\n      type: 'input',\n      label: \"Number of workers\",\n      name: 'numOfWorkers',\n      inputType: 'number'\n    }, {\n      type: 'select',\n      label: \"Production line\",\n      name: 'productionLine',\n      options: this.genral.getProductionLine(this.mainLabel)\n    }, ...(hasItemsNormal ? [{\n      type: 'bigexpand',\n      name: 'usedItemsNormal',\n      label: this.mainLabel + 'ing amounts',\n      options: 'aloneNoAdd',\n      collections: [{\n        type: 'tableWithInput',\n        // label: 'Transfer from',\n        name: 'usedItems',\n        options: 'numberUsedUnits',\n        collections: [...(this.isOnePo ? [] : [{\n          type: 'input',\n          label: \"#PO\",\n          name: 'itemPoCodes',\n          disable: true\n        }, {\n          type: 'input',\n          label: \"Supplier\",\n          name: 'itemSuppliers',\n          disable: true\n        }]), {\n          type: 'select',\n          label: \"Item\",\n          name: 'item',\n          disable: true\n        }, {\n          type: 'dateTime',\n          label: \"Process date\",\n          name: 'itemProcessDate',\n          disable: true\n        }, {\n          type: 'input',\n          label: \"Weight unit\",\n          name: 'measureUnit',\n          disable: true\n        }, {\n          type: 'bignotexpand',\n          name: 'storage',\n          collections: [{\n            type: 'input',\n            label: \"Number of units\",\n            name: 'numberUnits',\n            disable: true\n          }, {\n            type: 'input',\n            name: 'unitAmount',\n            label: \"Unit weight\",\n            disable: true //     collections: [\n            //         {\n            //             type: 'input',\n            //             label: 'Unit weight',\n            //             name: 'amount',\n            //         },\n            //         {\n            //             type: 'select',\n            //             label: 'Weight unit',\n            //             name: 'measureUnit',\n            //         },\n            //     ]\n\n          }, {\n            type: 'select',\n            label: \"Warehouse location\",\n            name: 'warehouseLocation',\n            disable: true\n          }, {\n            type: 'input',\n            label: \"Number available units\",\n            name: 'numberAvailableUnits',\n            disable: true\n          }]\n        }]\n      }]\n    }] : []), ...(hasItemsTable ? [{\n      type: 'bigexpand',\n      name: 'usedItemsTable',\n      label: this.mainLabel + 'ing amounts',\n      options: 'aloneNoAdd',\n      collections: [{\n        type: 'bignotexpand',\n        name: 'usedItem',\n        // label: 'Transfer from',\n        options: 'aloneNoAdd',\n        collections: [...(this.isOnePo ? [] : [{\n          type: 'input',\n          label: \"#PO\",\n          name: 'itemPoCodes',\n          disable: true\n        }, {\n          type: 'input',\n          label: \"Supplier\",\n          name: 'itemSuppliers',\n          disable: true\n        }]), {\n          type: 'inputReadonlySelect',\n          label: \"Item descrption\",\n          name: 'item',\n          disable: true\n        }, {\n          type: 'date',\n          label: \"Process date\",\n          name: 'itemProcessDate',\n          disable: true\n        }, {\n          type: 'inputReadonly',\n          label: \"Weight unit\",\n          name: 'measureUnit',\n          disable: true\n        }, {\n          type: 'inputReadonlySelect',\n          label: \"Warehouse location\",\n          name: 'warehouseLocation',\n          disable: true\n        }, // {\n        //     type: 'inputReadonly',\n        //     label: 'Empty container weight',\n        //     name: 'containerWeight',\n        //     disable: true,\n        // },\n        {\n          type: 'arrayordinal',\n          label: \"Unit weight\",\n          name: 'amounts',\n          inputType: 'choose',\n          options: 3,\n          collections: 30\n        }]\n      }]\n    }] : []), {\n      type: 'bigexpand',\n      name: 'processItemsNormal',\n      label: this.mainLabel + 'd amounts',\n      options: 'alone',\n      collections: [{\n        type: 'selectItem',\n        label: \"Item descrption\",\n        name: 'item',\n        // for packing and QC pack\n        collections: this.mainLabel.endsWith('ack') ? false : true,\n        options: this.genral.getItemsCashewGrades(this.mainLabel, this.mainLabel.endsWith('ack') ? [] : cashewGrades)\n      }, {\n        type: 'selectMU',\n        label: \"Weight unit\",\n        name: 'measureUnit'\n      }, {\n        type: 'bigexpand',\n        label: \"Amounts\",\n        name: 'storageForms',\n        options: 'Inline',\n        collections: [{\n          type: 'input',\n          label: \"Number of units\",\n          name: 'numberUnits',\n          inputType: 'numeric',\n          options: 3\n        }, // {\n        //     type: 'inputselect',\n        //     name: 'unitAmount',\n        //     collections: [\n        //         {\n        //             type: 'input',\n        //             label: 'Unit weight',\n        //             name: 'amount',\n        //             inputType: 'numeric',\n        //             options: 3,\n        //         },\n        //         {\n        //             type: 'select',\n        //             label: 'Weight unit',\n        //             name: 'measureUnit',\n        //             options: ['KG', 'LBS', 'OZ', 'GRAM'],\n        //         },\n        //     ]\n        // },\n        {\n          type: 'select',\n          label: \"Warehouse location\",\n          name: 'warehouseLocation',\n          collections: 'somewhere',\n          options: this.genral.getWearhouses()\n        }, // {\n        //     type: 'input',\n        //     label: 'Empty container weight',\n        //     name: 'containerWeight',\n        //     inputType: 'numeric',\n        //     options: 3,\n        // },\n        {\n          type: 'divider',\n          inputType: 'divide'\n        }] // validations: [\n        //     {\n        //         name: 'unitAmount',\n        //         validator: [\n        //             {\n        //                 name: 'amount',\n        //             },\n        //             {\n        //                 name: 'measureUnit',\n        //             },\n        //         ],\n        //         message: 'a received storage must have weight, measure unit and number of units',\n        //     },\n        //     {\n        //         name: 'numberUnits',\n        //     },\n        // ]\n\n      }, {\n        type: 'divider',\n        inputType: 'divide'\n      }]\n    }, {\n      type: 'bigexpand',\n      name: 'processItemsTable',\n      label: this.mainLabel + 'd amounts',\n      // options: 'NoAdd',\n      collections: [{\n        type: 'selectItem',\n        label: \"Item descrption\",\n        name: 'item',\n        collections: this.mainLabel.endsWith('ack') ? false : true,\n        options: this.genral.getItemsCashewGrades(this.mainLabel, this.mainLabel.endsWith('ack') ? [] : cashewGrades)\n      }, {\n        type: 'selectNormal',\n        label: \"Weight unit\",\n        name: 'measureUnit',\n        value: 'KG',\n        options: this.genral.getMeasureUnit()\n      }, // {\n      //     type: 'selectMU',\n      //     label: $localize`Weight unit`,\n      //     name: 'measureUnit',\n      // },\n      {\n        type: 'bignotexpand',\n        name: 'storage',\n        options: 'Inline',\n        collections: [// {\n        //     type: 'selectNormal',\n        //     label: 'Weight unit',\n        //     name: 'measureUnit',\n        //     options: ['KG', 'LBS', 'OZ', 'GRAM'],\n        // },\n        {\n          type: 'select',\n          label: \"Warehouse location\",\n          name: 'warehouseLocation',\n          collections: 'somewhere',\n          options: this.genral.getWearhouses()\n        }, // {\n        //     type: 'input',\n        //     label: 'Empty container weight',\n        //     name: 'containerWeight',\n        //     inputType: 'numeric',\n        //     options: 3,\n        // },\n        {\n          type: 'arrayordinal',\n          label: \"Unit weight\",\n          name: 'amounts',\n          options: 3,\n          collections: 30\n        }] // validations: [\n        //     {\n        //         name: 'measureUnit',\n        //         message: 'a received storage must have weight, measure unit and number of units',\n        //     },\n        // ]\n\n      }]\n    }, ...(this.mainLabel === 'QC pack' ? [] : [{\n      type: 'bigexpand',\n      name: 'wasteItems',\n      label: \"Waste amounts\",\n      // options: 'alone',\n      collections: [{\n        type: 'select',\n        label: \"Item descrption\",\n        name: 'item',\n        options: this.genral.getItemsWasteCashew()\n      }, {\n        type: 'selectMU',\n        label: \"Weight unit\",\n        name: 'measureUnit'\n      }, {\n        type: 'bigexpand',\n        label: \"Amounts\",\n        name: 'storageForms',\n        options: 'aloneNoAddNoFrameInline',\n        collections: [{\n          type: 'input',\n          label: \"Number of units\",\n          name: 'numberUnits',\n          // value: 1,\n          inputType: 'numeric',\n          options: 3\n        }, // {\n        //     type: 'inputselect',\n        //     name: 'unitAmount',\n        //     options: ['item'],\n        //     inputType: 'second',\n        //     collections: [\n        //         {\n        //             type: 'input',\n        //             label: 'Unit weight',\n        //             name: 'amount',\n        //             inputType: 'numeric',\n        //             options: 3,\n        //         },\n        //         {\n        //             type: 'select',\n        //             label: 'Weight unit',\n        //             name: 'measureUnit',\n        //             options: ['LBS', 'KG', 'OZ', 'GRAM'],\n        //         },\n        //     ]\n        // },\n        {\n          type: 'select',\n          label: \"Warehouse location\",\n          name: 'warehouseLocation',\n          collections: 'somewhere',\n          options: this.genral.getWearhouses()\n        }]\n      }, {\n        type: 'divider',\n        inputType: 'divide'\n      }]\n    }]), ...(isNotClean ? [{\n      type: 'bigexpand',\n      name: 'materialUsed',\n      label: \"Material used\",\n      options: 'aloneNoAdd',\n      collections: [{\n        type: 'materialUsage',\n        // label: 'Transfer from',\n        name: 'usedItems',\n        inputType: true,\n        collections: [{\n          type: 'selectgroup',\n          inputType: 'supplierName',\n          // options: this.localService.getAllPosRoastPacked(),\n          disable: true,\n          collections: [{\n            type: 'select',\n            label: \"Supplier\"\n          }, {\n            type: 'select',\n            label: \"#PO\",\n            name: 'itemPo',\n            collections: 'somewhere'\n          }]\n        }, {\n          type: 'select',\n          label: \"Item\",\n          name: 'item',\n          disable: true\n        }, {\n          type: 'date',\n          label: \"Process date\",\n          name: 'itemProcessDate',\n          disable: true\n        }, {\n          type: 'input',\n          label: \"Weight unit\",\n          name: 'measureUnit',\n          disable: true\n        }, {\n          type: 'bignotexpand',\n          name: 'storage',\n          collections: [{\n            type: 'input',\n            label: \"Number of units\",\n            name: 'numberUnits',\n            disable: true\n          }, {\n            type: 'input',\n            name: 'unitAmount',\n            label: \"Unit weight\",\n            disable: true //     collections: [\n            //         {\n            //             type: 'input',\n            //             label: 'Unit weight',\n            //             name: 'amount',\n            //         },\n            //         {\n            //             type: 'select',\n            //             label: 'Weight unit',\n            //             name: 'measureUnit',\n            //         },\n            //     ]\n\n          }, {\n            type: 'select',\n            label: \"Warehouse location\",\n            name: 'warehouseLocation',\n            disable: true\n          }, {\n            type: 'input',\n            label: \"Number available units\",\n            name: 'numberAvailableUnits',\n            disable: true\n          }]\n        }]\n      }]\n    }] : []), // {\n    //     type: 'bigexpand',\n    //     name: 'materialUsed',\n    //     label: 'Material used',\n    //     // options: 'alone',\n    //     collections: [\n    //         {\n    //             type: 'select',\n    //             label: 'Item descrption',\n    //             name: 'item',\n    //             options: this.genral.getItemsGeneral(),\n    //         },\n    //         {\n    //             type: 'selectNormal',\n    //             label: 'Weight unit',\n    //             name: 'measureUnit',\n    //             inputType: 'item',\n    //             options: this.genral.getMeasureUnit(),\n    //         },\n    //         {\n    //             type: 'input',\n    //             label: 'Number of units',\n    //             name: 'numberUnits',\n    //             // value: 1,\n    //             inputType: 'numeric',\n    //             options: 3,\n    //         },\n    //         // {\n    //         //     type: 'inputselect',\n    //         //     name: 'unitAmount',\n    //         //     options: 'item',\n    //         //     inputType: 'second',\n    //         //     collections: [\n    //         //         {\n    //         //             type: 'input',\n    //         //             label: 'Unit weight',\n    //         //             name: 'amount',\n    //         //             inputType: 'numeric',\n    //         //             options: 3,\n    //         //         },\n    //         //         {\n    //         //             type: 'select',\n    //         //             label: 'Weight unit',\n    //         //             value: 'GRAM',\n    //         //             name: 'measureUnit',\n    //         //             options: ['KG', 'LBS', 'OZ', 'GRAM'],\n    //         //         },\n    //         //     ]\n    //         // },\n    //         {\n    //             type: 'divider',\n    //             inputType: 'divide'\n    //         },\n    //     ]\n    // },\n    {\n      type: 'button',\n      label: \"Submit\",\n      name: 'submit'\n    }];\n  }\n\n}\n\nExportImportComponent.ɵfac = function ExportImportComponent_Factory(t) {\n  return new (t || ExportImportComponent)(i0.ɵɵdirectiveInject(i1.Genral), i0.ɵɵdirectiveInject(i2.MatDialog));\n};\n\nExportImportComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ExportImportComponent,\n  selectors: [[\"export-import\"]],\n  inputs: {\n    mainLabel: \"mainLabel\",\n    beginData: \"beginData\",\n    newUsed: \"newUsed\",\n    posArray: \"posArray\"\n  },\n  outputs: {\n    submitExIm: \"submitExIm\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [3, \"fields\", \"putData\", \"mainLabel\", \"submitForm\"]],\n  template: function ExportImportComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ExportImportComponent_div_0_Template, 2, 3, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isDataAvailable);\n    }\n  },\n  directives: [i3.NgIf, i4.DynamicFormComponent],\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:/Users/isral/OneDrive/Documents/AVC-FRONT/src/app/production/export-import.component.ts"],"names":["EventEmitter","Validators","i0","i1","i2","i3","i4","ExportImportComponent_div_0_Template","rf","ctx","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","ExportImportComponent_div_0_Template_dynamic_form_submitForm_1_listener","$event","ɵɵrestoreView","ctx_r1","ɵɵnextContext","onSubmit","ɵɵelementEnd","ctx_r0","ɵɵadvance","ɵɵproperty","regConfig","dataSource","mainLabel","ExportImportComponent","constructor","genral","dialog","isDataAvailable","submitExIm","isOnePo","value","arr","forEach","element","filter","amou","numberUsedUnits","usedItems","length","concat","take","ele","usedItem","amounts","storageForms","storage","eleme","amount","elemen","emit","ngOnInit","_a","_b","_c","arrNormal","arrTable","removeIds","cashewGrades","beginData","arrMaterial","startsWith","push","el","processNormal","processTable","wasteNormal","posArray","weightedPos","poCode","newUsed","arrUsedItems","includes","itemPoCodes","itemSuppliers","item","itemProcessDate","measureUnit","preper","isNotClean","hasItemsTable","hasItemsNormal","type","inputType","disable","collections","label","name","options","validations","validator","required","message","getProductionLine","endsWith","getItemsCashewGrades","getWearhouses","getMeasureUnit","getItemsWasteCashew","ɵfac","ExportImportComponent_Factory","t","ɵɵdirectiveInject","Genral","MatDialog","ɵcmp","ɵɵdefineComponent","selectors","inputs","outputs","decls","vars","consts","template","ExportImportComponent_Template","ɵɵtemplate","directives","NgIf","DynamicFormComponent","encapsulation"],"mappings":"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","sourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { Validators } from '@angular/forms';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../genral.service\";\r\nimport * as i2 from \"@angular/material/dialog\";\r\nimport * as i3 from \"@angular/common\";\r\nimport * as i4 from \"../components/dynamic-form/dynamic-form.component\";\r\nfunction ExportImportComponent_div_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r2 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"div\");\r\n    i0.ɵɵelementStart(1, \"dynamic-form\", 1);\r\n    i0.ɵɵlistener(\"submitForm\", function ExportImportComponent_div_0_Template_dynamic_form_submitForm_1_listener($event) { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return ctx_r1.onSubmit($event); });\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"fields\", ctx_r0.regConfig)(\"putData\", ctx_r0.dataSource)(\"mainLabel\", ctx_r0.mainLabel + \"ing cashew process\");\r\n} }\r\nexport class ExportImportComponent {\r\n    constructor(genral, dialog) {\r\n        this.genral = genral;\r\n        this.dialog = dialog;\r\n        this.isDataAvailable = false;\r\n        this.submitExIm = new EventEmitter();\r\n        this.isOnePo = true;\r\n    }\r\n    onSubmit(value) {\r\n        //     console.log(value);\r\n        // }\r\n        // onSubmit1(value: any) {\r\n        var arr = [];\r\n        if (value['usedItemsNormal']) {\r\n            value['usedItemsNormal'].forEach(element => {\r\n                element['usedItems'] = element['usedItems'].filter(amou => amou.numberUsedUnits);\r\n                element['groupName'] = this.isOnePo ? 'normal' : 'normalPos';\r\n            });\r\n            value['usedItemsNormal'] = value['usedItemsNormal'].filter(amou => amou.usedItems.length);\r\n            arr = arr.concat(value['usedItemsNormal']);\r\n            delete value['usedItemsNormal'];\r\n        }\r\n        if (value['usedItemsTable']) {\r\n            value['usedItemsTable'].forEach(element => {\r\n                element['usedItem']['amounts'] = element['usedItem']['amounts'].filter(amou => amou.take);\r\n                element['usedItem']['amounts'].forEach(ele => {\r\n                    if (!ele['storageId']) {\r\n                        ele['storageId'] = ele['id'];\r\n                        delete ele['id'];\r\n                        ele['storageVersion'] = ele['version'];\r\n                        delete ele['version'];\r\n                    }\r\n                });\r\n                element['groupName'] = this.isOnePo ? 'table' : 'tablePos';\r\n            });\r\n            value['usedItemsTable'] = value['usedItemsTable'].filter(amou => amou.usedItem.amounts.length);\r\n            arr = arr.concat(value['usedItemsTable']);\r\n            delete value['usedItemsTable'];\r\n        }\r\n        if (value['materialUsed']) {\r\n            value['materialUsed'].forEach(element => {\r\n                element['usedItems'] = element['usedItems'].filter(amou => amou.numberUsedUnits);\r\n                element['groupName'] = 'meterialPos';\r\n            });\r\n            value['materialUsed'] = value['materialUsed'].filter(amou => amou.usedItems.length);\r\n            arr = arr.concat(value['materialUsed']);\r\n            delete value['materialUsed'];\r\n        }\r\n        value['usedItemGroups'] = arr;\r\n        value['processItems'] = [];\r\n        if (value['processItemsNormal']) {\r\n            value['processItemsNormal'] = value['processItemsNormal'].filter(amou => amou.storageForms);\r\n            value['processItems'] = value['processItems'].concat(value['processItemsNormal']);\r\n            delete value['processItemsNormal'];\r\n        }\r\n        if (value['processItemsTable']) {\r\n            value['processItemsTable'] = value['processItemsTable'].filter(amou => amou.storage.amounts);\r\n            value['processItemsTable'].forEach(eleme => {\r\n                eleme['storage']['amounts'] = eleme['storage']['amounts'].filter(amou => amou.amount);\r\n            });\r\n            value['processItemsTable'] = value['processItemsTable'].filter(amou => amou.storage.amounts.length);\r\n            value['processItems'] = value['processItems'].concat(value['processItemsTable']);\r\n            delete value['processItemsTable'];\r\n        }\r\n        if (value['wasteItems']) {\r\n            value['wasteItems'].forEach(elemen => {\r\n                elemen['groupName'] = 'waste';\r\n            });\r\n            value['processItems'] = value['processItems'].concat(value['wasteItems']);\r\n            delete value['wasteItems'];\r\n        }\r\n        this.submitExIm.emit(value);\r\n    }\r\n    ngOnInit() {\r\n        var _a, _b, _c;\r\n        var arrNormal = [];\r\n        var arrTable = [];\r\n        var removeIds = [];\r\n        var cashewGrades = [];\r\n        if (this.beginData) {\r\n            if (this.beginData['weightedPos']) {\r\n                this.isOnePo = false;\r\n            }\r\n            var arrMaterial = [];\r\n            (_a = this.beginData['usedItemGroups']) === null || _a === void 0 ? void 0 : _a.forEach(element => {\r\n                if (element['groupName'].startsWith('table')) {\r\n                    cashewGrades.push(element['cashewGrade']);\r\n                    element['usedItem']['amounts'].forEach(ele => {\r\n                        ele['take'] = true;\r\n                    });\r\n                    arrTable.push(element);\r\n                }\r\n                else if (element['groupName'].startsWith('normal')) {\r\n                    element['usedItems'].forEach(el => {\r\n                        cashewGrades.push(el['cashewGrade']);\r\n                        el['storage']['numberAvailableUnits'] = el['numberAvailableUnits'];\r\n                        removeIds.push(el['storage']['id']);\r\n                    });\r\n                    arrNormal.push(element);\r\n                }\r\n                else if (element['groupName'].startsWith('meterial')) {\r\n                    element['usedItems'].forEach(el => {\r\n                        el['storage']['numberAvailableUnits'] = el['numberAvailableUnits'];\r\n                    });\r\n                    arrMaterial.push(element);\r\n                }\r\n            });\r\n            delete this.beginData['usedItemGroups'];\r\n            var processNormal = [];\r\n            var processTable = [];\r\n            var wasteNormal = [];\r\n            (_b = this.beginData['processItems']) === null || _b === void 0 ? void 0 : _b.forEach(element => {\r\n                if (element['groupName'] === 'waste') {\r\n                    wasteNormal.push(element);\r\n                }\r\n                else if (element['storage']) {\r\n                    processTable.push(element);\r\n                }\r\n                else if (element['storageForms']) {\r\n                    processNormal.push(element);\r\n                }\r\n            });\r\n            delete this.beginData['processItems'];\r\n            this.dataSource = this.beginData;\r\n            if (arrMaterial.length) {\r\n                this.dataSource['materialUsed'] = arrMaterial;\r\n            }\r\n            if (processTable.length) {\r\n                this.dataSource['processItemsTable'] = processTable;\r\n            }\r\n            if (processNormal.length) {\r\n                this.dataSource['processItemsNormal'] = processNormal;\r\n            }\r\n            // else {\r\n            //     this.dataSource['processItemsNormal'] = [{item: this.dataSource['processItemsTable'][0]['item']}];\r\n            // }\r\n            // if(!processTable.length) {\r\n            //     this.dataSource['processItemsTable'] = [{item: this.dataSource['processItemsNormal'][0]['item']}];\r\n            // }\r\n            if (wasteNormal.length) {\r\n                this.dataSource['wasteItems'] = wasteNormal;\r\n            }\r\n        }\r\n        else {\r\n            if (this.posArray) {\r\n                this.dataSource = { weightedPos: this.posArray };\r\n                this.isOnePo = false;\r\n            }\r\n            else {\r\n                this.dataSource = { poCode: this.newUsed[0]['poCode'] };\r\n            }\r\n        }\r\n        var arrUsedItems = [];\r\n        (_c = this.newUsed) === null || _c === void 0 ? void 0 : _c.forEach(element => {\r\n            cashewGrades.push(element['cashewGrade']);\r\n            if (element['storage']) {\r\n                element['storage']['item'] = element['item'];\r\n                element['storage']['measureUnit'] = element['measureUnit'];\r\n                element['storage']['itemProcessDate'] = element['itemProcessDate'];\r\n                element['storage']['itemPoCodes'] = element['poCodes'];\r\n                element['storage']['itemSuppliers'] = element['suppliers'];\r\n                element['storage']['amounts'].forEach(ele => {\r\n                    ele['amount'] = ele['numberAvailableUnits'];\r\n                });\r\n                arrTable.push({ usedItem: element['storage'] });\r\n            }\r\n            else if (element['storageForms']) {\r\n                element['storageForms'].forEach(ele => {\r\n                    if (!removeIds.includes(ele['id'])) {\r\n                        arrUsedItems.push({ itemPoCodes: element['poCodes'], itemSuppliers: element['suppliers'], item: element['item'], itemProcessDate: element['itemProcessDate'], measureUnit: element['measureUnit'], storage: ele });\r\n                        delete ele['numberUsedUnits'];\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        if (arrUsedItems.length) {\r\n            arrNormal.push({ usedItems: arrUsedItems });\r\n        }\r\n        if (arrTable.length) {\r\n            this.dataSource['usedItemsTable'] = arrTable;\r\n        }\r\n        if (arrNormal.length) {\r\n            this.dataSource['usedItemsNormal'] = arrNormal;\r\n        }\r\n        this.preper(this.mainLabel === 'Clean' ? false : true, arrTable.length > 0, arrNormal.length > 0, cashewGrades);\r\n        this.isDataAvailable = true;\r\n    }\r\n    preper(isNotClean, hasItemsTable, hasItemsNormal, cashewGrades) {\r\n        this.regConfig = [\r\n            ...this.isOnePo ? [\r\n                {\r\n                    type: 'selectgroup',\r\n                    inputType: 'supplierName',\r\n                    disable: true,\r\n                    collections: [\r\n                        {\r\n                            type: 'select',\r\n                            label: $localize `Supllier`,\r\n                        },\r\n                        {\r\n                            type: 'select',\r\n                            label: $localize `#PO`,\r\n                            name: 'poCode',\r\n                            collections: 'somewhere',\r\n                        },\r\n                    ]\r\n                },\r\n            ] : [\r\n                {\r\n                    type: 'bigexpand',\r\n                    name: 'weightedPos',\r\n                    options: 'aloneNoAddNoFrameInline',\r\n                    collections: [\r\n                        {\r\n                            type: 'selectgroup',\r\n                            inputType: 'supplierName',\r\n                            disable: true,\r\n                            collections: [\r\n                                {\r\n                                    type: 'select',\r\n                                    label: $localize `Supplier`,\r\n                                },\r\n                                {\r\n                                    type: 'select',\r\n                                    label: $localize `#PO`,\r\n                                    name: 'poCode',\r\n                                    collections: 'somewhere',\r\n                                },\r\n                            ]\r\n                        },\r\n                        ...this.beginData ? [\r\n                            {\r\n                                type: 'input',\r\n                                label: $localize `Weight`,\r\n                                name: 'weight',\r\n                                disable: true,\r\n                            }\r\n                        ] : [],\r\n                        {\r\n                            type: 'divider',\r\n                            inputType: 'divide'\r\n                        },\r\n                    ]\r\n                }\r\n            ],\r\n            {\r\n                type: 'date',\r\n                label: $localize `Date`,\r\n                value: 'timeNow',\r\n                name: 'recordedTime',\r\n                options: 'withTime',\r\n                validations: [\r\n                    {\r\n                        name: 'required',\r\n                        validator: Validators.required,\r\n                        message: $localize `Date Required`,\r\n                    }\r\n                ]\r\n            },\r\n            // {\r\n            //     type: 'date',\r\n            //     label: 'Time duration',\r\n            //     name: 'duration',\r\n            //     options: 'duration',\r\n            // },\r\n            {\r\n                type: 'input',\r\n                label: $localize `Start time`,\r\n                name: 'startTime',\r\n                // inputType: 'datetime-local',\r\n                inputType: 'time',\r\n            },\r\n            {\r\n                type: 'input',\r\n                label: $localize `End time`,\r\n                name: 'endTime',\r\n                inputType: 'time',\r\n            },\r\n            {\r\n                type: 'input',\r\n                label: $localize `Number of workers`,\r\n                name: 'numOfWorkers',\r\n                inputType: 'number'\r\n            },\r\n            {\r\n                type: 'select',\r\n                label: $localize `Production line`,\r\n                name: 'productionLine',\r\n                options: this.genral.getProductionLine(this.mainLabel),\r\n            },\r\n            ...hasItemsNormal ? [\r\n                {\r\n                    type: 'bigexpand',\r\n                    name: 'usedItemsNormal',\r\n                    label: this.mainLabel + 'ing amounts',\r\n                    options: 'aloneNoAdd',\r\n                    collections: [\r\n                        {\r\n                            type: 'tableWithInput',\r\n                            // label: 'Transfer from',\r\n                            name: 'usedItems',\r\n                            options: 'numberUsedUnits',\r\n                            collections: [\r\n                                ...this.isOnePo ? [] : [\r\n                                    {\r\n                                        type: 'input',\r\n                                        label: $localize `#PO`,\r\n                                        name: 'itemPoCodes',\r\n                                        disable: true,\r\n                                    },\r\n                                    {\r\n                                        type: 'input',\r\n                                        label: $localize `Supplier`,\r\n                                        name: 'itemSuppliers',\r\n                                        disable: true,\r\n                                    },\r\n                                ],\r\n                                {\r\n                                    type: 'select',\r\n                                    label: $localize `Item`,\r\n                                    name: 'item',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'dateTime',\r\n                                    label: $localize `Process date`,\r\n                                    name: 'itemProcessDate',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'input',\r\n                                    label: $localize `Weight unit`,\r\n                                    name: 'measureUnit',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'bignotexpand',\r\n                                    name: 'storage',\r\n                                    collections: [\r\n                                        {\r\n                                            type: 'input',\r\n                                            label: $localize `Number of units`,\r\n                                            name: 'numberUnits',\r\n                                            disable: true,\r\n                                        },\r\n                                        {\r\n                                            type: 'input',\r\n                                            name: 'unitAmount',\r\n                                            label: $localize `Unit weight`,\r\n                                            disable: true,\r\n                                            //     collections: [\r\n                                            //         {\r\n                                            //             type: 'input',\r\n                                            //             label: 'Unit weight',\r\n                                            //             name: 'amount',\r\n                                            //         },\r\n                                            //         {\r\n                                            //             type: 'select',\r\n                                            //             label: 'Weight unit',\r\n                                            //             name: 'measureUnit',\r\n                                            //         },\r\n                                            //     ]\r\n                                        },\r\n                                        {\r\n                                            type: 'select',\r\n                                            label: $localize `Warehouse location`,\r\n                                            name: 'warehouseLocation',\r\n                                            disable: true,\r\n                                        },\r\n                                        {\r\n                                            type: 'input',\r\n                                            label: $localize `Number available units`,\r\n                                            name: 'numberAvailableUnits',\r\n                                            disable: true,\r\n                                        },\r\n                                    ]\r\n                                },\r\n                            ],\r\n                        },\r\n                    ]\r\n                },\r\n            ] : [],\r\n            ...hasItemsTable ? [\r\n                {\r\n                    type: 'bigexpand',\r\n                    name: 'usedItemsTable',\r\n                    label: this.mainLabel + 'ing amounts',\r\n                    options: 'aloneNoAdd',\r\n                    collections: [\r\n                        {\r\n                            type: 'bignotexpand',\r\n                            name: 'usedItem',\r\n                            // label: 'Transfer from',\r\n                            options: 'aloneNoAdd',\r\n                            collections: [\r\n                                ...this.isOnePo ? [] : [\r\n                                    {\r\n                                        type: 'input',\r\n                                        label: $localize `#PO`,\r\n                                        name: 'itemPoCodes',\r\n                                        disable: true,\r\n                                    },\r\n                                    {\r\n                                        type: 'input',\r\n                                        label: $localize `Supplier`,\r\n                                        name: 'itemSuppliers',\r\n                                        disable: true,\r\n                                    },\r\n                                ],\r\n                                {\r\n                                    type: 'inputReadonlySelect',\r\n                                    label: $localize `Item descrption`,\r\n                                    name: 'item',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'date',\r\n                                    label: $localize `Process date`,\r\n                                    name: 'itemProcessDate',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'inputReadonly',\r\n                                    label: $localize `Weight unit`,\r\n                                    name: 'measureUnit',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'inputReadonlySelect',\r\n                                    label: $localize `Warehouse location`,\r\n                                    name: 'warehouseLocation',\r\n                                    disable: true,\r\n                                },\r\n                                // {\r\n                                //     type: 'inputReadonly',\r\n                                //     label: 'Empty container weight',\r\n                                //     name: 'containerWeight',\r\n                                //     disable: true,\r\n                                // },\r\n                                {\r\n                                    type: 'arrayordinal',\r\n                                    label: $localize `Unit weight`,\r\n                                    name: 'amounts',\r\n                                    inputType: 'choose',\r\n                                    options: 3,\r\n                                    collections: 30,\r\n                                },\r\n                            ]\r\n                        },\r\n                    ]\r\n                },\r\n            ] : [],\r\n            {\r\n                type: 'bigexpand',\r\n                name: 'processItemsNormal',\r\n                label: this.mainLabel + 'd amounts',\r\n                options: 'alone',\r\n                collections: [\r\n                    {\r\n                        type: 'selectItem',\r\n                        label: $localize `Item descrption`,\r\n                        name: 'item',\r\n                        // for packing and QC pack\r\n                        collections: this.mainLabel.endsWith('ack') ? false : true,\r\n                        options: this.genral.getItemsCashewGrades(this.mainLabel, this.mainLabel.endsWith('ack') ? [] : cashewGrades),\r\n                    },\r\n                    {\r\n                        type: 'selectMU',\r\n                        label: $localize `Weight unit`,\r\n                        name: 'measureUnit',\r\n                    },\r\n                    {\r\n                        type: 'bigexpand',\r\n                        label: $localize `Amounts`,\r\n                        name: 'storageForms',\r\n                        options: 'Inline',\r\n                        collections: [\r\n                            {\r\n                                type: 'input',\r\n                                label: $localize `Number of units`,\r\n                                name: 'numberUnits',\r\n                                inputType: 'numeric',\r\n                                options: 3,\r\n                            },\r\n                            // {\r\n                            //     type: 'inputselect',\r\n                            //     name: 'unitAmount',\r\n                            //     collections: [\r\n                            //         {\r\n                            //             type: 'input',\r\n                            //             label: 'Unit weight',\r\n                            //             name: 'amount',\r\n                            //             inputType: 'numeric',\r\n                            //             options: 3,\r\n                            //         },\r\n                            //         {\r\n                            //             type: 'select',\r\n                            //             label: 'Weight unit',\r\n                            //             name: 'measureUnit',\r\n                            //             options: ['KG', 'LBS', 'OZ', 'GRAM'],\r\n                            //         },\r\n                            //     ]\r\n                            // },\r\n                            {\r\n                                type: 'select',\r\n                                label: $localize `Warehouse location`,\r\n                                name: 'warehouseLocation',\r\n                                collections: 'somewhere',\r\n                                options: this.genral.getWearhouses(),\r\n                            },\r\n                            // {\r\n                            //     type: 'input',\r\n                            //     label: 'Empty container weight',\r\n                            //     name: 'containerWeight',\r\n                            //     inputType: 'numeric',\r\n                            //     options: 3,\r\n                            // },\r\n                            {\r\n                                type: 'divider',\r\n                                inputType: 'divide'\r\n                            },\r\n                        ],\r\n                        // validations: [\r\n                        //     {\r\n                        //         name: 'unitAmount',\r\n                        //         validator: [\r\n                        //             {\r\n                        //                 name: 'amount',\r\n                        //             },\r\n                        //             {\r\n                        //                 name: 'measureUnit',\r\n                        //             },\r\n                        //         ],\r\n                        //         message: 'a received storage must have weight, measure unit and number of units',\r\n                        //     },\r\n                        //     {\r\n                        //         name: 'numberUnits',\r\n                        //     },\r\n                        // ]\r\n                    },\r\n                    {\r\n                        type: 'divider',\r\n                        inputType: 'divide'\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                type: 'bigexpand',\r\n                name: 'processItemsTable',\r\n                label: this.mainLabel + 'd amounts',\r\n                // options: 'NoAdd',\r\n                collections: [\r\n                    {\r\n                        type: 'selectItem',\r\n                        label: $localize `Item descrption`,\r\n                        name: 'item',\r\n                        collections: this.mainLabel.endsWith('ack') ? false : true,\r\n                        options: this.genral.getItemsCashewGrades(this.mainLabel, this.mainLabel.endsWith('ack') ? [] : cashewGrades),\r\n                    },\r\n                    {\r\n                        type: 'selectNormal',\r\n                        label: $localize `Weight unit`,\r\n                        name: 'measureUnit',\r\n                        value: 'KG',\r\n                        options: this.genral.getMeasureUnit(),\r\n                    },\r\n                    // {\r\n                    //     type: 'selectMU',\r\n                    //     label: $localize`Weight unit`,\r\n                    //     name: 'measureUnit',\r\n                    // },\r\n                    {\r\n                        type: 'bignotexpand',\r\n                        name: 'storage',\r\n                        options: 'Inline',\r\n                        collections: [\r\n                            // {\r\n                            //     type: 'selectNormal',\r\n                            //     label: 'Weight unit',\r\n                            //     name: 'measureUnit',\r\n                            //     options: ['KG', 'LBS', 'OZ', 'GRAM'],\r\n                            // },\r\n                            {\r\n                                type: 'select',\r\n                                label: $localize `Warehouse location`,\r\n                                name: 'warehouseLocation',\r\n                                collections: 'somewhere',\r\n                                options: this.genral.getWearhouses(),\r\n                            },\r\n                            // {\r\n                            //     type: 'input',\r\n                            //     label: 'Empty container weight',\r\n                            //     name: 'containerWeight',\r\n                            //     inputType: 'numeric',\r\n                            //     options: 3,\r\n                            // },\r\n                            {\r\n                                type: 'arrayordinal',\r\n                                label: $localize `Unit weight`,\r\n                                name: 'amounts',\r\n                                options: 3,\r\n                                collections: 30,\r\n                            },\r\n                        ],\r\n                        // validations: [\r\n                        //     {\r\n                        //         name: 'measureUnit',\r\n                        //         message: 'a received storage must have weight, measure unit and number of units',\r\n                        //     },\r\n                        // ]\r\n                    },\r\n                ],\r\n            },\r\n            ...(this.mainLabel === 'QC pack') ? [] : [\r\n                {\r\n                    type: 'bigexpand',\r\n                    name: 'wasteItems',\r\n                    label: $localize `Waste amounts`,\r\n                    // options: 'alone',\r\n                    collections: [\r\n                        {\r\n                            type: 'select',\r\n                            label: $localize `Item descrption`,\r\n                            name: 'item',\r\n                            options: this.genral.getItemsWasteCashew(),\r\n                        },\r\n                        {\r\n                            type: 'selectMU',\r\n                            label: $localize `Weight unit`,\r\n                            name: 'measureUnit',\r\n                        },\r\n                        {\r\n                            type: 'bigexpand',\r\n                            label: $localize `Amounts`,\r\n                            name: 'storageForms',\r\n                            options: 'aloneNoAddNoFrameInline',\r\n                            collections: [\r\n                                {\r\n                                    type: 'input',\r\n                                    label: $localize `Number of units`,\r\n                                    name: 'numberUnits',\r\n                                    // value: 1,\r\n                                    inputType: 'numeric',\r\n                                    options: 3,\r\n                                },\r\n                                // {\r\n                                //     type: 'inputselect',\r\n                                //     name: 'unitAmount',\r\n                                //     options: ['item'],\r\n                                //     inputType: 'second',\r\n                                //     collections: [\r\n                                //         {\r\n                                //             type: 'input',\r\n                                //             label: 'Unit weight',\r\n                                //             name: 'amount',\r\n                                //             inputType: 'numeric',\r\n                                //             options: 3,\r\n                                //         },\r\n                                //         {\r\n                                //             type: 'select',\r\n                                //             label: 'Weight unit',\r\n                                //             name: 'measureUnit',\r\n                                //             options: ['LBS', 'KG', 'OZ', 'GRAM'],\r\n                                //         },\r\n                                //     ]\r\n                                // },\r\n                                {\r\n                                    type: 'select',\r\n                                    label: $localize `Warehouse location`,\r\n                                    name: 'warehouseLocation',\r\n                                    collections: 'somewhere',\r\n                                    options: this.genral.getWearhouses(),\r\n                                },\r\n                            ]\r\n                        },\r\n                        {\r\n                            type: 'divider',\r\n                            inputType: 'divide'\r\n                        },\r\n                    ]\r\n                },\r\n            ],\r\n            ...isNotClean ? [\r\n                {\r\n                    type: 'bigexpand',\r\n                    name: 'materialUsed',\r\n                    label: $localize `Material used`,\r\n                    options: 'aloneNoAdd',\r\n                    collections: [\r\n                        {\r\n                            type: 'materialUsage',\r\n                            // label: 'Transfer from',\r\n                            name: 'usedItems',\r\n                            inputType: true,\r\n                            collections: [\r\n                                {\r\n                                    type: 'selectgroup',\r\n                                    inputType: 'supplierName',\r\n                                    // options: this.localService.getAllPosRoastPacked(),\r\n                                    disable: true,\r\n                                    collections: [\r\n                                        {\r\n                                            type: 'select',\r\n                                            label: $localize `Supplier`,\r\n                                        },\r\n                                        {\r\n                                            type: 'select',\r\n                                            label: $localize `#PO`,\r\n                                            name: 'itemPo',\r\n                                            collections: 'somewhere',\r\n                                        },\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    type: 'select',\r\n                                    label: $localize `Item`,\r\n                                    name: 'item',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'date',\r\n                                    label: $localize `Process date`,\r\n                                    name: 'itemProcessDate',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'input',\r\n                                    label: $localize `Weight unit`,\r\n                                    name: 'measureUnit',\r\n                                    disable: true,\r\n                                },\r\n                                {\r\n                                    type: 'bignotexpand',\r\n                                    name: 'storage',\r\n                                    collections: [\r\n                                        {\r\n                                            type: 'input',\r\n                                            label: $localize `Number of units`,\r\n                                            name: 'numberUnits',\r\n                                            disable: true,\r\n                                        },\r\n                                        {\r\n                                            type: 'input',\r\n                                            name: 'unitAmount',\r\n                                            label: $localize `Unit weight`,\r\n                                            disable: true,\r\n                                            //     collections: [\r\n                                            //         {\r\n                                            //             type: 'input',\r\n                                            //             label: 'Unit weight',\r\n                                            //             name: 'amount',\r\n                                            //         },\r\n                                            //         {\r\n                                            //             type: 'select',\r\n                                            //             label: 'Weight unit',\r\n                                            //             name: 'measureUnit',\r\n                                            //         },\r\n                                            //     ]\r\n                                        },\r\n                                        {\r\n                                            type: 'select',\r\n                                            label: $localize `Warehouse location`,\r\n                                            name: 'warehouseLocation',\r\n                                            disable: true,\r\n                                        },\r\n                                        {\r\n                                            type: 'input',\r\n                                            label: $localize `Number available units`,\r\n                                            name: 'numberAvailableUnits',\r\n                                            disable: true,\r\n                                        },\r\n                                    ]\r\n                                },\r\n                            ],\r\n                        },\r\n                    ]\r\n                },\r\n            ] : [],\r\n            // {\r\n            //     type: 'bigexpand',\r\n            //     name: 'materialUsed',\r\n            //     label: 'Material used',\r\n            //     // options: 'alone',\r\n            //     collections: [\r\n            //         {\r\n            //             type: 'select',\r\n            //             label: 'Item descrption',\r\n            //             name: 'item',\r\n            //             options: this.genral.getItemsGeneral(),\r\n            //         },\r\n            //         {\r\n            //             type: 'selectNormal',\r\n            //             label: 'Weight unit',\r\n            //             name: 'measureUnit',\r\n            //             inputType: 'item',\r\n            //             options: this.genral.getMeasureUnit(),\r\n            //         },\r\n            //         {\r\n            //             type: 'input',\r\n            //             label: 'Number of units',\r\n            //             name: 'numberUnits',\r\n            //             // value: 1,\r\n            //             inputType: 'numeric',\r\n            //             options: 3,\r\n            //         },\r\n            //         // {\r\n            //         //     type: 'inputselect',\r\n            //         //     name: 'unitAmount',\r\n            //         //     options: 'item',\r\n            //         //     inputType: 'second',\r\n            //         //     collections: [\r\n            //         //         {\r\n            //         //             type: 'input',\r\n            //         //             label: 'Unit weight',\r\n            //         //             name: 'amount',\r\n            //         //             inputType: 'numeric',\r\n            //         //             options: 3,\r\n            //         //         },\r\n            //         //         {\r\n            //         //             type: 'select',\r\n            //         //             label: 'Weight unit',\r\n            //         //             value: 'GRAM',\r\n            //         //             name: 'measureUnit',\r\n            //         //             options: ['KG', 'LBS', 'OZ', 'GRAM'],\r\n            //         //         },\r\n            //         //     ]\r\n            //         // },\r\n            //         {\r\n            //             type: 'divider',\r\n            //             inputType: 'divide'\r\n            //         },\r\n            //     ]\r\n            // },\r\n            {\r\n                type: 'button',\r\n                label: $localize `Submit`,\r\n                name: 'submit',\r\n            }\r\n        ];\r\n    }\r\n}\r\nExportImportComponent.ɵfac = function ExportImportComponent_Factory(t) { return new (t || ExportImportComponent)(i0.ɵɵdirectiveInject(i1.Genral), i0.ɵɵdirectiveInject(i2.MatDialog)); };\r\nExportImportComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ExportImportComponent, selectors: [[\"export-import\"]], inputs: { mainLabel: \"mainLabel\", beginData: \"beginData\", newUsed: \"newUsed\", posArray: \"posArray\" }, outputs: { submitExIm: \"submitExIm\" }, decls: 1, vars: 1, consts: [[4, \"ngIf\"], [3, \"fields\", \"putData\", \"mainLabel\", \"submitForm\"]], template: function ExportImportComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, ExportImportComponent_div_0_Template, 2, 3, \"div\", 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngIf\", ctx.isDataAvailable);\r\n    } }, directives: [i3.NgIf, i4.DynamicFormComponent], encapsulation: 2 });\r\n"]},"metadata":{},"sourceType":"module"}