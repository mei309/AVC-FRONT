{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormArray, FormGroup, Validators } from '@angular/forms';\nimport { cloneDeep } from 'lodash-es';\nimport { Subject, throttleTime, distinctUntilChanged } from 'rxjs';\nimport { allOrNoneRequired, atLeastOneRequired } from '../../field.interface';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/snack-bar\";\n\nfunction DynamicFormComponent_legend_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"legend\");\n    i0.ɵɵelementStart(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.mainLabel);\n  }\n}\n\nfunction DynamicFormComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 5);\n  }\n\n  if (rf & 2) {\n    const field_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"edit\", ctx_r1.edit)(\"field\", field_r3)(\"group\", ctx_r1.form);\n  }\n}\n\nfunction DynamicFormComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelementStart(1, \"button\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function DynamicFormComponent_div_4_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onReset();\n    });\n    i0.ɵɵi18n(4, 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.submitText);\n  }\n}\n\nconst _c2 = function () {\n  return {\n    \"width\": \"90%\"\n  };\n};\n\nexport class DynamicFormComponent {\n  constructor(fb, _snackBar) {\n    this.fb = fb;\n    this._snackBar = _snackBar;\n    this.fields = [];\n    this.mainLabel = null;\n    this.popup = false;\n    this.infoEdit = null;\n    this.submitForm = new EventEmitter();\n    this.edit = false;\n    this.oneClickChanged = new Subject();\n  }\n\n  set putData(value) {\n    this.infoEdit = value;\n  }\n\n  get putData() {\n    return this.infoEdit;\n  }\n\n  get value() {\n    return this.form.value;\n  }\n\n  ngOnInit() {\n    if (this.putData) {\n      this.edit = true;\n      this.form = this.createControlWithData();\n    } else {\n      this.form = this.createControl();\n    }\n\n    this.putData = JSON.parse(JSON.stringify(this.form.value));\n    this.oneClickOnlySubscription = this.oneClickChanged.pipe(throttleTime(1100), distinctUntilChanged()).subscribe(event => {\n      event.preventDefault();\n      event.stopPropagation();\n      this.onSubmit();\n    });\n  }\n\n  reset() {\n    this.ngOnInit();\n  }\n\n  disable() {\n    this.form.disable();\n  }\n\n  enable() {\n    this.form.enable();\n  }\n\n  markDirty() {\n    this.form.markAsDirty();\n  }\n\n  onSubmitOutside() {\n    if (this.form.valid) {\n      const mmm = cloneDeep(this.form);\n      mmm.enable();\n      this.emptyEmptyArray(mmm);\n      return mmm.getRawValue();\n    } else {\n      this._snackBar.open(\"please fill in all required fields\", 'ok', {\n        duration: 5000,\n        // panelClass: 'blue-snackbar',\n        verticalPosition: 'top'\n      }); // alert('please fill in all required fields'+this.form.errors);\n\n    }\n\n    this.form.markAllAsTouched();\n    return false;\n  }\n\n  onSubmit() {\n    /**if(this.putData !== null && this.putData !== undefined) {\r\n        console.log(this.diff(this.putData, this.form.value));\r\n        if(this.form.dirty) {\r\n          //console.log(this.getDirtyValues(this.form));\r\n        } else {\r\n          console.log('nothing changed');\r\n        }\r\n      }\r\n    */\n    if (!this.form.invalid) {\n      //this.emptyNull(this.form.value)\n      // console.log(this.form.value);\n\n      /**if(this.putData !== null && this.putData !== undefined) {\r\n        if(this.form.dirty) {\r\n          console.log(this.getDirtyValues(this.form));\r\n        } else {\r\n          console.log('nothing changed');\r\n        }\r\n      } else {*/\n      // var emptyNull = this.form.getRawValue();\n      const mmm = cloneDeep(this.form);\n      mmm.enable();\n      this.emptyEmptyArray(mmm);\n      this.submitForm.emit(mmm.getRawValue()); // var emptyNull = mmm.getRawValue();\n      // this.emptyNull(emptyNull)\n      // this.submit.emit(emptyNull);\n      //}\n    } else {\n      this._snackBar.open(\"please fill in all required fields\", 'ok', {\n        duration: 5000,\n        // panelClass: 'blue-snackbar',\n        verticalPosition: 'top'\n      }); // alert('please fill in all required fields'+this.form.errors);\n\n    }\n\n    this.form.markAllAsTouched();\n  }\n\n  emptyEmptyArray(formValue) {\n    const controls = Object.values(formValue.controls);\n    controls.forEach(fc => {\n      if (fc instanceof FormGroup) {\n        this.emptyEmptyArray(fc);\n\n        if (!Object.values(fc.controls).length) {\n          formValue.removeControl(this.getControlName(fc));\n        }\n      } else if (fc instanceof FormArray) {\n        const controls1 = Object.values(fc.controls);\n        controls1.forEach(fa => {\n          this.emptyEmptyArray(fa);\n\n          if (!Object.values(fa.controls).length) {\n            fc.removeAt(fc.controls.indexOf(fa));\n          } else if (fa.pristine && !fa.contains('id')) {\n            fc.removeAt(fc.controls.indexOf(fa));\n          }\n        });\n\n        if (!fc.controls.length) {\n          formValue.removeControl(this.getControlName(fc));\n        }\n      } else if (fc.value == null) {\n        formValue.removeControl(this.getControlName(fc));\n      }\n    });\n  }\n\n  getControlName(c) {\n    const formGroup = c.parent.controls;\n    return Object.keys(formGroup).find(name => c === formGroup[name]) || null;\n  }\n\n  getDirtyValues(form) {\n    let dirtyValues = {};\n    Object.keys(form.controls).forEach(key => {\n      const currentControl = form.controls[key];\n\n      if (currentControl.dirty || key === 'id') {\n        if (currentControl.controls) {\n          dirtyValues[key] = this.getDirtyValues(currentControl);\n        } else {\n          dirtyValues[key] = currentControl.value;\n        }\n      }\n    });\n    return dirtyValues;\n  }\n\n  emptyNull(formValue) {\n    for (let prop in formValue) {\n      if (!formValue[prop]) {\n        delete formValue[prop];\n      }\n\n      if (Array.isArray(formValue[prop])) {\n        formValue[prop].forEach((field, index) => {\n          if (this.emptyNull(field)) {// formValue[prop].splice(index,1);\n          }\n        });\n      } else if (formValue[prop] instanceof Date) {} else if (typeof formValue[prop] == \"object\") {\n        if (this.emptyNull(formValue[prop])) {\n          delete formValue[prop];\n        }\n      }\n    }\n\n    for (var key in formValue) {\n      if (formValue[key]) return false;\n    }\n\n    return true;\n  }\n\n  onReset() {\n    // if(this.putData) {\n    this.form.reset(this.putData); // } else {\n    //   this.form.reset();\n    // }\n    //this.cancel.emit();\n  }\n\n  createControl() {\n    const group = this.fb.group({});\n    this.fields.forEach(field => {\n      switch (field.type) {\n        case 'button':\n          {\n            this.submitText = field.label;\n            break;\n          }\n\n        case 'divider':\n          {\n            break;\n          }\n\n        case 'inputselect':\n          {\n            if (field.name) {\n              group.addControl(field.name, this.createItem(field));\n            } else {\n              field.collections.forEach(kid => {\n                const control = this.fb.control(kid.value, this.bindValidations(kid.validations || []));\n                group.addControl(kid.name, control);\n              });\n            }\n\n            break;\n          }\n\n        case 'selectgroup':\n          {\n            const control = this.fb.control(field.collections[1].value, this.bindValidations(field.collections[1].validations || []));\n            group.addControl(field.collections[1].name, control);\n            break;\n          }\n\n        case 'calculatefew':\n          {\n            if (field.name) {\n              group.addControl(field.name, this.createItem(field));\n            } else {\n              this.createCalculateFewNoName(group, field);\n            }\n\n            break;\n          }\n\n        case 'array':\n          {\n            group.addControl(field.name, this.fb.array([this.fb.group({\n              value: this.fb.control(field.value, this.bindValidations(field.validations || []))\n            })]));\n            break;\n          }\n\n        case 'arrayordinal':\n          {\n            group.addControl(field.name, this.fb.array([this.fb.group({\n              ordinal: [1],\n              amount: this.fb.control(field.value, this.bindValidations(field.validations || []))\n            })]));\n            const num = field.collections + 1;\n\n            for (let i = 2; i < num; i++) {\n              group.get([field.name]).push(this.fb.group({\n                ordinal: [i],\n                amount: this.fb.control(field.value, this.bindValidations(field.validations || []))\n              }));\n            }\n\n            break;\n          }\n\n        case 'materialUsage':\n          {\n            group.addControl(field.name, this.fb.array([]));\n            break;\n          }\n\n        case 'bigexpand':\n          {\n            if (field.value === 'required') {\n              group.addControl(field.name, this.fb.array([this.createItem(field)], atLeastOneRequired()));\n            } else {\n              group.addControl(field.name, this.fb.array([this.createItem(field)]));\n            }\n\n            break;\n          }\n\n        case 'bigoutside':\n        case 'bignotexpand':\n          {\n            group.addControl(field.name, this.createItem(field));\n            break;\n          }\n\n        default:\n          {\n            const control = this.fb.control(field.value, this.bindValidations(field.validations || []));\n            group.addControl(field.name, control);\n          }\n      }\n    });\n    return group;\n  }\n\n  createItem(field) {\n    var group2;\n\n    if (field.hasOwnProperty('validations')) {\n      group2 = this.fb.group({}, {\n        validators: [allOrNoneRequired(field.validations)]\n      });\n    } else {\n      group2 = this.fb.group({});\n    }\n\n    field.collections.forEach(kid => {\n      let temp = Object.assign({}, kid);\n\n      switch (temp.type) {\n        case 'divider':\n          {\n            break;\n          }\n\n        case 'inputselect':\n          {\n            if (temp.name) {\n              group2.addControl(temp.name, this.createItem(temp));\n            } else {\n              temp.collections.forEach(opt => {\n                const control = this.fb.control(opt.value, this.bindValidations(opt.validations || []));\n                group2.addControl(opt.name, control);\n              });\n            }\n\n            break;\n          }\n\n        case 'selectgroup':\n          {\n            const control = this.fb.control(temp.collections[1].value, this.bindValidations(temp.collections[1].validations || []));\n            group2.addControl(temp.collections[1].name, control);\n            break;\n          }\n\n        case 'calculatefew':\n          {\n            if (temp.name) {\n              group2.addControl(temp.name, this.createItem(temp));\n            } else {\n              this.createCalculateFewNoName(group2, temp);\n            }\n\n            break;\n          }\n\n        case 'array':\n          {\n            group2.addControl(temp.name, this.fb.array([this.fb.group({\n              value: this.fb.control(temp.value, this.bindValidations(temp.validations || []))\n            })]));\n            break;\n          }\n\n        case 'arrayordinal':\n          {\n            group2.addControl(temp.name, this.fb.array([this.fb.group({\n              ordinal: [1],\n              amount: this.fb.control(temp.value, this.bindValidations(temp.validations || []))\n            })]));\n            const num = temp.collections + 1;\n\n            for (let i = 2; i < num; i++) {\n              group2.get([temp.name]).push(this.fb.group({\n                ordinal: [i],\n                amount: this.fb.control(temp.value, this.bindValidations(temp.validations || []))\n              }));\n            }\n\n            break;\n          }\n\n        case 'materialUsage':\n          {\n            group2.addControl(temp.name, this.fb.array([]));\n            break;\n          }\n\n        case 'bigexpand':\n          {\n            if (temp.value === 'required') {\n              group2.addControl(temp.name, this.fb.array([this.createItem(temp)], atLeastOneRequired()));\n            } else {\n              group2.addControl(temp.name, this.fb.array([this.createItem(temp)]));\n            }\n\n            break;\n          }\n\n        case 'bigoutside':\n        case 'bignotexpand':\n          {\n            group2.addControl(temp.name, this.createItem(temp));\n            break;\n          }\n\n        default:\n          {\n            const control = this.fb.control(temp.value, this.bindValidations(temp.validations || []));\n            group2.addControl(temp.name, control);\n          }\n      }\n    });\n    return group2;\n  }\n\n  createCalculateFewNoName(group, field) {\n    field.collections.forEach(kid => {\n      if (kid.type === 'inputselect') {\n        if (kid.name) {\n          group.addControl(kid.name, this.createItem(kid));\n        } else {\n          kid.collections.forEach(element => {\n            const control = this.fb.control(element.value, this.bindValidations(element.validations || []));\n            group.addControl(element.name, control);\n          });\n        }\n      } else {\n        const control = this.fb.control(kid.value, this.bindValidations(kid.validations || []));\n        group.addControl(kid.name, control);\n      }\n    });\n  }\n\n  createCalculateFewWithDataNoName(group, field, value) {\n    if (!value) {\n      value = {};\n    }\n\n    field.collections.forEach(kid => {\n      if (kid.type === 'inputselect') {\n        if (kid.name) {\n          group.addControl(kid.name, this.createItemWithData(kid, value.hasOwnProperty([kid.name]) ? value[kid.name] : {}));\n        } else {\n          kid.collections.forEach(element => {\n            const control = this.fb.control({\n              value: value.hasOwnProperty([element.name]) ? value[element.name] : element.value,\n              disabled: element.disable\n            }, this.bindValidations(element.validations || []));\n            group.addControl(element.name, control);\n          });\n        }\n      } else {\n        const control = this.fb.control({\n          value: value.hasOwnProperty([kid.name]) ? value[kid.name] : kid.value,\n          disabled: kid.disable\n        }, this.bindValidations(kid.validations || []));\n        group.addControl(kid.name, control);\n      }\n    });\n  }\n\n  bindValidations(validations) {\n    if (validations.length > 0) {\n      const validList = [];\n      validations.forEach(valid => {\n        validList.push(valid.validator);\n      });\n      return Validators.compose(validList);\n    }\n\n    return null;\n  }\n\n  bindValidationsNoReqierd(validations) {\n    if (validations.length > 0) {\n      const validList = [];\n      validations.forEach(valid => {\n        if (valid.name !== 'required') {\n          validList.push(valid.validator);\n        }\n      });\n      return Validators.compose(validList);\n    }\n\n    return null;\n  }\n\n  validateAllFormFields(formGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field); //control.markAllAsTouched();\n    });\n  }\n\n  setValue(value) {\n    this.form.patchValue(value);\n  }\n\n  createControlWithData() {\n    let value = this.putData;\n\n    if (!value) {\n      value = {};\n    }\n\n    const group = this.fb.group({});\n\n    if (value.hasOwnProperty('id')) {\n      group.addControl('id', this.fb.control(value['id'], null));\n    }\n\n    if (value.hasOwnProperty('version')) {\n      group.addControl('version', this.fb.control(value['version'], null));\n    }\n\n    this.fields.forEach(field => {\n      switch (field.type) {\n        case 'button':\n          {\n            this.submitText = field.label;\n            break;\n          }\n\n        case 'divider':\n          {\n            break;\n          }\n\n        case 'inputselect':\n          {\n            if (field.name) {\n              group.addControl(field.name, this.createItemWithData(field, value.hasOwnProperty([field.name]) ? value[field.name] : {}));\n            } else {\n              field.collections.forEach(kid => {\n                var control = this.fb.control(value[kid.name] ? value[kid.name] : kid.value, this.bindValidations(kid.validations || []));\n                group.addControl(kid.name, control);\n              });\n            }\n\n            break;\n          }\n\n        case 'selectgroup':\n          {\n            var control = this.fb.control(value[field.collections[1].name] ? value[field.collections[1].name] : field.collections[1].value, this.bindValidations(field.collections[1].validations || []));\n            group.addControl(field.collections[1].name, control);\n            break;\n          }\n\n        case 'calculatefew':\n          {\n            if (field.name) {\n              group.addControl(field.name, this.createItemWithData(field, value.hasOwnProperty([field.name]) ? value[field.name] : {}));\n            } else {\n              this.createCalculateFewWithDataNoName(group, field, value);\n            }\n\n            break;\n          }\n\n        case 'array':\n          {\n            let groupJson = null;\n\n            if (value.hasOwnProperty(field.name)) {\n              groupJson = value[field.name];\n            }\n\n            if (groupJson && groupJson.length !== 0) {\n              group.addControl(field.name, this.fb.array([this.fb.group({\n                id: groupJson[0].id,\n                version: groupJson[0].version,\n                value: this.fb.control(groupJson[0].value, this.bindValidations(field.validations || []))\n              })]));\n\n              for (let i = 1; i < groupJson.length; i++) {\n                group.get([field.name]).push(this.fb.group({\n                  id: groupJson[i].id,\n                  version: groupJson[i].version,\n                  value: this.fb.control(groupJson[i].value, this.bindValidationsNoReqierd(field.validations || []))\n                }));\n              }\n\n              group.get([field.name]).controls.forEach(lm => lm.markAsDirty());\n            } else {\n              group.addControl(field.name, this.fb.array([this.fb.group({\n                value: this.fb.control(field.value, this.bindValidations(field.validations || []))\n              })]));\n            }\n\n            break;\n          }\n\n        case 'arrayordinal':\n          {\n            let groupJson = null;\n\n            if (value.hasOwnProperty(field.name)) {\n              groupJson = value[field.name];\n            }\n\n            if (field.inputType === 'choose') {\n              if (groupJson && groupJson.length !== 0) {\n                group.addControl(field.name, this.fb.array([this.fb.group({\n                  storageId: groupJson[0].storageId,\n                  storageVersion: groupJson[0].storageVersion,\n                  take: groupJson[0].take ? true : false,\n                  id: groupJson[0].id,\n                  version: groupJson[0].version,\n                  ordinal: groupJson[0].ordinal,\n                  amount: this.fb.control(groupJson[0].amount, this.bindValidations(field.validations || []))\n                })]));\n\n                for (let i = 1; i < groupJson.length; i++) {\n                  group.get([field.name]).push(this.fb.group({\n                    storageId: groupJson[i].storageId,\n                    storageVersion: groupJson[i].storageVersion,\n                    take: groupJson[i].take ? true : false,\n                    id: groupJson[i].id,\n                    version: groupJson[i].version,\n                    ordinal: groupJson[i].ordinal,\n                    amount: this.fb.control(groupJson[i].amount, this.bindValidations(field.validations || []))\n                  }));\n                }\n\n                group.get([field.name]).controls.forEach(lm => lm.markAsDirty());\n              }\n            } else {\n              if (groupJson && groupJson.length !== 0) {\n                var groupLocation = 0;\n\n                if (groupJson[0].ordinal === 1) {\n                  group.addControl(field.name, this.fb.array([this.fb.group({\n                    id: groupJson[0].id,\n                    version: groupJson[0].version,\n                    ordinal: 1,\n                    amount: this.fb.control(groupJson[0].amount, this.bindValidations(field.validations || []))\n                  })]));\n                  groupLocation++;\n                } else {\n                  group.addControl(field.name, this.fb.array([this.fb.group({\n                    ordinal: 1,\n                    amount: this.fb.control(field.value, this.bindValidations(field.validations || []))\n                  })]));\n                }\n\n                const num = field.collections + 1;\n\n                for (let i = 2; i < num; i++) {\n                  if (groupLocation < groupJson.length && groupJson[groupLocation].ordinal === i) {\n                    group.get([field.name]).push(this.fb.group({\n                      id: groupJson[groupLocation].id,\n                      version: groupJson[groupLocation].version,\n                      ordinal: i,\n                      amount: this.fb.control(groupJson[groupLocation].amount, this.bindValidations(field.validations || []))\n                    }));\n                    groupLocation++;\n                  } else {\n                    group.get([field.name]).push(this.fb.group({\n                      ordinal: i,\n                      amount: this.fb.control(field.value, this.bindValidations(field.validations || []))\n                    }));\n                  }\n                }\n\n                while (groupLocation < groupJson.length) {\n                  for (let i = group.get([field.name]).length + 1; i < groupJson[groupLocation].ordinal; i++) {\n                    group.get([field.name]).push(this.fb.group({\n                      ordinal: i,\n                      amount: this.fb.control(field.value, this.bindValidations(field.validations || []))\n                    }));\n                  }\n\n                  group.get([field.name]).push(this.fb.group({\n                    id: groupJson[groupLocation].id,\n                    version: groupJson[groupLocation].version,\n                    ordinal: groupJson[groupLocation].ordinal,\n                    amount: this.fb.control(groupJson[groupLocation].amount, this.bindValidations(field.validations || []))\n                  }));\n                  groupLocation++;\n                }\n\n                group.get([field.name]).controls.forEach(lm => {\n                  if (lm.contains('id')) {\n                    lm.markAsDirty();\n                  }\n                });\n              } else {\n                group.addControl(field.name, this.fb.array([this.fb.group({\n                  ordinal: [1],\n                  amount: this.fb.control(field.value, this.bindValidations(field.validations || []))\n                })]));\n                const num = field.collections + 1;\n\n                for (let i = 2; i < num; i++) {\n                  group.get([field.name]).push(this.fb.group({\n                    ordinal: [i],\n                    amount: this.fb.control(field.value, this.bindValidations(field.validations || []))\n                  }));\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 'materialUsage':\n          {\n            if (!value.hasOwnProperty(field.name) || !value[field.name] || !value[field.name].length) {\n              group.addControl(field.name, this.fb.array([]));\n              break;\n            }\n\n            field.options = 'numberUsedUnits';\n          }\n\n        case 'tableWithInput':\n          {\n            let groupJson = null;\n\n            if (value.hasOwnProperty(field.name)) {\n              groupJson = value[field.name];\n            }\n\n            group.addControl(field.name, this.fb.array([this.createItemWithData(field, groupJson[0])]));\n            var control = this.fb.control(groupJson[0][field.options]);\n            group.get([field.name]).at(0).addControl(field.options, control);\n\n            for (let i = 1; i < groupJson.length; i++) {\n              group.get([field.name]).push(this.createItemWithData(field, groupJson[i]));\n              var control = this.fb.control(groupJson[i][field.options]);\n              group.get([field.name]).at(i).addControl(field.options, control);\n            }\n\n            group.get([field.name]).controls.forEach(lm => lm.markAsDirty());\n            break;\n          }\n\n        case 'bigexpand':\n          {\n            let groupJson = null;\n\n            if (value.hasOwnProperty(field.name)) {\n              groupJson = value[field.name];\n            }\n\n            if (field.value === 'required') {\n              if (groupJson && groupJson.length !== 0) {\n                group.addControl(field.name, this.fb.array([this.createItemWithData(field, groupJson[0])], atLeastOneRequired()));\n\n                for (let i = 1; i < groupJson.length; i++) {\n                  group.get([field.name]).push(this.createItemWithData(field, groupJson[i]));\n                }\n\n                group.get([field.name]).controls.forEach(lm => lm.markAsDirty());\n              } else {\n                group.addControl(field.name, this.fb.array([this.createItemWithData(field, {})], atLeastOneRequired()));\n              }\n            } else {\n              if (groupJson && groupJson.length !== 0) {\n                group.addControl(field.name, this.fb.array([this.createItemWithData(field, groupJson[0])]));\n\n                for (let i = 1; i < groupJson.length; i++) {\n                  group.get([field.name]).push(this.createItemWithData(field, groupJson[i]));\n                }\n\n                group.get([field.name]).controls.forEach(lm => lm.markAsDirty());\n              } else {\n                group.addControl(field.name, this.fb.array([this.createItemWithData(field, {})]));\n              }\n            }\n\n            break;\n          }\n\n        case 'bigoutside':\n        case 'bignotexpand':\n          {\n            group.addControl(field.name, this.createItemWithData(field, value.hasOwnProperty([field.name]) ? value[field.name] : {}));\n            break;\n          }\n\n        default:\n          {\n            const control = this.fb.control(value.hasOwnProperty(field.name) ? value[field.name] : field.value, this.bindValidations(field.validations || []));\n            group.addControl(field.name, control);\n          }\n      }\n    });\n    return group;\n  }\n\n  createItemWithData(field, value) {\n    if (!value) {\n      value = {};\n    }\n\n    var group2;\n\n    if (field.hasOwnProperty('validations')) {\n      group2 = this.fb.group({}, {\n        validators: [allOrNoneRequired(field.validations)]\n      });\n    } else {\n      group2 = this.fb.group({});\n    }\n\n    if (value.hasOwnProperty('id')) {\n      group2.addControl('id', this.fb.control(value['id'], null));\n    }\n\n    if (value.hasOwnProperty('version')) {\n      group2.addControl('version', this.fb.control(value['version'], null));\n    }\n\n    field.collections.forEach(kid => {\n      let temp = Object.assign({}, kid);\n\n      switch (temp.type) {\n        case 'divider':\n          {\n            break;\n          }\n\n        case 'inputselect':\n          {\n            if (temp.name) {\n              group2.addControl(temp.name, this.createItemWithData(temp, value.hasOwnProperty([temp.name]) ? value[temp.name] : {}));\n            } else {\n              temp.collections.forEach(opt => {\n                var control = this.fb.control(value[opt.name] ? value[opt.name] : opt.value, this.bindValidations(opt.validations || []));\n                group2.addControl(opt.name, control);\n              });\n            }\n\n            break;\n          }\n\n        case 'selectgroup':\n          {\n            var control = this.fb.control(value[temp.collections[1].name] ? value[temp.collections[1].name] : temp.collections[1].value, this.bindValidations(temp.collections[1].validations || []));\n            group2.addControl(temp.collections[1].name, control);\n            break;\n          }\n\n        case 'calculatefew':\n          {\n            if (temp.name) {\n              group2.addControl(temp.name, this.createItemWithData(temp, value.hasOwnProperty([temp.name]) ? value[temp.name] : {}));\n            } else {\n              this.createCalculateFewWithDataNoName(group2, temp, value);\n            }\n\n            break;\n          }\n\n        case 'array':\n          {\n            let groupJson = null;\n\n            if (value.hasOwnProperty(temp.name)) {\n              groupJson = value[temp.name];\n            }\n\n            if (groupJson && groupJson.length !== 0) {\n              group2.addControl(temp.name, this.fb.array([this.fb.group({\n                id: groupJson[0].id,\n                version: groupJson[0].version,\n                value: this.fb.control(groupJson[0].value, this.bindValidations(temp.validations || []))\n              })]));\n\n              for (let i = 1; i < groupJson.length; i++) {\n                group2.get([temp.name]).push(this.fb.group({\n                  id: groupJson[i].id,\n                  version: groupJson[i].version,\n                  value: this.fb.control(groupJson[i].value, this.bindValidationsNoReqierd(temp.validations || []))\n                }));\n              }\n\n              group2.get([temp.name]).controls.forEach(tm => tm.markAsDirty());\n            } else {\n              group2.addControl(temp.name, this.fb.array([this.fb.group({\n                value: this.fb.control(temp.value, this.bindValidations(temp.validations || []))\n              })]));\n            }\n\n            break;\n          }\n\n        case 'arrayordinal':\n          {\n            let groupJson = null;\n\n            if (value.hasOwnProperty(temp.name)) {\n              groupJson = value[temp.name];\n            }\n\n            if (temp.inputType === 'choose') {\n              if (groupJson && groupJson.length !== 0) {\n                group2.addControl(temp.name, this.fb.array([this.fb.group({\n                  storageId: groupJson[0].storageId,\n                  storageVersion: groupJson[0].storageVersion,\n                  take: groupJson[0].take ? true : false,\n                  id: groupJson[0].id,\n                  version: groupJson[0].version,\n                  ordinal: groupJson[0].ordinal,\n                  amount: this.fb.control(groupJson[0].amount, this.bindValidations(temp.validations || []))\n                })]));\n\n                for (let i = 1; i < groupJson.length; i++) {\n                  group2.get([temp.name]).push(this.fb.group({\n                    storageId: groupJson[i].storageId,\n                    storageVersion: groupJson[i].storageVersion,\n                    take: groupJson[i].take ? true : false,\n                    id: groupJson[i].id,\n                    version: groupJson[i].version,\n                    ordinal: groupJson[i].ordinal,\n                    amount: this.fb.control(groupJson[i].amount, this.bindValidations(temp.validations || []))\n                  }));\n                }\n\n                group2.get([temp.name]).controls.forEach(tm => tm.markAsDirty());\n              }\n            } else {\n              if (groupJson && groupJson.length !== 0) {\n                var groupLocation = 0;\n\n                if (groupJson[0].ordinal === 1) {\n                  group2.addControl(temp.name, this.fb.array([this.fb.group({\n                    id: groupJson[0].id,\n                    version: groupJson[0].version,\n                    ordinal: 1,\n                    amount: this.fb.control(groupJson[0].amount, this.bindValidations(temp.validations || []))\n                  })]));\n                  groupLocation++;\n                } else {\n                  group2.addControl(temp.name, this.fb.array([this.fb.group({\n                    ordinal: 1,\n                    amount: this.fb.control(temp.value, this.bindValidations(temp.validations || []))\n                  })]));\n                }\n\n                const num = temp.collections + 1;\n\n                for (let i = 2; i < num; i++) {\n                  if (groupLocation < groupJson.length && groupJson[groupLocation].ordinal === i) {\n                    group2.get([temp.name]).push(this.fb.group({\n                      id: groupJson[groupLocation].id,\n                      version: groupJson[groupLocation].version,\n                      ordinal: i,\n                      amount: this.fb.control(groupJson[groupLocation].amount, this.bindValidations(temp.validations || []))\n                    }));\n                    groupLocation++;\n                  } else {\n                    group2.get([temp.name]).push(this.fb.group({\n                      ordinal: i,\n                      amount: this.fb.control(temp.value, this.bindValidations(temp.validations || []))\n                    }));\n                  }\n                }\n\n                while (groupLocation < groupJson.length) {\n                  for (let i = group2.get([temp.name]).length + 1; i < groupJson[groupLocation].ordinal; i++) {\n                    group2.get([temp.name]).push(this.fb.group({\n                      ordinal: i,\n                      amount: this.fb.control(temp.value, this.bindValidations(temp.validations || []))\n                    }));\n                  }\n\n                  group2.get([temp.name]).push(this.fb.group({\n                    id: groupJson[groupLocation].id,\n                    version: groupJson[groupLocation].version,\n                    ordinal: groupJson[groupLocation].ordinal,\n                    amount: this.fb.control(groupJson[groupLocation].amount, this.bindValidations(temp.validations || []))\n                  }));\n                  groupLocation++;\n                }\n\n                group2.get([temp.name]).controls.forEach(lm => {\n                  if (lm.contains('id')) {\n                    lm.markAsDirty();\n                  }\n                });\n              } else {\n                group2.addControl(temp.name, this.fb.array([this.fb.group({\n                  ordinal: [1],\n                  amount: this.fb.control(temp.value, this.bindValidations(temp.validations || []))\n                })]));\n                const num = temp.collections + 1;\n\n                for (let i = 2; i < num; i++) {\n                  group2.get([temp.name]).push(this.fb.group({\n                    ordinal: [i],\n                    amount: this.fb.control(temp.value, this.bindValidations(temp.validations || []))\n                  }));\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 'materialUsage':\n          {\n            if (!value.hasOwnProperty(temp.name) || !value[temp.name] || !value[temp.name].length) {\n              group2.addControl(temp.name, this.fb.array([]));\n              break;\n            }\n\n            temp.options = 'numberUsedUnits';\n          }\n\n        case 'tableWithInput':\n          {\n            let groupJson = null;\n\n            if (value.hasOwnProperty(temp.name)) {\n              groupJson = value[temp.name];\n            }\n\n            group2.addControl(temp.name, this.fb.array([this.createItemWithData(temp, groupJson[0])]));\n            control = this.fb.control(groupJson[0][temp.options]);\n            group2.get([temp.name]).at(0).addControl(temp.options, control);\n\n            for (let i = 1; i < groupJson.length; i++) {\n              group2.get([temp.name]).push(this.createItemWithData(temp, groupJson[i]));\n              control = this.fb.control(groupJson[i][temp.options]);\n              group2.get([temp.name]).at(i).addControl(temp.options, control);\n            }\n\n            group2.get([temp.name]).controls.forEach(tm => tm.markAsDirty());\n            break;\n          }\n\n        case 'bigexpand':\n          {\n            let groupJson = null;\n\n            if (value.hasOwnProperty(temp.name)) {\n              groupJson = value[temp.name];\n            }\n\n            if (temp.value === 'required') {\n              if (groupJson && groupJson.length !== 0) {\n                group2.addControl(temp.name, this.fb.array([this.createItemWithData(temp, groupJson[0])], atLeastOneRequired()));\n\n                for (let i = 1; i < groupJson.length; i++) {\n                  group2.get([temp.name]).push(this.createItemWithData(temp, groupJson[i]));\n                }\n\n                group2.get([temp.name]).controls.forEach(tm => tm.markAsDirty());\n              } else {\n                group2.addControl(temp.name, this.fb.array([this.createItemWithData(temp, {})], atLeastOneRequired()));\n              }\n            } else {\n              if (groupJson && groupJson.length !== 0) {\n                group2.addControl(temp.name, this.fb.array([this.createItemWithData(temp, groupJson[0])]));\n\n                for (let i = 1; i < groupJson.length; i++) {\n                  group2.get([temp.name]).push(this.createItemWithData(temp, groupJson[i]));\n                }\n\n                group2.get([temp.name]).controls.forEach(tm => tm.markAsDirty());\n              } else {\n                group2.addControl(temp.name, this.fb.array([this.createItemWithData(temp, {})]));\n              }\n            }\n\n            break;\n          }\n\n        case 'bigoutside':\n        case 'bignotexpand':\n          {\n            group2.addControl(temp.name, this.createItemWithData(temp, value.hasOwnProperty([temp.name]) ? value[temp.name] : {}));\n            break;\n          }\n\n        default:\n          {\n            control = this.fb.control(value.hasOwnProperty(temp.name) ? value[temp.name] : temp.value, this.bindValidations(temp.validations || []));\n            group2.addControl(temp.name, control);\n          }\n      }\n    });\n    return group2;\n  }\n\n  ngOnDestroy() {\n    this.oneClickOnlySubscription.unsubscribe();\n  }\n\n}\n\nDynamicFormComponent.ɵfac = function DynamicFormComponent_Factory(t) {\n  return new (t || DynamicFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n};\n\nDynamicFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DynamicFormComponent,\n  selectors: [[\"dynamic-form\"]],\n  inputs: {\n    fields: \"fields\",\n    mainLabel: \"mainLabel\",\n    popup: \"popup\",\n    putData: \"putData\"\n  },\n  outputs: {\n    submitForm: \"submitForm\"\n  },\n  decls: 5,\n  vars: 7,\n  consts: function () {\n    let i18n_0;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_7808756054397155068$$SRC_APP_COMPONENTS_DYNAMIC_FORM_DYNAMIC_FORM_COMPONENT_TS__1 = goog.getMsg(\"Reset\");\n      i18n_0 = MSG_EXTERNAL_7808756054397155068$$SRC_APP_COMPONENTS_DYNAMIC_FORM_DYNAMIC_FORM_COMPONENT_TS__1;\n    } else {\n      i18n_0 = \"Reset\";\n    }\n\n    return [[\"autocomplete\", \"off\", \"focusInvalidInput\", \"\", 1, \"dynamic-form\", 3, \"formGroup\", \"popup\", \"ngSubmit\"], [3, \"ngStyle\"], [4, \"ngIf\"], [\"dynamicField\", \"\", 3, \"edit\", \"field\", \"group\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"margin-top\", \"style\", \"text-align:right\", 4, \"ngIf\"], [\"dynamicField\", \"\", 3, \"edit\", \"field\", \"group\"], [1, \"margin-top\", 2, \"text-align\", \"right\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\", 2, \"min-width\", \"150px\", \"margin-right\", \"45px\"], [\"type\", \"button\", \"mat-raised-button\", \"\", \"color\", \"primary\", 2, \"min-width\", \"150px\", 3, \"click\"], i18n_0];\n  },\n  template: function DynamicFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function DynamicFormComponent_Template_form_ngSubmit_0_listener($event) {\n        return ctx.oneClickChanged.next($event);\n      });\n      i0.ɵɵelementStart(1, \"fieldset\", 1);\n      i0.ɵɵtemplate(2, DynamicFormComponent_legend_2_Template, 3, 1, \"legend\", 2);\n      i0.ɵɵtemplate(3, DynamicFormComponent_ng_container_3_Template, 1, 3, \"ng-container\", 3);\n      i0.ɵɵtemplate(4, DynamicFormComponent_div_4_Template, 5, 1, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form)(\"popup\", ctx.popup);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(6, _c2));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.mainLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.fields);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitText);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:/Users/isral/OneDrive/Documents/AVC-FRONT/src/app/components/dynamic-form/dynamic-form.component.ts"],"names":["EventEmitter","FormArray","FormGroup","Validators","cloneDeep","Subject","throttleTime","distinctUntilChanged","allOrNoneRequired","atLeastOneRequired","i0","i1","i2","DynamicFormComponent_legend_2_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","mainLabel","DynamicFormComponent_ng_container_3_Template","ɵɵelementContainer","field_r3","$implicit","ctx_r1","ɵɵproperty","edit","form","DynamicFormComponent_div_4_Template","_r5","ɵɵgetCurrentView","ɵɵlistener","DynamicFormComponent_div_4_Template_button_click_3_listener","ɵɵrestoreView","ctx_r4","onReset","ɵɵi18n","ctx_r2","submitText","_c2","DynamicFormComponent","constructor","fb","_snackBar","fields","popup","infoEdit","submitForm","oneClickChanged","putData","value","ngOnInit","createControlWithData","createControl","JSON","parse","stringify","oneClickOnlySubscription","pipe","subscribe","event","preventDefault","stopPropagation","onSubmit","reset","disable","enable","markDirty","markAsDirty","onSubmitOutside","valid","mmm","emptyEmptyArray","getRawValue","open","duration","verticalPosition","markAllAsTouched","invalid","emit","formValue","controls","Object","values","forEach","fc","length","removeControl","getControlName","controls1","fa","removeAt","indexOf","pristine","contains","c","formGroup","parent","keys","find","name","getDirtyValues","dirtyValues","key","currentControl","dirty","emptyNull","prop","Array","isArray","field","index","Date","group","type","label","addControl","createItem","collections","kid","control","bindValidations","validations","createCalculateFewNoName","array","ordinal","amount","num","i","get","push","group2","hasOwnProperty","validators","temp","assign","opt","element","createCalculateFewWithDataNoName","createItemWithData","disabled","validList","validator","compose","bindValidationsNoReqierd","validateAllFormFields","setValue","patchValue","groupJson","id","version","lm","inputType","storageId","storageVersion","take","groupLocation","options","at","tm","ngOnDestroy","unsubscribe","ɵfac","DynamicFormComponent_Factory","t","ɵɵdirectiveInject","FormBuilder","MatSnackBar","ɵcmp","ɵɵdefineComponent","selectors","inputs","outputs","decls","vars","consts","i18n_0","ngI18nClosureMode","MSG_EXTERNAL_7808756054397155068$$SRC_APP_COMPONENTS_DYNAMIC_FORM_DYNAMIC_FORM_COMPONENT_TS__1","goog","getMsg","template","DynamicFormComponent_Template","DynamicFormComponent_Template_form_ngSubmit_0_listener","$event","next","ɵɵtemplate","ɵɵpureFunction0","encapsulation"],"mappings":"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","sourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { FormArray, FormGroup, Validators } from '@angular/forms';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { Subject, throttleTime, distinctUntilChanged } from 'rxjs';\r\nimport { allOrNoneRequired, atLeastOneRequired } from '../../field.interface';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/forms\";\r\nimport * as i2 from \"@angular/material/snack-bar\";\r\nfunction DynamicFormComponent_legend_2_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"legend\");\r\n    i0.ɵɵelementStart(1, \"h1\");\r\n    i0.ɵɵtext(2);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵtextInterpolate(ctx_r0.mainLabel);\r\n} }\r\nfunction DynamicFormComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementContainer(0, 5);\r\n} if (rf & 2) {\r\n    const field_r3 = ctx.$implicit;\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"edit\", ctx_r1.edit)(\"field\", field_r3)(\"group\", ctx_r1.form);\r\n} }\r\nfunction DynamicFormComponent_div_4_Template(rf, ctx) { if (rf & 1) {\r\n    const _r5 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"div\", 6);\r\n    i0.ɵɵelementStart(1, \"button\", 7);\r\n    i0.ɵɵtext(2);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(3, \"button\", 8);\r\n    i0.ɵɵlistener(\"click\", function DynamicFormComponent_div_4_Template_button_click_3_listener() { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.onReset(); });\r\n    i0.ɵɵi18n(4, 9);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r2 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵtextInterpolate(ctx_r2.submitText);\r\n} }\r\nconst _c2 = function () { return { \"width\": \"90%\" }; };\r\nexport class DynamicFormComponent {\r\n    constructor(fb, _snackBar) {\r\n        this.fb = fb;\r\n        this._snackBar = _snackBar;\r\n        this.fields = [];\r\n        this.mainLabel = null;\r\n        this.popup = false;\r\n        this.infoEdit = null;\r\n        this.submitForm = new EventEmitter();\r\n        this.edit = false;\r\n        this.oneClickChanged = new Subject();\r\n    }\r\n    set putData(value) {\r\n        this.infoEdit = value;\r\n    }\r\n    get putData() { return this.infoEdit; }\r\n    get value() {\r\n        return this.form.value;\r\n    }\r\n    ngOnInit() {\r\n        if (this.putData) {\r\n            this.edit = true;\r\n            this.form = this.createControlWithData();\r\n        }\r\n        else {\r\n            this.form = this.createControl();\r\n        }\r\n        this.putData = JSON.parse(JSON.stringify(this.form.value));\r\n        this.oneClickOnlySubscription = this.oneClickChanged\r\n            .pipe(throttleTime(1100), distinctUntilChanged())\r\n            .subscribe(event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            this.onSubmit();\r\n        });\r\n    }\r\n    reset() {\r\n        this.ngOnInit();\r\n    }\r\n    disable() {\r\n        this.form.disable();\r\n    }\r\n    enable() {\r\n        this.form.enable();\r\n    }\r\n    markDirty() {\r\n        this.form.markAsDirty();\r\n    }\r\n    onSubmitOutside() {\r\n        if (this.form.valid) {\r\n            const mmm = cloneDeep(this.form);\r\n            mmm.enable();\r\n            this.emptyEmptyArray(mmm);\r\n            return mmm.getRawValue();\r\n        }\r\n        else {\r\n            this._snackBar.open($localize `please fill in all required fields`, 'ok', {\r\n                duration: 5000,\r\n                // panelClass: 'blue-snackbar',\r\n                verticalPosition: 'top'\r\n            });\r\n            // alert('please fill in all required fields'+this.form.errors);\r\n        }\r\n        this.form.markAllAsTouched();\r\n        return false;\r\n    }\r\n    onSubmit() {\r\n        /**if(this.putData !== null && this.putData !== undefined) {\r\n            console.log(this.diff(this.putData, this.form.value));\r\n            if(this.form.dirty) {\r\n              //console.log(this.getDirtyValues(this.form));\r\n            } else {\r\n              console.log('nothing changed');\r\n            }\r\n          }\r\n        */\r\n        if (!this.form.invalid) {\r\n            //this.emptyNull(this.form.value)\r\n            // console.log(this.form.value);\r\n            /**if(this.putData !== null && this.putData !== undefined) {\r\n              if(this.form.dirty) {\r\n                console.log(this.getDirtyValues(this.form));\r\n              } else {\r\n                console.log('nothing changed');\r\n              }\r\n            } else {*/\r\n            // var emptyNull = this.form.getRawValue();\r\n            const mmm = cloneDeep(this.form);\r\n            mmm.enable();\r\n            this.emptyEmptyArray(mmm);\r\n            this.submitForm.emit(mmm.getRawValue());\r\n            // var emptyNull = mmm.getRawValue();\r\n            // this.emptyNull(emptyNull)\r\n            // this.submit.emit(emptyNull);\r\n            //}\r\n        }\r\n        else {\r\n            this._snackBar.open($localize `please fill in all required fields`, 'ok', {\r\n                duration: 5000,\r\n                // panelClass: 'blue-snackbar',\r\n                verticalPosition: 'top'\r\n            });\r\n            // alert('please fill in all required fields'+this.form.errors);\r\n        }\r\n        this.form.markAllAsTouched();\r\n    }\r\n    emptyEmptyArray(formValue) {\r\n        const controls = Object.values(formValue.controls);\r\n        controls.forEach(fc => {\r\n            if (fc instanceof FormGroup) {\r\n                this.emptyEmptyArray(fc);\r\n                if (!Object.values(fc.controls).length) {\r\n                    formValue.removeControl(this.getControlName(fc));\r\n                }\r\n            }\r\n            else if (fc instanceof FormArray) {\r\n                const controls1 = Object.values(fc.controls);\r\n                controls1.forEach(fa => {\r\n                    this.emptyEmptyArray(fa);\r\n                    if (!Object.values(fa.controls).length) {\r\n                        fc.removeAt(fc.controls.indexOf(fa));\r\n                    }\r\n                    else if (fa.pristine && !fa.contains('id')) {\r\n                        fc.removeAt(fc.controls.indexOf(fa));\r\n                    }\r\n                });\r\n                if (!fc.controls.length) {\r\n                    formValue.removeControl(this.getControlName(fc));\r\n                }\r\n            }\r\n            else if (fc.value == null) {\r\n                formValue.removeControl(this.getControlName(fc));\r\n            }\r\n        });\r\n    }\r\n    getControlName(c) {\r\n        const formGroup = c.parent.controls;\r\n        return Object.keys(formGroup).find(name => c === formGroup[name]) || null;\r\n    }\r\n    getDirtyValues(form) {\r\n        let dirtyValues = {};\r\n        Object.keys(form.controls).forEach(key => {\r\n            const currentControl = form.controls[key];\r\n            if (currentControl.dirty || key === 'id') {\r\n                if (currentControl.controls) {\r\n                    dirtyValues[key] = this.getDirtyValues(currentControl);\r\n                }\r\n                else {\r\n                    dirtyValues[key] = currentControl.value;\r\n                }\r\n            }\r\n        });\r\n        return dirtyValues;\r\n    }\r\n    emptyNull(formValue) {\r\n        for (let prop in formValue) {\r\n            if (!formValue[prop]) {\r\n                delete formValue[prop];\r\n            }\r\n            if (Array.isArray(formValue[prop])) {\r\n                formValue[prop].forEach((field, index) => {\r\n                    if (this.emptyNull(field)) {\r\n                        // formValue[prop].splice(index,1);\r\n                    }\r\n                });\r\n            }\r\n            else if (formValue[prop] instanceof Date) {\r\n            }\r\n            else if (typeof formValue[prop] == \"object\") {\r\n                if (this.emptyNull(formValue[prop])) {\r\n                    delete formValue[prop];\r\n                }\r\n            }\r\n        }\r\n        for (var key in formValue) {\r\n            if (formValue[key])\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    onReset() {\r\n        // if(this.putData) {\r\n        this.form.reset(this.putData);\r\n        // } else {\r\n        //   this.form.reset();\r\n        // }\r\n        //this.cancel.emit();\r\n    }\r\n    createControl() {\r\n        const group = this.fb.group({});\r\n        this.fields.forEach(field => {\r\n            switch (field.type) {\r\n                case 'button': {\r\n                    this.submitText = field.label;\r\n                    break;\r\n                }\r\n                case 'divider': {\r\n                    break;\r\n                }\r\n                case 'inputselect': {\r\n                    if (field.name) {\r\n                        group.addControl(field.name, this.createItem(field));\r\n                    }\r\n                    else {\r\n                        field.collections.forEach(kid => {\r\n                            const control = this.fb.control(kid.value, this.bindValidations(kid.validations || []));\r\n                            group.addControl(kid.name, control);\r\n                        });\r\n                    }\r\n                    break;\r\n                }\r\n                case 'selectgroup': {\r\n                    const control = this.fb.control(field.collections[1].value, this.bindValidations(field.collections[1].validations || []));\r\n                    group.addControl(field.collections[1].name, control);\r\n                    break;\r\n                }\r\n                case 'calculatefew': {\r\n                    if (field.name) {\r\n                        group.addControl(field.name, this.createItem(field));\r\n                    }\r\n                    else {\r\n                        this.createCalculateFewNoName(group, field);\r\n                    }\r\n                    break;\r\n                }\r\n                case 'array': {\r\n                    group.addControl(field.name, this.fb.array([this.fb.group({ value: this.fb.control(field.value, this.bindValidations(field.validations || [])) })]));\r\n                    break;\r\n                }\r\n                case 'arrayordinal': {\r\n                    group.addControl(field.name, this.fb.array([this.fb.group({ ordinal: [1], amount: this.fb.control(field.value, this.bindValidations(field.validations || [])) })]));\r\n                    const num = field.collections + 1;\r\n                    for (let i = 2; i < num; i++) {\r\n                        group.get([field.name]).push(this.fb.group({ ordinal: [i], amount: this.fb.control(field.value, this.bindValidations(field.validations || [])) }));\r\n                    }\r\n                    break;\r\n                }\r\n                case 'materialUsage': {\r\n                    group.addControl(field.name, this.fb.array([]));\r\n                    break;\r\n                }\r\n                case 'bigexpand': {\r\n                    if (field.value === 'required') {\r\n                        group.addControl(field.name, this.fb.array([this.createItem(field)], atLeastOneRequired()));\r\n                    }\r\n                    else {\r\n                        group.addControl(field.name, this.fb.array([this.createItem(field)]));\r\n                    }\r\n                    break;\r\n                }\r\n                case 'bigoutside':\r\n                case 'bignotexpand': {\r\n                    group.addControl(field.name, this.createItem(field));\r\n                    break;\r\n                }\r\n                default: {\r\n                    const control = this.fb.control(field.value, this.bindValidations(field.validations || []));\r\n                    group.addControl(field.name, control);\r\n                }\r\n            }\r\n        });\r\n        return group;\r\n    }\r\n    createItem(field) {\r\n        var group2;\r\n        if (field.hasOwnProperty('validations')) {\r\n            group2 = this.fb.group({}, { validators: [allOrNoneRequired(field.validations)] });\r\n        }\r\n        else {\r\n            group2 = this.fb.group({});\r\n        }\r\n        field.collections.forEach(kid => {\r\n            let temp = Object.assign({}, kid);\r\n            switch (temp.type) {\r\n                case 'divider': {\r\n                    break;\r\n                }\r\n                case 'inputselect': {\r\n                    if (temp.name) {\r\n                        group2.addControl(temp.name, this.createItem(temp));\r\n                    }\r\n                    else {\r\n                        temp.collections.forEach(opt => {\r\n                            const control = this.fb.control(opt.value, this.bindValidations(opt.validations || []));\r\n                            group2.addControl(opt.name, control);\r\n                        });\r\n                    }\r\n                    break;\r\n                }\r\n                case 'selectgroup': {\r\n                    const control = this.fb.control(temp.collections[1].value, this.bindValidations(temp.collections[1].validations || []));\r\n                    group2.addControl(temp.collections[1].name, control);\r\n                    break;\r\n                }\r\n                case 'calculatefew': {\r\n                    if (temp.name) {\r\n                        group2.addControl(temp.name, this.createItem(temp));\r\n                    }\r\n                    else {\r\n                        this.createCalculateFewNoName(group2, temp);\r\n                    }\r\n                    break;\r\n                }\r\n                case 'array': {\r\n                    group2.addControl(temp.name, this.fb.array([this.fb.group({ value: this.fb.control(temp.value, this.bindValidations(temp.validations || [])) })]));\r\n                    break;\r\n                }\r\n                case 'arrayordinal': {\r\n                    group2.addControl(temp.name, this.fb.array([this.fb.group({ ordinal: [1], amount: this.fb.control(temp.value, this.bindValidations(temp.validations || [])) })]));\r\n                    const num = temp.collections + 1;\r\n                    for (let i = 2; i < num; i++) {\r\n                        group2.get([temp.name]).push(this.fb.group({ ordinal: [i], amount: this.fb.control(temp.value, this.bindValidations(temp.validations || [])) }));\r\n                    }\r\n                    break;\r\n                }\r\n                case 'materialUsage': {\r\n                    group2.addControl(temp.name, this.fb.array([]));\r\n                    break;\r\n                }\r\n                case 'bigexpand': {\r\n                    if (temp.value === 'required') {\r\n                        group2.addControl(temp.name, this.fb.array([this.createItem(temp)], atLeastOneRequired()));\r\n                    }\r\n                    else {\r\n                        group2.addControl(temp.name, this.fb.array([this.createItem(temp)]));\r\n                    }\r\n                    break;\r\n                }\r\n                case 'bigoutside':\r\n                case 'bignotexpand': {\r\n                    group2.addControl(temp.name, this.createItem(temp));\r\n                    break;\r\n                }\r\n                default: {\r\n                    const control = this.fb.control(temp.value, this.bindValidations(temp.validations || []));\r\n                    group2.addControl(temp.name, control);\r\n                }\r\n            }\r\n        });\r\n        return group2;\r\n    }\r\n    createCalculateFewNoName(group, field) {\r\n        field.collections.forEach(kid => {\r\n            if (kid.type === 'inputselect') {\r\n                if (kid.name) {\r\n                    group.addControl(kid.name, this.createItem(kid));\r\n                }\r\n                else {\r\n                    kid.collections.forEach(element => {\r\n                        const control = this.fb.control(element.value, this.bindValidations(element.validations || []));\r\n                        group.addControl(element.name, control);\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                const control = this.fb.control(kid.value, this.bindValidations(kid.validations || []));\r\n                group.addControl(kid.name, control);\r\n            }\r\n        });\r\n    }\r\n    createCalculateFewWithDataNoName(group, field, value) {\r\n        if (!value) {\r\n            value = {};\r\n        }\r\n        field.collections.forEach(kid => {\r\n            if (kid.type === 'inputselect') {\r\n                if (kid.name) {\r\n                    group.addControl(kid.name, this.createItemWithData(kid, value.hasOwnProperty([kid.name]) ? value[kid.name] : {}));\r\n                }\r\n                else {\r\n                    kid.collections.forEach(element => {\r\n                        const control = this.fb.control({\r\n                            value: value.hasOwnProperty([element.name]) ? value[element.name] : element.value,\r\n                            disabled: element.disable\r\n                        }, this.bindValidations(element.validations || []));\r\n                        group.addControl(element.name, control);\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                const control = this.fb.control({\r\n                    value: value.hasOwnProperty([kid.name]) ? value[kid.name] : kid.value,\r\n                    disabled: kid.disable\r\n                }, this.bindValidations(kid.validations || []));\r\n                group.addControl(kid.name, control);\r\n            }\r\n        });\r\n    }\r\n    bindValidations(validations) {\r\n        if (validations.length > 0) {\r\n            const validList = [];\r\n            validations.forEach(valid => {\r\n                validList.push(valid.validator);\r\n            });\r\n            return Validators.compose(validList);\r\n        }\r\n        return null;\r\n    }\r\n    bindValidationsNoReqierd(validations) {\r\n        if (validations.length > 0) {\r\n            const validList = [];\r\n            validations.forEach(valid => {\r\n                if (valid.name !== 'required') {\r\n                    validList.push(valid.validator);\r\n                }\r\n            });\r\n            return Validators.compose(validList);\r\n        }\r\n        return null;\r\n    }\r\n    validateAllFormFields(formGroup) {\r\n        Object.keys(formGroup.controls).forEach(field => {\r\n            const control = formGroup.get(field);\r\n            //control.markAllAsTouched();\r\n        });\r\n    }\r\n    setValue(value) {\r\n        this.form.patchValue(value);\r\n    }\r\n    createControlWithData() {\r\n        let value = this.putData;\r\n        if (!value) {\r\n            value = {};\r\n        }\r\n        const group = this.fb.group({});\r\n        if (value.hasOwnProperty('id')) {\r\n            group.addControl('id', this.fb.control(value['id'], null));\r\n        }\r\n        if (value.hasOwnProperty('version')) {\r\n            group.addControl('version', this.fb.control(value['version'], null));\r\n        }\r\n        this.fields.forEach(field => {\r\n            switch (field.type) {\r\n                case 'button': {\r\n                    this.submitText = field.label;\r\n                    break;\r\n                }\r\n                case 'divider': {\r\n                    break;\r\n                }\r\n                case 'inputselect': {\r\n                    if (field.name) {\r\n                        group.addControl(field.name, this.createItemWithData(field, value.hasOwnProperty([field.name]) ? value[field.name] : {}));\r\n                    }\r\n                    else {\r\n                        field.collections.forEach(kid => {\r\n                            var control = this.fb.control(value[kid.name] ? value[kid.name] : kid.value, this.bindValidations(kid.validations || []));\r\n                            group.addControl(kid.name, control);\r\n                        });\r\n                    }\r\n                    break;\r\n                }\r\n                case 'selectgroup': {\r\n                    var control = this.fb.control(value[field.collections[1].name] ? value[field.collections[1].name] : field.collections[1].value, this.bindValidations(field.collections[1].validations || []));\r\n                    group.addControl(field.collections[1].name, control);\r\n                    break;\r\n                }\r\n                case 'calculatefew': {\r\n                    if (field.name) {\r\n                        group.addControl(field.name, this.createItemWithData(field, value.hasOwnProperty([field.name]) ? value[field.name] : {}));\r\n                    }\r\n                    else {\r\n                        this.createCalculateFewWithDataNoName(group, field, value);\r\n                    }\r\n                    break;\r\n                }\r\n                case 'array': {\r\n                    let groupJson = null;\r\n                    if (value.hasOwnProperty(field.name)) {\r\n                        groupJson = value[field.name];\r\n                    }\r\n                    if (groupJson && groupJson.length !== 0) {\r\n                        group.addControl(field.name, this.fb.array([this.fb.group({ id: groupJson[0].id, version: groupJson[0].version,\r\n                                value: this.fb.control(groupJson[0].value, this.bindValidations(field.validations || [])) })]));\r\n                        for (let i = 1; i < groupJson.length; i++) {\r\n                            group.get([field.name]).push(this.fb.group({ id: groupJson[i].id, version: groupJson[i].version,\r\n                                value: this.fb.control(groupJson[i].value, this.bindValidationsNoReqierd(field.validations || [])) }));\r\n                        }\r\n                        group.get([field.name]).controls.forEach(lm => lm.markAsDirty());\r\n                    }\r\n                    else {\r\n                        group.addControl(field.name, this.fb.array([this.fb.group({ value: this.fb.control(field.value, this.bindValidations(field.validations || [])) })]));\r\n                    }\r\n                    break;\r\n                }\r\n                case 'arrayordinal': {\r\n                    let groupJson = null;\r\n                    if (value.hasOwnProperty(field.name)) {\r\n                        groupJson = value[field.name];\r\n                    }\r\n                    if (field.inputType === 'choose') {\r\n                        if (groupJson && groupJson.length !== 0) {\r\n                            group.addControl(field.name, this.fb.array([this.fb.group({ storageId: groupJson[0].storageId, storageVersion: groupJson[0].storageVersion, take: groupJson[0].take ? true : false, id: groupJson[0].id, version: groupJson[0].version, ordinal: groupJson[0].ordinal, amount: this.fb.control(groupJson[0].amount, this.bindValidations(field.validations || [])) })]));\r\n                            for (let i = 1; i < groupJson.length; i++) {\r\n                                group.get([field.name]).push(this.fb.group({ storageId: groupJson[i].storageId, storageVersion: groupJson[i].storageVersion, take: groupJson[i].take ? true : false, id: groupJson[i].id, version: groupJson[i].version, ordinal: groupJson[i].ordinal, amount: this.fb.control(groupJson[i].amount, this.bindValidations(field.validations || [])) }));\r\n                            }\r\n                            group.get([field.name]).controls.forEach(lm => lm.markAsDirty());\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (groupJson && groupJson.length !== 0) {\r\n                            var groupLocation = 0;\r\n                            if (groupJson[0].ordinal === 1) {\r\n                                group.addControl(field.name, this.fb.array([this.fb.group({ id: groupJson[0].id, version: groupJson[0].version, ordinal: 1, amount: this.fb.control(groupJson[0].amount, this.bindValidations(field.validations || [])) })]));\r\n                                groupLocation++;\r\n                            }\r\n                            else {\r\n                                group.addControl(field.name, this.fb.array([this.fb.group({ ordinal: 1, amount: this.fb.control(field.value, this.bindValidations(field.validations || [])) })]));\r\n                            }\r\n                            const num = field.collections + 1;\r\n                            for (let i = 2; i < num; i++) {\r\n                                if (groupLocation < groupJson.length && groupJson[groupLocation].ordinal === i) {\r\n                                    group.get([field.name]).push(this.fb.group({ id: groupJson[groupLocation].id, version: groupJson[groupLocation].version, ordinal: i, amount: this.fb.control(groupJson[groupLocation].amount, this.bindValidations(field.validations || [])) }));\r\n                                    groupLocation++;\r\n                                }\r\n                                else {\r\n                                    group.get([field.name]).push(this.fb.group({ ordinal: i, amount: this.fb.control(field.value, this.bindValidations(field.validations || [])) }));\r\n                                }\r\n                            }\r\n                            while (groupLocation < groupJson.length) {\r\n                                for (let i = group.get([field.name]).length + 1; i < groupJson[groupLocation].ordinal; i++) {\r\n                                    group.get([field.name]).push(this.fb.group({ ordinal: i, amount: this.fb.control(field.value, this.bindValidations(field.validations || [])) }));\r\n                                }\r\n                                group.get([field.name]).push(this.fb.group({ id: groupJson[groupLocation].id, version: groupJson[groupLocation].version, ordinal: groupJson[groupLocation].ordinal, amount: this.fb.control(groupJson[groupLocation].amount, this.bindValidations(field.validations || [])) }));\r\n                                groupLocation++;\r\n                            }\r\n                            group.get([field.name]).controls.forEach(lm => { if (lm.contains('id')) {\r\n                                lm.markAsDirty();\r\n                            } });\r\n                        }\r\n                        else {\r\n                            group.addControl(field.name, this.fb.array([this.fb.group({ ordinal: [1], amount: this.fb.control(field.value, this.bindValidations(field.validations || [])) })]));\r\n                            const num = field.collections + 1;\r\n                            for (let i = 2; i < num; i++) {\r\n                                group.get([field.name]).push(this.fb.group({ ordinal: [i], amount: this.fb.control(field.value, this.bindValidations(field.validations || [])) }));\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case 'materialUsage': {\r\n                    if (!value.hasOwnProperty(field.name) || !value[field.name] || !value[field.name].length) {\r\n                        group.addControl(field.name, this.fb.array([]));\r\n                        break;\r\n                    }\r\n                    field.options = 'numberUsedUnits';\r\n                }\r\n                case 'tableWithInput': {\r\n                    let groupJson = null;\r\n                    if (value.hasOwnProperty(field.name)) {\r\n                        groupJson = value[field.name];\r\n                    }\r\n                    group.addControl(field.name, this.fb.array([this.createItemWithData(field, groupJson[0])]));\r\n                    var control = this.fb.control(groupJson[0][field.options]);\r\n                    group.get([field.name]).at(0).addControl(field.options, control);\r\n                    for (let i = 1; i < groupJson.length; i++) {\r\n                        group.get([field.name]).push(this.createItemWithData(field, groupJson[i]));\r\n                        var control = this.fb.control(groupJson[i][field.options]);\r\n                        group.get([field.name]).at(i).addControl(field.options, control);\r\n                    }\r\n                    group.get([field.name]).controls.forEach(lm => lm.markAsDirty());\r\n                    break;\r\n                }\r\n                case 'bigexpand': {\r\n                    let groupJson = null;\r\n                    if (value.hasOwnProperty(field.name)) {\r\n                        groupJson = value[field.name];\r\n                    }\r\n                    if (field.value === 'required') {\r\n                        if (groupJson && groupJson.length !== 0) {\r\n                            group.addControl(field.name, this.fb.array([this.createItemWithData(field, groupJson[0])], atLeastOneRequired()));\r\n                            for (let i = 1; i < groupJson.length; i++) {\r\n                                group.get([field.name]).push(this.createItemWithData(field, groupJson[i]));\r\n                            }\r\n                            group.get([field.name]).controls.forEach(lm => lm.markAsDirty());\r\n                        }\r\n                        else {\r\n                            group.addControl(field.name, this.fb.array([this.createItemWithData(field, {})], atLeastOneRequired()));\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (groupJson && groupJson.length !== 0) {\r\n                            group.addControl(field.name, this.fb.array([this.createItemWithData(field, groupJson[0])]));\r\n                            for (let i = 1; i < groupJson.length; i++) {\r\n                                group.get([field.name]).push(this.createItemWithData(field, groupJson[i]));\r\n                            }\r\n                            group.get([field.name]).controls.forEach(lm => lm.markAsDirty());\r\n                        }\r\n                        else {\r\n                            group.addControl(field.name, this.fb.array([this.createItemWithData(field, {})]));\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case 'bigoutside':\r\n                case 'bignotexpand': {\r\n                    group.addControl(field.name, this.createItemWithData(field, value.hasOwnProperty([field.name]) ? value[field.name] : {}));\r\n                    break;\r\n                }\r\n                default: {\r\n                    const control = this.fb.control(value.hasOwnProperty(field.name) ? value[field.name] : field.value, this.bindValidations(field.validations || []));\r\n                    group.addControl(field.name, control);\r\n                }\r\n            }\r\n        });\r\n        return group;\r\n    }\r\n    createItemWithData(field, value) {\r\n        if (!value) {\r\n            value = {};\r\n        }\r\n        var group2;\r\n        if (field.hasOwnProperty('validations')) {\r\n            group2 = this.fb.group({}, { validators: [allOrNoneRequired(field.validations)] });\r\n        }\r\n        else {\r\n            group2 = this.fb.group({});\r\n        }\r\n        if (value.hasOwnProperty('id')) {\r\n            group2.addControl('id', this.fb.control(value['id'], null));\r\n        }\r\n        if (value.hasOwnProperty('version')) {\r\n            group2.addControl('version', this.fb.control(value['version'], null));\r\n        }\r\n        field.collections.forEach(kid => {\r\n            let temp = Object.assign({}, kid);\r\n            switch (temp.type) {\r\n                case 'divider': {\r\n                    break;\r\n                }\r\n                case 'inputselect': {\r\n                    if (temp.name) {\r\n                        group2.addControl(temp.name, this.createItemWithData(temp, value.hasOwnProperty([temp.name]) ? value[temp.name] : {}));\r\n                    }\r\n                    else {\r\n                        temp.collections.forEach(opt => {\r\n                            var control = this.fb.control(value[opt.name] ? value[opt.name] : opt.value, this.bindValidations(opt.validations || []));\r\n                            group2.addControl(opt.name, control);\r\n                        });\r\n                    }\r\n                    break;\r\n                }\r\n                case 'selectgroup': {\r\n                    var control = this.fb.control(value[temp.collections[1].name] ? value[temp.collections[1].name] : temp.collections[1].value, this.bindValidations(temp.collections[1].validations || []));\r\n                    group2.addControl(temp.collections[1].name, control);\r\n                    break;\r\n                }\r\n                case 'calculatefew': {\r\n                    if (temp.name) {\r\n                        group2.addControl(temp.name, this.createItemWithData(temp, value.hasOwnProperty([temp.name]) ? value[temp.name] : {}));\r\n                    }\r\n                    else {\r\n                        this.createCalculateFewWithDataNoName(group2, temp, value);\r\n                    }\r\n                    break;\r\n                }\r\n                case 'array': {\r\n                    let groupJson = null;\r\n                    if (value.hasOwnProperty(temp.name)) {\r\n                        groupJson = value[temp.name];\r\n                    }\r\n                    if (groupJson && groupJson.length !== 0) {\r\n                        group2.addControl(temp.name, this.fb.array([this.fb.group({ id: groupJson[0].id, version: groupJson[0].version,\r\n                                value: this.fb.control(groupJson[0].value, this.bindValidations(temp.validations || [])) })]));\r\n                        for (let i = 1; i < groupJson.length; i++) {\r\n                            group2.get([temp.name]).push(this.fb.group({ id: groupJson[i].id, version: groupJson[i].version,\r\n                                value: this.fb.control(groupJson[i].value, this.bindValidationsNoReqierd(temp.validations || [])) }));\r\n                        }\r\n                        group2.get([temp.name]).controls.forEach(tm => tm.markAsDirty());\r\n                    }\r\n                    else {\r\n                        group2.addControl(temp.name, this.fb.array([this.fb.group({ value: this.fb.control(temp.value, this.bindValidations(temp.validations || [])) })]));\r\n                    }\r\n                    break;\r\n                }\r\n                case 'arrayordinal': {\r\n                    let groupJson = null;\r\n                    if (value.hasOwnProperty(temp.name)) {\r\n                        groupJson = value[temp.name];\r\n                    }\r\n                    if (temp.inputType === 'choose') {\r\n                        if (groupJson && groupJson.length !== 0) {\r\n                            group2.addControl(temp.name, this.fb.array([this.fb.group({ storageId: groupJson[0].storageId, storageVersion: groupJson[0].storageVersion, take: groupJson[0].take ? true : false, id: groupJson[0].id, version: groupJson[0].version, ordinal: groupJson[0].ordinal, amount: this.fb.control(groupJson[0].amount, this.bindValidations(temp.validations || [])) })]));\r\n                            for (let i = 1; i < groupJson.length; i++) {\r\n                                group2.get([temp.name]).push(this.fb.group({ storageId: groupJson[i].storageId, storageVersion: groupJson[i].storageVersion, take: groupJson[i].take ? true : false, id: groupJson[i].id, version: groupJson[i].version, ordinal: groupJson[i].ordinal, amount: this.fb.control(groupJson[i].amount, this.bindValidations(temp.validations || [])) }));\r\n                            }\r\n                            group2.get([temp.name]).controls.forEach(tm => tm.markAsDirty());\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (groupJson && groupJson.length !== 0) {\r\n                            var groupLocation = 0;\r\n                            if (groupJson[0].ordinal === 1) {\r\n                                group2.addControl(temp.name, this.fb.array([this.fb.group({ id: groupJson[0].id, version: groupJson[0].version, ordinal: 1, amount: this.fb.control(groupJson[0].amount, this.bindValidations(temp.validations || [])) })]));\r\n                                groupLocation++;\r\n                            }\r\n                            else {\r\n                                group2.addControl(temp.name, this.fb.array([this.fb.group({ ordinal: 1, amount: this.fb.control(temp.value, this.bindValidations(temp.validations || [])) })]));\r\n                            }\r\n                            const num = temp.collections + 1;\r\n                            for (let i = 2; i < num; i++) {\r\n                                if (groupLocation < groupJson.length && groupJson[groupLocation].ordinal === i) {\r\n                                    group2.get([temp.name]).push(this.fb.group({ id: groupJson[groupLocation].id, version: groupJson[groupLocation].version, ordinal: i, amount: this.fb.control(groupJson[groupLocation].amount, this.bindValidations(temp.validations || [])) }));\r\n                                    groupLocation++;\r\n                                }\r\n                                else {\r\n                                    group2.get([temp.name]).push(this.fb.group({ ordinal: i, amount: this.fb.control(temp.value, this.bindValidations(temp.validations || [])) }));\r\n                                }\r\n                            }\r\n                            while (groupLocation < groupJson.length) {\r\n                                for (let i = group2.get([temp.name]).length + 1; i < groupJson[groupLocation].ordinal; i++) {\r\n                                    group2.get([temp.name]).push(this.fb.group({ ordinal: i, amount: this.fb.control(temp.value, this.bindValidations(temp.validations || [])) }));\r\n                                }\r\n                                group2.get([temp.name]).push(this.fb.group({ id: groupJson[groupLocation].id, version: groupJson[groupLocation].version, ordinal: groupJson[groupLocation].ordinal, amount: this.fb.control(groupJson[groupLocation].amount, this.bindValidations(temp.validations || [])) }));\r\n                                groupLocation++;\r\n                            }\r\n                            group2.get([temp.name]).controls.forEach(lm => { if (lm.contains('id')) {\r\n                                lm.markAsDirty();\r\n                            } });\r\n                        }\r\n                        else {\r\n                            group2.addControl(temp.name, this.fb.array([this.fb.group({ ordinal: [1], amount: this.fb.control(temp.value, this.bindValidations(temp.validations || [])) })]));\r\n                            const num = temp.collections + 1;\r\n                            for (let i = 2; i < num; i++) {\r\n                                group2.get([temp.name]).push(this.fb.group({ ordinal: [i], amount: this.fb.control(temp.value, this.bindValidations(temp.validations || [])) }));\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case 'materialUsage': {\r\n                    if (!value.hasOwnProperty(temp.name) || !value[temp.name] || !value[temp.name].length) {\r\n                        group2.addControl(temp.name, this.fb.array([]));\r\n                        break;\r\n                    }\r\n                    temp.options = 'numberUsedUnits';\r\n                }\r\n                case 'tableWithInput': {\r\n                    let groupJson = null;\r\n                    if (value.hasOwnProperty(temp.name)) {\r\n                        groupJson = value[temp.name];\r\n                    }\r\n                    group2.addControl(temp.name, this.fb.array([this.createItemWithData(temp, groupJson[0])]));\r\n                    control = this.fb.control(groupJson[0][temp.options]);\r\n                    group2.get([temp.name]).at(0).addControl(temp.options, control);\r\n                    for (let i = 1; i < groupJson.length; i++) {\r\n                        group2.get([temp.name]).push(this.createItemWithData(temp, groupJson[i]));\r\n                        control = this.fb.control(groupJson[i][temp.options]);\r\n                        group2.get([temp.name]).at(i).addControl(temp.options, control);\r\n                    }\r\n                    group2.get([temp.name]).controls.forEach(tm => tm.markAsDirty());\r\n                    break;\r\n                }\r\n                case 'bigexpand': {\r\n                    let groupJson = null;\r\n                    if (value.hasOwnProperty(temp.name)) {\r\n                        groupJson = value[temp.name];\r\n                    }\r\n                    if (temp.value === 'required') {\r\n                        if (groupJson && groupJson.length !== 0) {\r\n                            group2.addControl(temp.name, this.fb.array([this.createItemWithData(temp, groupJson[0])], atLeastOneRequired()));\r\n                            for (let i = 1; i < groupJson.length; i++) {\r\n                                group2.get([temp.name]).push(this.createItemWithData(temp, groupJson[i]));\r\n                            }\r\n                            group2.get([temp.name]).controls.forEach(tm => tm.markAsDirty());\r\n                        }\r\n                        else {\r\n                            group2.addControl(temp.name, this.fb.array([this.createItemWithData(temp, {})], atLeastOneRequired()));\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (groupJson && groupJson.length !== 0) {\r\n                            group2.addControl(temp.name, this.fb.array([this.createItemWithData(temp, groupJson[0])]));\r\n                            for (let i = 1; i < groupJson.length; i++) {\r\n                                group2.get([temp.name]).push(this.createItemWithData(temp, groupJson[i]));\r\n                            }\r\n                            group2.get([temp.name]).controls.forEach(tm => tm.markAsDirty());\r\n                        }\r\n                        else {\r\n                            group2.addControl(temp.name, this.fb.array([this.createItemWithData(temp, {})]));\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case 'bigoutside':\r\n                case 'bignotexpand': {\r\n                    group2.addControl(temp.name, this.createItemWithData(temp, value.hasOwnProperty([temp.name]) ? value[temp.name] : {}));\r\n                    break;\r\n                }\r\n                default: {\r\n                    control = this.fb.control(value.hasOwnProperty(temp.name) ? value[temp.name] : temp.value, this.bindValidations(temp.validations || []));\r\n                    group2.addControl(temp.name, control);\r\n                }\r\n            }\r\n        });\r\n        return group2;\r\n    }\r\n    ngOnDestroy() {\r\n        this.oneClickOnlySubscription.unsubscribe();\r\n    }\r\n}\r\nDynamicFormComponent.ɵfac = function DynamicFormComponent_Factory(t) { return new (t || DynamicFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatSnackBar)); };\r\nDynamicFormComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DynamicFormComponent, selectors: [[\"dynamic-form\"]], inputs: { fields: \"fields\", mainLabel: \"mainLabel\", popup: \"popup\", putData: \"putData\" }, outputs: { submitForm: \"submitForm\" }, decls: 5, vars: 7, consts: function () { let i18n_0; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\r\n        const MSG_EXTERNAL_7808756054397155068$$SRC_APP_COMPONENTS_DYNAMIC_FORM_DYNAMIC_FORM_COMPONENT_TS__1 = goog.getMsg(\"Reset\");\r\n        i18n_0 = MSG_EXTERNAL_7808756054397155068$$SRC_APP_COMPONENTS_DYNAMIC_FORM_DYNAMIC_FORM_COMPONENT_TS__1;\r\n    }\r\n    else {\r\n        i18n_0 = $localize `:␟06c663bf1474713f57551123a46b34318543b67d␟7808756054397155068:Reset`;\r\n    } return [[\"autocomplete\", \"off\", \"focusInvalidInput\", \"\", 1, \"dynamic-form\", 3, \"formGroup\", \"popup\", \"ngSubmit\"], [3, \"ngStyle\"], [4, \"ngIf\"], [\"dynamicField\", \"\", 3, \"edit\", \"field\", \"group\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"margin-top\", \"style\", \"text-align:right\", 4, \"ngIf\"], [\"dynamicField\", \"\", 3, \"edit\", \"field\", \"group\"], [1, \"margin-top\", 2, \"text-align\", \"right\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\", 2, \"min-width\", \"150px\", \"margin-right\", \"45px\"], [\"type\", \"button\", \"mat-raised-button\", \"\", \"color\", \"primary\", 2, \"min-width\", \"150px\", 3, \"click\"], i18n_0]; }, template: function DynamicFormComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"form\", 0);\r\n        i0.ɵɵlistener(\"ngSubmit\", function DynamicFormComponent_Template_form_ngSubmit_0_listener($event) { return ctx.oneClickChanged.next($event); });\r\n        i0.ɵɵelementStart(1, \"fieldset\", 1);\r\n        i0.ɵɵtemplate(2, DynamicFormComponent_legend_2_Template, 3, 1, \"legend\", 2);\r\n        i0.ɵɵtemplate(3, DynamicFormComponent_ng_container_3_Template, 1, 3, \"ng-container\", 3);\r\n        i0.ɵɵtemplate(4, DynamicFormComponent_div_4_Template, 5, 1, \"div\", 4);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"formGroup\", ctx.form)(\"popup\", ctx.popup);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(6, _c2));\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.mainLabel);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.fields);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.submitText);\r\n    } }, encapsulation: 2 });\r\n"]},"metadata":{},"sourceType":"module"}