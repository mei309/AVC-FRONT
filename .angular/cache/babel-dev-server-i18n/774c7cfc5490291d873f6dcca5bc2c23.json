{"ast":null,"code":"import { take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../genral.service\";\nimport * as i2 from \"./user-account.service\";\nimport * as i3 from \"../tables/date-range-select.component\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/select\";\nimport * as i6 from \"@angular/material/core\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../tables/search-expanable.component\";\n\nfunction MassagesListComponent_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r1);\n  }\n}\n\nexport class MassagesListComponent {\n  constructor(genral, LocalService) {\n    this.genral = genral;\n    this.LocalService = LocalService;\n    this.myButtons = ['mark as unseen'];\n    this.myTypes = ['NEW', 'SEEN'];\n    this.columnsMassages = [{\n      name: 'title',\n      label: \"Title\",\n      search: 'normal'\n    }, {\n      name: 'processType',\n      label: \"Process type\",\n      search: 'select',\n      options: this.genral.getProcess()\n    }, {\n      type: 'arrayVal',\n      name: 'poCodes',\n      label: \"PO#\",\n      // search: 'object',\n      group: 'poCodes'\n    }, {\n      type: 'arrayVal',\n      name: 'suppliers',\n      label: \"Supplier\",\n      search: 'selectObjArr',\n      options: this.genral.getSuppliersCashew()\n    }, {\n      name: 'modifiedBy',\n      label: \"Modified by\",\n      search: 'normal'\n    }, {\n      type: 'dateTime',\n      name: 'createdDate',\n      label: \"Created date\",\n      search: 'dates'\n    }];\n  }\n\n  ngOnInit() {}\n\n  getAllByDate($event) {\n    this.massagesSource = null;\n    this.source = null;\n    this.genral.getUserMassages($event).pipe(take(1)).subscribe(value => {\n      this.massagesSource = value;\n      this.source = value;\n    });\n  }\n\n  expandElement($event) {\n    this.poInfromtion = {};\n\n    if ($event['processId']) {\n      this.LocalService.getMassage($event['processId'], $event['id'], $event['processName']).pipe(take(1)).subscribe(value => {\n        this.poInfromtion = value;\n        $event['label'] = 'SEEN';\n      });\n    } else {\n      this.genral.setMassageTask($event['id'], 'SEEN').pipe(take(1)).subscribe(value => {\n        $event['label'] = 'SEEN';\n      });\n    }\n  }\n\n  goToOpartion(obj) {\n    if (obj.opartion === 'mark as unseen') {\n      this.genral.setMassageTask(obj.dataRow['id'], 'NEW').pipe(take(1)).subscribe(value => {\n        obj.dataRow['label'] = 'NEW';\n      });\n    }\n  }\n\n  applyFilter($event) {\n    if ($event === '') {\n      this.massagesSource = this.source;\n    } else {\n      this.massagesSource = this.source.filter(book => book.label === $event);\n    }\n  }\n\n}\n\nMassagesListComponent.ɵfac = function MassagesListComponent_Factory(t) {\n  return new (t || MassagesListComponent)(i0.ɵɵdirectiveInject(i1.Genral), i0.ɵɵdirectiveInject(i2.UserAccountService));\n};\n\nMassagesListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MassagesListComponent,\n  selectors: [[\"massages-list\"]],\n  decls: 9,\n  vars: 5,\n  consts: function () {\n    let i18n_0;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_942550212578179212$$SRC_APP_USER_ACCOUNT_MASSAGES_LIST_COMPONENT_TS_1 = goog.getMsg(\"Messages center\");\n      i18n_0 = MSG_EXTERNAL_942550212578179212$$SRC_APP_USER_ACCOUNT_MASSAGES_LIST_COMPONENT_TS_1;\n    } else {\n      i18n_0 = \"Messages center\";\n    }\n\n    return [[2, \"text-align\", \"center\"], i18n_0, [3, \"submitRange\"], [1, \"no-print\", 2, \"margin-bottom\", \"10px\", \"margin-left\", \"25px\"], [\"placeholder\", \"Categories\", 3, \"selectionChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"dataSource\", \"oneColumns\", \"buttons\", \"expandableMassage\", \"expanded\", \"elemnetClick\"], [3, \"value\"]];\n  },\n  template: function MassagesListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵi18n(1, 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"date-range-select\", 2);\n      i0.ɵɵlistener(\"submitRange\", function MassagesListComponent_Template_date_range_select_submitRange_2_listener($event) {\n        return ctx.getAllByDate($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(4, \"mat-select\", 4);\n      i0.ɵɵlistener(\"selectionChange\", function MassagesListComponent_Template_mat_select_selectionChange_4_listener($event) {\n        return ctx.applyFilter($event.value);\n      });\n      i0.ɵɵelementStart(5, \"mat-option\", 5);\n      i0.ɵɵtext(6, \"--all--\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, MassagesListComponent_mat_option_7_Template, 2, 2, \"mat-option\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"search-expandable\", 7);\n      i0.ɵɵlistener(\"expanded\", function MassagesListComponent_Template_search_expandable_expanded_8_listener($event) {\n        return ctx.expandElement($event);\n      })(\"elemnetClick\", function MassagesListComponent_Template_search_expandable_elemnetClick_8_listener($event) {\n        return ctx.goToOpartion($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.myTypes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"dataSource\", ctx.massagesSource)(\"oneColumns\", ctx.columnsMassages)(\"buttons\", ctx.myButtons)(\"expandableMassage\", ctx.poInfromtion);\n    }\n  },\n  directives: [i3.DateRangeSelect, i4.MatFormField, i5.MatSelect, i6.MatOption, i7.NgForOf, i8.SearchExpandableComponent],\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:/Users/isral/OneDrive/Documents/AVC-FRONT/src/app/user-account/massages-list.component.ts"],"names":["take","i0","i1","i2","i3","i4","i5","i6","i7","i8","MassagesListComponent_mat_option_7_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","item_r1","$implicit","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","MassagesListComponent","constructor","genral","LocalService","myButtons","myTypes","columnsMassages","name","label","search","options","getProcess","type","group","getSuppliersCashew","ngOnInit","getAllByDate","$event","massagesSource","source","getUserMassages","pipe","subscribe","value","expandElement","poInfromtion","getMassage","setMassageTask","goToOpartion","obj","opartion","dataRow","applyFilter","filter","book","ɵfac","MassagesListComponent_Factory","t","ɵɵdirectiveInject","Genral","UserAccountService","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","consts","i18n_0","ngI18nClosureMode","MSG_EXTERNAL_942550212578179212$$SRC_APP_USER_ACCOUNT_MASSAGES_LIST_COMPONENT_TS_1","goog","getMsg","template","MassagesListComponent_Template","ɵɵi18n","ɵɵlistener","MassagesListComponent_Template_date_range_select_submitRange_2_listener","MassagesListComponent_Template_mat_select_selectionChange_4_listener","ɵɵtemplate","MassagesListComponent_Template_search_expandable_expanded_8_listener","MassagesListComponent_Template_search_expandable_elemnetClick_8_listener","directives","DateRangeSelect","MatFormField","MatSelect","MatOption","NgForOf","SearchExpandableComponent","encapsulation"],"mappings":"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","sourcesContent":["import { take } from 'rxjs/operators';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../genral.service\";\r\nimport * as i2 from \"./user-account.service\";\r\nimport * as i3 from \"../tables/date-range-select.component\";\r\nimport * as i4 from \"@angular/material/form-field\";\r\nimport * as i5 from \"@angular/material/select\";\r\nimport * as i6 from \"@angular/material/core\";\r\nimport * as i7 from \"@angular/common\";\r\nimport * as i8 from \"../tables/search-expanable.component\";\r\nfunction MassagesListComponent_mat_option_7_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"mat-option\", 8);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const item_r1 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"value\", item_r1);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(item_r1);\r\n} }\r\nexport class MassagesListComponent {\r\n    constructor(genral, LocalService) {\r\n        this.genral = genral;\r\n        this.LocalService = LocalService;\r\n        this.myButtons = ['mark as unseen'];\r\n        this.myTypes = ['NEW', 'SEEN'];\r\n        this.columnsMassages = [\r\n            {\r\n                name: 'title',\r\n                label: $localize `Title`,\r\n                search: 'normal',\r\n            },\r\n            {\r\n                name: 'processType',\r\n                label: $localize `Process type`,\r\n                search: 'select',\r\n                options: this.genral.getProcess()\r\n            },\r\n            {\r\n                type: 'arrayVal',\r\n                name: 'poCodes',\r\n                label: $localize `PO#`,\r\n                // search: 'object',\r\n                group: 'poCodes',\r\n            },\r\n            {\r\n                type: 'arrayVal',\r\n                name: 'suppliers',\r\n                label: $localize `Supplier`,\r\n                search: 'selectObjArr',\r\n                options: this.genral.getSuppliersCashew(),\r\n            },\r\n            {\r\n                name: 'modifiedBy',\r\n                label: $localize `Modified by`,\r\n                search: 'normal',\r\n            },\r\n            {\r\n                type: 'dateTime',\r\n                name: 'createdDate',\r\n                label: $localize `Created date`,\r\n                search: 'dates',\r\n            },\r\n        ];\r\n    }\r\n    ngOnInit() {\r\n    }\r\n    getAllByDate($event) {\r\n        this.massagesSource = null;\r\n        this.source = null;\r\n        this.genral.getUserMassages($event).pipe(take(1)).subscribe(value => {\r\n            this.massagesSource = value;\r\n            this.source = value;\r\n        });\r\n    }\r\n    expandElement($event) {\r\n        this.poInfromtion = {};\r\n        if ($event['processId']) {\r\n            this.LocalService.getMassage($event['processId'], $event['id'], $event['processName']).pipe(take(1)).subscribe(value => {\r\n                this.poInfromtion = value;\r\n                $event['label'] = 'SEEN';\r\n            });\r\n        }\r\n        else {\r\n            this.genral.setMassageTask($event['id'], 'SEEN').pipe(take(1)).subscribe(value => {\r\n                $event['label'] = 'SEEN';\r\n            });\r\n        }\r\n    }\r\n    goToOpartion(obj) {\r\n        if (obj.opartion === 'mark as unseen') {\r\n            this.genral.setMassageTask(obj.dataRow['id'], 'NEW').pipe(take(1)).subscribe(value => {\r\n                obj.dataRow['label'] = 'NEW';\r\n            });\r\n        }\r\n    }\r\n    applyFilter($event) {\r\n        if ($event === '') {\r\n            this.massagesSource = this.source;\r\n        }\r\n        else {\r\n            this.massagesSource = this.source.filter(book => book.label === $event);\r\n        }\r\n    }\r\n}\r\nMassagesListComponent.ɵfac = function MassagesListComponent_Factory(t) { return new (t || MassagesListComponent)(i0.ɵɵdirectiveInject(i1.Genral), i0.ɵɵdirectiveInject(i2.UserAccountService)); };\r\nMassagesListComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: MassagesListComponent, selectors: [[\"massages-list\"]], decls: 9, vars: 5, consts: function () { let i18n_0; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\r\n        const MSG_EXTERNAL_942550212578179212$$SRC_APP_USER_ACCOUNT_MASSAGES_LIST_COMPONENT_TS_1 = goog.getMsg(\"Messages center\");\r\n        i18n_0 = MSG_EXTERNAL_942550212578179212$$SRC_APP_USER_ACCOUNT_MASSAGES_LIST_COMPONENT_TS_1;\r\n    }\r\n    else {\r\n        i18n_0 = $localize `:␟1a86d2d1405774423b6930640133134de9465642␟942550212578179212:Messages center`;\r\n    } return [[2, \"text-align\", \"center\"], i18n_0, [3, \"submitRange\"], [1, \"no-print\", 2, \"margin-bottom\", \"10px\", \"margin-left\", \"25px\"], [\"placeholder\", \"Categories\", 3, \"selectionChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"dataSource\", \"oneColumns\", \"buttons\", \"expandableMassage\", \"expanded\", \"elemnetClick\"], [3, \"value\"]]; }, template: function MassagesListComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"h1\", 0);\r\n        i0.ɵɵi18n(1, 1);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(2, \"date-range-select\", 2);\r\n        i0.ɵɵlistener(\"submitRange\", function MassagesListComponent_Template_date_range_select_submitRange_2_listener($event) { return ctx.getAllByDate($event); });\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(3, \"mat-form-field\", 3);\r\n        i0.ɵɵelementStart(4, \"mat-select\", 4);\r\n        i0.ɵɵlistener(\"selectionChange\", function MassagesListComponent_Template_mat_select_selectionChange_4_listener($event) { return ctx.applyFilter($event.value); });\r\n        i0.ɵɵelementStart(5, \"mat-option\", 5);\r\n        i0.ɵɵtext(6, \"--all--\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵtemplate(7, MassagesListComponent_mat_option_7_Template, 2, 2, \"mat-option\", 6);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(8, \"search-expandable\", 7);\r\n        i0.ɵɵlistener(\"expanded\", function MassagesListComponent_Template_search_expandable_expanded_8_listener($event) { return ctx.expandElement($event); })(\"elemnetClick\", function MassagesListComponent_Template_search_expandable_elemnetClick_8_listener($event) { return ctx.goToOpartion($event); });\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(7);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.myTypes);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"dataSource\", ctx.massagesSource)(\"oneColumns\", ctx.columnsMassages)(\"buttons\", ctx.myButtons)(\"expandableMassage\", ctx.poInfromtion);\r\n    } }, directives: [i3.DateRangeSelect, i4.MatFormField, i5.MatSelect, i6.MatOption, i7.NgForOf, i8.SearchExpandableComponent], encapsulation: 2 });\r\n"]},"metadata":{},"sourceType":"module"}