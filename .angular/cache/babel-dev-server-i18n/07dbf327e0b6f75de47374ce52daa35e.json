{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"../../libraries/numeric.directive\";\n\nfunction InputToPercentageComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\u00A0(\", ctx_r0.prefix, \")\");\n  }\n}\n\nfunction InputToPercentageComponent_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵi18n(1, 5);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InputToPercentageComponent_ng_container_6_mat_error_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const validation_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(validation_r3.message);\n  }\n}\n\nfunction InputToPercentageComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 6);\n    i0.ɵɵtemplate(1, InputToPercentageComponent_ng_container_6_mat_error_1_Template, 2, 1, \"mat-error\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const validation_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.group.get(ctx_r2.field.name).hasError(validation_r3.name));\n  }\n}\n\nexport class InputToPercentageComponent {\n  constructor() {\n    this.destroySubject$ = new Subject();\n    this.percent = 0;\n    this.sum = 0;\n  }\n\n  ngOnInit() {\n    this.group.get([this.field.name]).valueChanges.pipe(takeUntil(this.destroySubject$)).subscribe(val => {\n      this.sum = +val;\n    });\n\n    if (this.field.collections) {\n      this.group.get([this.field.collections]).valueChanges.pipe(takeUntil(this.destroySubject$)).subscribe(val => {\n        this.percent = +val;\n      });\n    }\n\n    if (this.field.inputType) {\n      this.group.get([this.field.inputType]).valueChanges.pipe(takeUntil(this.destroySubject$)).subscribe(val => {\n        this.prefix = val;\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroySubject$.next();\n  }\n\n}\n\nInputToPercentageComponent.ɵfac = function InputToPercentageComponent_Factory(t) {\n  return new (t || InputToPercentageComponent)();\n};\n\nInputToPercentageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InputToPercentageComponent,\n  selectors: [[\"app-input-to-percentage\"]],\n  decls: 10,\n  vars: 11,\n  consts: function () {\n    let i18n_0;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_3507550528453657824$$SRC_APP_COMPONENTS_INPUTS_INPUT_TO_PERCENTAGE_COMPONENT_TS__1 = goog.getMsg(\"Max length 255\");\n      i18n_0 = MSG_EXTERNAL_3507550528453657824$$SRC_APP_COMPONENTS_INPUTS_INPUT_TO_PERCENTAGE_COMPONENT_TS__1;\n    } else {\n      i18n_0 = \"Max length 255\";\n    }\n\n    return [[1, \"one-field\", 3, \"formGroup\"], [4, \"ngIf\"], [\"matInput\", \"\", \"numeric\", \"\", \"type\", \"text\", \"maxlength\", \"255\", 3, \"formControlName\", \"decimals\"], [\"ngProjectAs\", \"mat-error\", 5, [\"mat-error\"], 4, \"ngFor\", \"ngForOf\"], [\"matSuffix\", \"\"], i18n_0, [\"ngProjectAs\", \"mat-error\", 5, [\"mat-error\"]]];\n  },\n  template: function InputToPercentageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-form-field\", 0);\n      i0.ɵɵelementStart(1, \"mat-label\");\n      i0.ɵɵtext(2);\n      i0.ɵɵtemplate(3, InputToPercentageComponent_span_3_Template, 2, 1, \"span\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵtemplate(5, InputToPercentageComponent_mat_error_5_Template, 2, 0, \"mat-error\", 1);\n      i0.ɵɵtemplate(6, InputToPercentageComponent_ng_container_6_Template, 2, 1, \"ng-container\", 3);\n      i0.ɵɵelementStart(7, \"span\", 4);\n      i0.ɵɵtext(8);\n      i0.ɵɵpipe(9, \"percent\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.group);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.field.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.prefix);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControlName\", ctx.field.name)(\"decimals\", ctx.field.options);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.group.get(ctx.field.name).hasError(\"maxlength\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.field.validations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 8, ctx.sum / ctx.percent, \"1.3\"));\n    }\n  },\n  directives: [i1.MatFormField, i2.NgControlStatusGroup, i2.FormGroupDirective, i1.MatLabel, i3.NgIf, i4.MatInput, i2.DefaultValueAccessor, i5.NumericDirective, i2.MaxLengthValidator, i2.NgControlStatus, i2.FormControlName, i3.NgForOf, i1.MatSuffix, i1.MatError],\n  pipes: [i3.PercentPipe],\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:/Users/isral/OneDrive/Documents/AVC-FRONT/src/app/components/inputs/input-to-percentage.component.ts"],"names":["Subject","takeUntil","i0","i1","i2","i3","i4","i5","InputToPercentageComponent_span_3_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate1","prefix","InputToPercentageComponent_mat_error_5_Template","ɵɵi18n","InputToPercentageComponent_ng_container_6_mat_error_1_Template","validation_r3","$implicit","ɵɵtextInterpolate","message","InputToPercentageComponent_ng_container_6_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","ctx_r2","ɵɵproperty","group","get","field","name","hasError","InputToPercentageComponent","constructor","destroySubject$","percent","sum","ngOnInit","valueChanges","pipe","subscribe","val","collections","inputType","ngOnDestroy","next","ɵfac","InputToPercentageComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","i18n_0","ngI18nClosureMode","MSG_EXTERNAL_3507550528453657824$$SRC_APP_COMPONENTS_INPUTS_INPUT_TO_PERCENTAGE_COMPONENT_TS__1","goog","getMsg","template","InputToPercentageComponent_Template","ɵɵelement","ɵɵpipe","label","options","validations","ɵɵpipeBind2","directives","MatFormField","NgControlStatusGroup","FormGroupDirective","MatLabel","NgIf","MatInput","DefaultValueAccessor","NumericDirective","MaxLengthValidator","NgControlStatus","FormControlName","NgForOf","MatSuffix","MatError","pipes","PercentPipe","encapsulation"],"mappings":"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","sourcesContent":["import { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/material/form-field\";\r\nimport * as i2 from \"@angular/forms\";\r\nimport * as i3 from \"@angular/common\";\r\nimport * as i4 from \"@angular/material/input\";\r\nimport * as i5 from \"../../libraries/numeric.directive\";\r\nfunction InputToPercentageComponent_span_3_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"span\");\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate1(\"\\u00A0(\", ctx_r0.prefix, \")\");\r\n} }\r\nfunction InputToPercentageComponent_mat_error_5_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"mat-error\");\r\n    i0.ɵɵi18n(1, 5);\r\n    i0.ɵɵelementEnd();\r\n} }\r\nfunction InputToPercentageComponent_ng_container_6_mat_error_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"mat-error\");\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const validation_r3 = i0.ɵɵnextContext().$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(validation_r3.message);\r\n} }\r\nfunction InputToPercentageComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementContainerStart(0, 6);\r\n    i0.ɵɵtemplate(1, InputToPercentageComponent_ng_container_6_mat_error_1_Template, 2, 1, \"mat-error\", 1);\r\n    i0.ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const validation_r3 = ctx.$implicit;\r\n    const ctx_r2 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.group.get(ctx_r2.field.name).hasError(validation_r3.name));\r\n} }\r\nexport class InputToPercentageComponent {\r\n    constructor() {\r\n        this.destroySubject$ = new Subject();\r\n        this.percent = 0;\r\n        this.sum = 0;\r\n    }\r\n    ngOnInit() {\r\n        this.group.get([this.field.name]).valueChanges.pipe(takeUntil(this.destroySubject$)).subscribe(val => {\r\n            this.sum = +val;\r\n        });\r\n        if (this.field.collections) {\r\n            this.group.get([this.field.collections]).valueChanges.pipe(takeUntil(this.destroySubject$)).subscribe(val => {\r\n                this.percent = +val;\r\n            });\r\n        }\r\n        if (this.field.inputType) {\r\n            this.group.get([this.field.inputType]).valueChanges.pipe(takeUntil(this.destroySubject$)).subscribe(val => {\r\n                this.prefix = val;\r\n            });\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroySubject$.next();\r\n    }\r\n}\r\nInputToPercentageComponent.ɵfac = function InputToPercentageComponent_Factory(t) { return new (t || InputToPercentageComponent)(); };\r\nInputToPercentageComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: InputToPercentageComponent, selectors: [[\"app-input-to-percentage\"]], decls: 10, vars: 11, consts: function () { let i18n_0; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\r\n        const MSG_EXTERNAL_3507550528453657824$$SRC_APP_COMPONENTS_INPUTS_INPUT_TO_PERCENTAGE_COMPONENT_TS__1 = goog.getMsg(\"Max length 255\");\r\n        i18n_0 = MSG_EXTERNAL_3507550528453657824$$SRC_APP_COMPONENTS_INPUTS_INPUT_TO_PERCENTAGE_COMPONENT_TS__1;\r\n    }\r\n    else {\r\n        i18n_0 = $localize `:␟a41decc314508d511e0e51b76a0de40ccb3fb383␟3507550528453657824:Max length 255`;\r\n    } return [[1, \"one-field\", 3, \"formGroup\"], [4, \"ngIf\"], [\"matInput\", \"\", \"numeric\", \"\", \"type\", \"text\", \"maxlength\", \"255\", 3, \"formControlName\", \"decimals\"], [\"ngProjectAs\", \"mat-error\", 5, [\"mat-error\"], 4, \"ngFor\", \"ngForOf\"], [\"matSuffix\", \"\"], i18n_0, [\"ngProjectAs\", \"mat-error\", 5, [\"mat-error\"]]]; }, template: function InputToPercentageComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"mat-form-field\", 0);\r\n        i0.ɵɵelementStart(1, \"mat-label\");\r\n        i0.ɵɵtext(2);\r\n        i0.ɵɵtemplate(3, InputToPercentageComponent_span_3_Template, 2, 1, \"span\", 1);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(4, \"input\", 2);\r\n        i0.ɵɵtemplate(5, InputToPercentageComponent_mat_error_5_Template, 2, 0, \"mat-error\", 1);\r\n        i0.ɵɵtemplate(6, InputToPercentageComponent_ng_container_6_Template, 2, 1, \"ng-container\", 3);\r\n        i0.ɵɵelementStart(7, \"span\", 4);\r\n        i0.ɵɵtext(8);\r\n        i0.ɵɵpipe(9, \"percent\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"formGroup\", ctx.group);\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵtextInterpolate(ctx.field.label);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.prefix);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"formControlName\", ctx.field.name)(\"decimals\", ctx.field.options);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.group.get(ctx.field.name).hasError(\"maxlength\"));\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.field.validations);\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 8, ctx.sum / ctx.percent, \"1.3\"));\r\n    } }, directives: [i1.MatFormField, i2.NgControlStatusGroup, i2.FormGroupDirective, i1.MatLabel, i3.NgIf, i4.MatInput, i2.DefaultValueAccessor, i5.NumericDirective, i2.MaxLengthValidator, i2.NgControlStatus, i2.FormControlName, i3.NgForOf, i1.MatSuffix, i1.MatError], pipes: [i3.PercentPipe], encapsulation: 2 });\r\n"]},"metadata":{},"sourceType":"module"}