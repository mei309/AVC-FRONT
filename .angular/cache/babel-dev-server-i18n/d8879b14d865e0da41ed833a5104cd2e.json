{"ast":null,"code":"import { take } from 'rxjs/operators';\nimport { TodoMassagesPopupComponent } from './todo-massagess-popup.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../genral.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../tables/date-range-select.component\";\nimport * as i5 from \"../tables/search-details.component\";\nexport class TodoListComponent {\n  constructor(genral, dialog, router) {\n    this.genral = genral;\n    this.dialog = dialog;\n    this.router = router;\n    this.columnsTasks = [{\n      name: 'title',\n      label: \"Title\",\n      search: 'normal'\n    }, {\n      name: 'processType',\n      label: \"Process type\",\n      search: 'select',\n      options: this.genral.getProcess()\n    }, {\n      type: 'arrayVal',\n      name: 'poCodes',\n      label: \"PO#\"\n    }, {\n      type: 'arrayVal',\n      name: 'suppliers',\n      label: \"Supplier\",\n      search: 'selectObjArr',\n      options: this.genral.getSuppliersCashew()\n    }, {\n      type: 'dateTime',\n      name: 'createdDate',\n      label: \"Created date\",\n      search: 'dates'\n    }, {\n      name: 'modifiedBy',\n      label: \"Modified by\",\n      search: 'normal'\n    }, {\n      name: 'decisionType',\n      label: \"Decision type\",\n      search: 'select',\n      options: this.genral.getDecisionType()\n    }];\n  }\n\n  ngOnInit() {}\n\n  getAllByDate($event) {\n    this.tasksSource = null;\n    this.dateRange = $event;\n    this.genral.getUserTasks($event).pipe(take(1)).subscribe(value => {\n      this.tasksSource = value;\n    });\n  }\n\n  openDialog($event) {\n    const dialogRef = this.dialog.open(TodoMassagesPopupComponent, {\n      width: '80%',\n      data: {\n        allLine: $event\n      }\n    });\n    dialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        if (typeof data == 'number') {\n          this.router.navigate(['Main/reports/FullPoReport', {\n            poCode: data\n          }]);\n        } else if (dialogRef.componentInstance.approveChange) {\n          this.genral.getUserTasks(this.dateRange).pipe(take(1)).subscribe(value => {\n            this.tasksSource = value;\n          });\n        }\n      }\n    });\n  }\n\n}\n\nTodoListComponent.ɵfac = function TodoListComponent_Factory(t) {\n  return new (t || TodoListComponent)(i0.ɵɵdirectiveInject(i1.Genral), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.Router));\n};\n\nTodoListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TodoListComponent,\n  selectors: [[\"todo-list\"]],\n  decls: 4,\n  vars: 2,\n  consts: function () {\n    let i18n_0;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_EXTERNAL_7761439851862687171$$SRC_APP_USER_ACCOUNT_TODO_LIST_COMPONENT_TS_1 = goog.getMsg(\"Task center\");\n      i18n_0 = MSG_EXTERNAL_7761439851862687171$$SRC_APP_USER_ACCOUNT_TODO_LIST_COMPONENT_TS_1;\n    } else {\n      i18n_0 = \"Task center\";\n    }\n\n    return [[2, \"text-align\", \"center\"], i18n_0, [3, \"submitRange\"], [3, \"dataSource\", \"oneColumns\", \"details\"]];\n  },\n  template: function TodoListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵi18n(1, 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"date-range-select\", 2);\n      i0.ɵɵlistener(\"submitRange\", function TodoListComponent_Template_date_range_select_submitRange_2_listener($event) {\n        return ctx.getAllByDate($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"search-details\", 3);\n      i0.ɵɵlistener(\"details\", function TodoListComponent_Template_search_details_details_3_listener($event) {\n        return ctx.openDialog($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"dataSource\", ctx.tasksSource)(\"oneColumns\", ctx.columnsTasks);\n    }\n  },\n  directives: [i4.DateRangeSelect, i5.SearchDetailsComponent],\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:/Users/isral/OneDrive/Documents/AVC-FRONT/src/app/user-account/todo-list.component.ts"],"names":["take","TodoMassagesPopupComponent","i0","i1","i2","i3","i4","i5","TodoListComponent","constructor","genral","dialog","router","columnsTasks","name","label","search","options","getProcess","type","getSuppliersCashew","getDecisionType","ngOnInit","getAllByDate","$event","tasksSource","dateRange","getUserTasks","pipe","subscribe","value","openDialog","dialogRef","open","width","data","allLine","afterClosed","navigate","poCode","componentInstance","approveChange","ɵfac","TodoListComponent_Factory","t","ɵɵdirectiveInject","Genral","MatDialog","Router","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","consts","i18n_0","ngI18nClosureMode","MSG_EXTERNAL_7761439851862687171$$SRC_APP_USER_ACCOUNT_TODO_LIST_COMPONENT_TS_1","goog","getMsg","template","TodoListComponent_Template","rf","ctx","ɵɵelementStart","ɵɵi18n","ɵɵelementEnd","ɵɵlistener","TodoListComponent_Template_date_range_select_submitRange_2_listener","TodoListComponent_Template_search_details_details_3_listener","ɵɵadvance","ɵɵproperty","directives","DateRangeSelect","SearchDetailsComponent","encapsulation"],"mappings":"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","sourcesContent":["import { take } from 'rxjs/operators';\r\nimport { TodoMassagesPopupComponent } from './todo-massagess-popup.component';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../genral.service\";\r\nimport * as i2 from \"@angular/material/dialog\";\r\nimport * as i3 from \"@angular/router\";\r\nimport * as i4 from \"../tables/date-range-select.component\";\r\nimport * as i5 from \"../tables/search-details.component\";\r\nexport class TodoListComponent {\r\n    constructor(genral, dialog, router) {\r\n        this.genral = genral;\r\n        this.dialog = dialog;\r\n        this.router = router;\r\n        this.columnsTasks = [\r\n            {\r\n                name: 'title',\r\n                label: $localize `Title`,\r\n                search: 'normal',\r\n            },\r\n            {\r\n                name: 'processType',\r\n                label: $localize `Process type`,\r\n                search: 'select',\r\n                options: this.genral.getProcess(),\r\n            },\r\n            {\r\n                type: 'arrayVal',\r\n                name: 'poCodes',\r\n                label: $localize `PO#`,\r\n            },\r\n            {\r\n                type: 'arrayVal',\r\n                name: 'suppliers',\r\n                label: $localize `Supplier`,\r\n                search: 'selectObjArr',\r\n                options: this.genral.getSuppliersCashew(),\r\n            },\r\n            {\r\n                type: 'dateTime',\r\n                name: 'createdDate',\r\n                label: $localize `Created date`,\r\n                search: 'dates',\r\n            },\r\n            {\r\n                name: 'modifiedBy',\r\n                label: $localize `Modified by`,\r\n                search: 'normal',\r\n            },\r\n            {\r\n                name: 'decisionType',\r\n                label: $localize `Decision type`,\r\n                search: 'select',\r\n                options: this.genral.getDecisionType(),\r\n            },\r\n        ];\r\n    }\r\n    ngOnInit() {\r\n    }\r\n    getAllByDate($event) {\r\n        this.tasksSource = null;\r\n        this.dateRange = $event;\r\n        this.genral.getUserTasks($event).pipe(take(1)).subscribe(value => {\r\n            this.tasksSource = value;\r\n        });\r\n    }\r\n    openDialog($event) {\r\n        const dialogRef = this.dialog.open(TodoMassagesPopupComponent, {\r\n            width: '80%',\r\n            data: {\r\n                allLine: $event,\r\n            },\r\n        });\r\n        dialogRef.afterClosed().subscribe(data => {\r\n            if (data) {\r\n                if (typeof data == 'number') {\r\n                    this.router.navigate(['Main/reports/FullPoReport', { poCode: data }]);\r\n                }\r\n                else if (dialogRef.componentInstance.approveChange) {\r\n                    this.genral.getUserTasks(this.dateRange).pipe(take(1)).subscribe(value => {\r\n                        this.tasksSource = value;\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nTodoListComponent.ɵfac = function TodoListComponent_Factory(t) { return new (t || TodoListComponent)(i0.ɵɵdirectiveInject(i1.Genral), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.Router)); };\r\nTodoListComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TodoListComponent, selectors: [[\"todo-list\"]], decls: 4, vars: 2, consts: function () { let i18n_0; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\r\n        const MSG_EXTERNAL_7761439851862687171$$SRC_APP_USER_ACCOUNT_TODO_LIST_COMPONENT_TS_1 = goog.getMsg(\"Task center\");\r\n        i18n_0 = MSG_EXTERNAL_7761439851862687171$$SRC_APP_USER_ACCOUNT_TODO_LIST_COMPONENT_TS_1;\r\n    }\r\n    else {\r\n        i18n_0 = $localize `:␟61a9fcc9972de99fed1ff0f8f516cc25ef811f6d␟7761439851862687171:Task center`;\r\n    } return [[2, \"text-align\", \"center\"], i18n_0, [3, \"submitRange\"], [3, \"dataSource\", \"oneColumns\", \"details\"]]; }, template: function TodoListComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"h1\", 0);\r\n        i0.ɵɵi18n(1, 1);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(2, \"date-range-select\", 2);\r\n        i0.ɵɵlistener(\"submitRange\", function TodoListComponent_Template_date_range_select_submitRange_2_listener($event) { return ctx.getAllByDate($event); });\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(3, \"search-details\", 3);\r\n        i0.ɵɵlistener(\"details\", function TodoListComponent_Template_search_details_details_3_listener($event) { return ctx.openDialog($event); });\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(3);\r\n        i0.ɵɵproperty(\"dataSource\", ctx.tasksSource)(\"oneColumns\", ctx.columnsTasks);\r\n    } }, directives: [i4.DateRangeSelect, i5.SearchDetailsComponent], encapsulation: 2 });\r\n"]},"metadata":{},"sourceType":"module"}