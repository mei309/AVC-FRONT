{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst namesMapper = {\n  Countries: \"Country\",\n  Cities: \"City\",\n  Banks: \"Bank\",\n  BankBranches: \"Bank branch\",\n  Warehouses: \"Warehouse\",\n  SupplyCategories: \"Supply category\",\n  CompanyPositions: \"Company position\",\n  ContractTypes: \"Contract type\",\n  ProductionLines: \"Production line\",\n  CashewStandards: \"Cashew standard\",\n  ShippingPorts: \"Shipping port\",\n  Cbulk: \"Cashew bulk item (material)\",\n  Cpacked: \"Cashew packed item\",\n  Gbulk: \"General bulk item (material)\",\n  Gpacked: \"General packed item\",\n  CbulkQC: \"QC bulk items (material)\",\n  CpackedQC: \"QC packed items\",\n  waste: \"Waste item\",\n  User: \"User\",\n  UserPerson: \"User for person\",\n  CashewGrades: \"Cashew grades\",\n  Bom: \"Bill Of materials\"\n};\nexport class NamingPipe {\n  transform(element, type) {\n    if (type === 'edit') {\n      return \"Edit \" + namesMapper[element];\n    } else if (type === 'add') {\n      return \"Add \" + namesMapper[element];\n    } else {\n      return namesMapper[element];\n    }\n  }\n\n}\n\nNamingPipe.ɵfac = function NamingPipe_Factory(t) {\n  return new (t || NamingPipe)();\n};\n\nNamingPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"namingPipe\",\n  type: NamingPipe,\n  pure: true\n});","map":{"version":3,"sources":["C:/Users/isral/OneDrive/Documents/AVC-FRONT/src/app/manager/naming-setup.pipe.ts"],"names":["i0","namesMapper","Countries","Cities","Banks","BankBranches","Warehouses","SupplyCategories","CompanyPositions","ContractTypes","ProductionLines","CashewStandards","ShippingPorts","Cbulk","Cpacked","Gbulk","Gpacked","CbulkQC","CpackedQC","waste","User","UserPerson","CashewGrades","Bom","NamingPipe","transform","element","type","ɵfac","NamingPipe_Factory","t","ɵpipe","ɵɵdefinePipe","name","pure"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,SAAS,WADO;AAEhBC,EAAAA,MAAM,QAFU;AAGhBC,EAAAA,KAAK,QAHW;AAIhBC,EAAAA,YAAY,eAJI;AAKhBC,EAAAA,UAAU,aALM;AAMhBC,EAAAA,gBAAgB,mBANA;AAOhBC,EAAAA,gBAAgB,oBAPA;AAQhBC,EAAAA,aAAa,iBARG;AAShBC,EAAAA,eAAe,mBATC;AAUhBC,EAAAA,eAAe,mBAVC;AAWhBC,EAAAA,aAAa,iBAXG;AAYhBC,EAAAA,KAAK,+BAZW;AAahBC,EAAAA,OAAO,sBAbS;AAchBC,EAAAA,KAAK,gCAdW;AAehBC,EAAAA,OAAO,uBAfS;AAgBhBC,EAAAA,OAAO,4BAhBS;AAiBhBC,EAAAA,SAAS,mBAjBO;AAkBhBC,EAAAA,KAAK,cAlBW;AAmBhBC,EAAAA,IAAI,QAnBY;AAoBhBC,EAAAA,UAAU,mBApBM;AAqBhBC,EAAAA,YAAY,iBArBI;AAsBhBC,EAAAA,GAAG;AAtBa,CAApB;AAwBA,OAAO,MAAMC,UAAN,CAAiB;AACpBC,EAAAA,SAAS,CAACC,OAAD,EAAUC,IAAV,EAAgB;AACrB,QAAIA,IAAI,KAAK,MAAb,EAAqB;AACjB,aAAO,UAAoB1B,WAAW,CAACyB,OAAD,CAAtC;AACH,KAFD,MAGK,IAAIC,IAAI,KAAK,KAAb,EAAoB;AACrB,aAAO,SAAmB1B,WAAW,CAACyB,OAAD,CAArC;AACH,KAFI,MAGA;AACD,aAAOzB,WAAW,CAACyB,OAAD,CAAlB;AACH;AACJ;;AAXmB;;AAaxBF,UAAU,CAACI,IAAX,GAAkB,SAASC,kBAAT,CAA4BC,CAA5B,EAA+B;AAAE,SAAO,KAAKA,CAAC,IAAIN,UAAV,GAAP;AAAiC,CAApF;;AACAA,UAAU,CAACO,KAAX,GAAmB,aAAc/B,EAAE,CAACgC,YAAH,CAAgB;AAAEC,EAAAA,IAAI,EAAE,YAAR;AAAsBN,EAAAA,IAAI,EAAEH,UAA5B;AAAwCU,EAAAA,IAAI,EAAE;AAA9C,CAAhB,CAAjC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nconst namesMapper = {\r\n    Countries: $localize `Country`,\r\n    Cities: $localize `City`,\r\n    Banks: $localize `Bank`,\r\n    BankBranches: $localize `Bank branch`,\r\n    Warehouses: $localize `Warehouse`,\r\n    SupplyCategories: $localize `Supply category`,\r\n    CompanyPositions: $localize `Company position`,\r\n    ContractTypes: $localize `Contract type`,\r\n    ProductionLines: $localize `Production line`,\r\n    CashewStandards: $localize `Cashew standard`,\r\n    ShippingPorts: $localize `Shipping port`,\r\n    Cbulk: $localize `Cashew bulk item (material)`,\r\n    Cpacked: $localize `Cashew packed item`,\r\n    Gbulk: $localize `General bulk item (material)`,\r\n    Gpacked: $localize `General packed item`,\r\n    CbulkQC: $localize `QC bulk items (material)`,\r\n    CpackedQC: $localize `QC packed items`,\r\n    waste: $localize `Waste item`,\r\n    User: $localize `User`,\r\n    UserPerson: $localize `User for person`,\r\n    CashewGrades: $localize `Cashew grades`,\r\n    Bom: $localize `Bill Of materials`,\r\n};\r\nexport class NamingPipe {\r\n    transform(element, type) {\r\n        if (type === 'edit') {\r\n            return $localize `Edit ` + namesMapper[element];\r\n        }\r\n        else if (type === 'add') {\r\n            return $localize `Add ` + namesMapper[element];\r\n        }\r\n        else {\r\n            return namesMapper[element];\r\n        }\r\n    }\r\n}\r\nNamingPipe.ɵfac = function NamingPipe_Factory(t) { return new (t || NamingPipe)(); };\r\nNamingPipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"namingPipe\", type: NamingPipe, pure: true });\r\n"]},"metadata":{},"sourceType":"module"}